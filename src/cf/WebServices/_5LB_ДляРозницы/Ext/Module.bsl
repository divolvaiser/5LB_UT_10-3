//18.01.2017, Юра
//Data1 = дата получения остатков
//Tovar = наименование товара в УТ11 (Рознице)
//Harakter = наименование характеристики товара в УТ11 (Рознице). Если пустое, тогда вернем остатки по всем характеристикам номенклатуры (в УТ10 это несколько номенклатур)
Функция GetОstatki(Data1,Tovar,Harakter)
	УстановитьПривилегированныйРежим(Истина);
	tzТип = ФабрикаXDTO.Тип("http://www.Ostatki.org/Ostatki", "Tz");
	tz = ФабрикаXDTO.Создать(tzТип);
	elementTZТип = ФабрикаXDTO.Тип("http://www.Ostatki.org/Ostatki", "StructuraOstatki");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	_СоответствияНоменклатуры.Номенклатура КАК Номенклатура,
	               |	_СоответствияНоменклатуры.Номенклатура_УТ11,
	               |	_СоответствияНоменклатуры.Номенклатура.БазоваяЕдиницаИзмерения
	               |ПОМЕСТИТЬ НужнаяНоменклатура
	               |ИЗ
	               |	РегистрСведений._СоответствияНоменклатуры КАК _СоответствияНоменклатуры
	               |ГДЕ
	               |	_СоответствияНоменклатуры.Номенклатура_УТ11 = &Tovar
	               |	И ВЫБОР
	               |			КОГДА &Harakter = """"
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ _СоответствияНоменклатуры.Характеристика.Наименование = &Harakter
	               |		КОНЕЦ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НужнаяНоменклатура.Номенклатура_УТ11,
	               |	НужнаяНоменклатура.НоменклатураБазоваяЕдиницаИзмерения,
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура10,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток
	               |ИЗ
	               |	НужнаяНоменклатура КАК НужнаяНоменклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата1, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	               |		ПО НужнаяНоменклатура.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |ГДЕ
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток > 0";
	Запрос.УстановитьПараметр("Дата1", КонецДня(Data1));
	Запрос.УстановитьПараметр("Tovar",?(ЗначениеЗаполнено(Tovar),Справочники._Номенклатура_УТ11.НайтиПоНаименованию(Tovar,Истина),""));
	Запрос.УстановитьПараметр("Harakter",Harakter);//?(ЗначениеЗаполнено(Harakter),Справочники._ХарактеристикиНоменклатуры_УТ11.НайтиПоНаименованию(Harakter,Истина),Справочники._ХарактеристикиНоменклатуры_УТ11.ПустаяСсылка());
	Запрос.УстановитьПараметр("Склад",Справочники.Склады.НайтиПоКоду("000000005"));//Основной склад. Так, конечно, нельзя программировать, но в УТ10 так работают.
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		elementTZ = ФабрикаXDTO.Создать(elementTZТип);
		elementTZ.Tovar		= Лев(РезультатЗапроса.Номенклатура10,Метаданные.Справочники.Номенклатура.ДлинаНаименования);
		elementTZ.EdIzm		= Лев(РезультатЗапроса.НоменклатураБазоваяЕдиницаИзмерения,Метаданные.Справочники.ЕдиницыИзмерения.ДлинаНаименования);
		elementTZ.Kolich	= РезультатЗапроса.КоличествоОстаток;
		
		tz.Element.Добавить(elementTZ);
	КонецЦикла;
	//добавлю пустую строку для того, чтобы в случаях. когда нет остатков все-таки вернуть нужную структуру (иначе клиент ругаться будет):
	elementTZ = ФабрикаXDTO.Создать(elementTZТип);
	elementTZ.Tovar		= "";
	elementTZ.EdIzm		= "";
	elementTZ.Kolich	= 0;
	tz.Element.Добавить(elementTZ);
	УстановитьПривилегированныйРежим(Ложь);
	Возврат tz;
КонецФункции

//26.01.2017, Юра
Функция GetOtchetZP(Data1, Data2, Kontragent, Menager)
	УстановитьПривилегированныйРежим(Истина);
	ФайлКакBase64 = "";
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("MXL");
	ТабличныйДокумент = Отчеты._5LB_ЗарплатаПродавцовДляРозницы.ПолучитьТабДок(Data1, Data2, Kontragent, Menager);
	ТабличныйДокумент.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.MXL);
	ДвоичныеДанныефайла = Новый ДвоичныеДанные(ИмяВременногоФайла);
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
	КонецПопытки;
	ФайлКакBase64 = Base64Строка(ДвоичныеДанныефайла);
	УстановитьПривилегированныйРежим(Ложь);
	Возврат ФайлКакBase64;
КонецФункции

//30.01.2017, Юра
Функция GetInfoAboutPodarKarta(Nomer)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	// Женя 14.02.18
	// Если получен ШТРИХКОД, тогда из запроса искать по ШТРИХКОДУ, иначе по номеру подарочной карты
	// ((
	Если СтрДлина(Nomer) = 13 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА НАЧАЛОПЕРИОДА(ПодарочныеКарты.ДатаПродажи, ДЕНЬ) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		               |			ТОГДА 0
		               |		ИНАЧЕ 1
		               |	КОНЕЦ КАК Продана,
		               |	ВЫБОР
		               |		КОГДА ПодарочныеКарты.Погашена
		               |			ТОГДА 1
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Погашена,
		               |	ПодарочныеКарты.Номинал,
		               |	ПодарочныеКарты.Номер
		               |ИЗ
		               |	РегистрСведений.ПодарочныеКарты КАК ПодарочныеКарты
		               |ГДЕ
		               |	ПодарочныеКарты.ШтрихКод = &ШтрихКод";
		Запрос.УстановитьПараметр("ШтрихКод",Nomer);
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		СтрокаСостояния = ""+РезультатЗапроса.Продана+""+РезультатЗапроса.Погашена+""+РезультатЗапроса.Номер+""+Лев(РезультатЗапроса.Номинал,150); 
	Иначе
		СтрокаСостояния = "";
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	Возврат СтрокаСостояния;

	Иначе
	// )) 14.02.18
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ПодарочныеКарты.ДатаПродажи, ДЕНЬ) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Продана,
		|	ВЫБОР
		|		КОГДА ПодарочныеКарты.Погашена
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Погашена,
		|	ПодарочныеКарты.Номинал
		|ИЗ
		|	РегистрСведений.ПодарочныеКарты КАК ПодарочныеКарты
		|ГДЕ
		|	ПодарочныеКарты.Номер = &Номер";
		Запрос.УстановитьПараметр("Номер",Nomer);
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		СтрокаСостояния = ""+РезультатЗапроса.Продана+""+РезультатЗапроса.Погашена+""+Лев(РезультатЗапроса.Номинал,150);
	Иначе
		СтрокаСостояния = "";
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	Возврат СтрокаСостояния;

	// (( 14.02.18
	КонецЕсли;
	// )) 14.02.18
	
	КонецФункции

//30.01.2017, Юра
Функция UpDateInfoAboutPodarKarta(Nomer,Nominal,Pogashena,DataPogasheniya,MestoPogasheniya,DataProdazi,MestoProdazi)
		//01.02.2017, Юра
	УстановитьПривилегированныйРежим(Истина);
	Результат = "ОК";
	
	// Женя 13.02.18
	// Проверка на получение номера или штрихкода из Розницы. 
	// Если получен штрихкод, тогда вывести окно ввода проверочного номера.
	// ((
	
	Если ЗначениеЗаполнено(Nomer) Тогда
		// (( 13.02.18
		Если СтрДлина(Nomer) = 13 Тогда // В данном случае параметр "Nomer" выступает в качестве штрихкода
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ПодарочныеКарты.Номинал,
			               |	ПодарочныеКарты.Погашена,
			               |	ПодарочныеКарты.ДатаПогашения,
			               |	ПодарочныеКарты.МестоПогашения,
			               |	ПодарочныеКарты.ДатаПродажи,
			               |	ПодарочныеКарты.МестоПродажи,
			               |	ПодарочныеКарты.Номер
			               |ИЗ
			               |	РегистрСведений.ПодарочныеКарты КАК ПодарочныеКарты
			               |ГДЕ
			               |	ПодарочныеКарты.ШтрихКод = &ШтрихКод";
			
			Запрос.УстановитьПараметр("ШтрихКод",Nomer);
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
			Если РезультатЗапроса.Следующий() Тогда
				Если НЕ РезультатЗапроса.Номинал = Nominal Тогда
					Результат = "Номинал карты штрихкода "+Nomer+" не совпадает с данными в УТ10";
				ИначеЕсли РезультатЗапроса.Погашена и НЕ Pogashena Тогда
					//Обращаю внимание на то, что при отмене проведения в Рознице, карта будет всё-равно погашена в УТ10
					//так и надо (во избежании махинаций)
					Результат = "Карта штрихкода "+Nomer+" была погашена, а вы пытаетесь сказать, что она не погашена";
				ИначеЕсли РезультатЗапроса.ДатаПродажи ='00010101' и Pogashena Тогда
					Результат = "Карта штрихкода "+Nomer+" не продана, а вы пытаетесь сказать, что она погашена";
				Иначе
					МенЗаписи = РегистрыСведений.ПодарочныеКарты.СоздатьМенеджерЗаписи();
					МенЗаписи.ШтрихКод		= Nomer;
					МенЗаписи.Номинал		= Nominal;
					МенЗаписи.Погашена		= РезультатЗапроса.Погашена ИЛИ Pogashena;
					МенЗаписи.ДатаПогашения	= ?(ЗначениеЗаполнено(РезультатЗапроса.ДатаПогашения),РезультатЗапроса.ДатаПогашения,DataPogasheniya);
					МенЗаписи.МестоПогашения= ?(ЗначениеЗаполнено(РезультатЗапроса.МестоПогашения),РезультатЗапроса.МестоПогашения,Справочники.Контрагенты.НайтиПоНаименованию(MestoPogasheniya,Истина));
					МенЗаписи.ДатаПродажи	= ?(ЗначениеЗаполнено(РезультатЗапроса.ДатаПродажи),РезультатЗапроса.ДатаПродажи,DataProdazi);
					МенЗаписи.МестоПродажи	= ?(ЗначениеЗаполнено(РезультатЗапроса.МестоПродажи),РезультатЗапроса.МестоПродажи,Справочники.Контрагенты.НайтиПоНаименованию(MestoProdazi,Истина));
					МенЗаписи.Номер			= ?(ЗначениеЗаполнено(РезультатЗапроса.Номер),РезультатЗапроса.Номер,РегистрыСведений.ПодарочныеКарты.НайтиПоНаименованию(Nomer,Истина));
					МенЗаписи.Записать();
				КонецЕсли;
			Иначе
				Результат = "Карта с штрихкодом "+Nomer+" не найдена";
			КонецЕсли;
			
		Иначе
			// )) 13.02.18
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ 
			|	ПодарочныеКарты.Номинал,
			|	ПодарочныеКарты.Погашена,
			|	ПодарочныеКарты.ДатаПогашения,
			|	ПодарочныеКарты.МестоПогашения,
			|	ПодарочныеКарты.ДатаПродажи,
			|	ПодарочныеКарты.МестоПродажи
			|ИЗ
			|	РегистрСведений.ПодарочныеКарты КАК ПодарочныеКарты
			|ГДЕ
			|	ПодарочныеКарты.Номер = &Номер";
			Запрос.УстановитьПараметр("Номер",Nomer);
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
			Если РезультатЗапроса.Следующий() Тогда
				Если НЕ РезультатЗапроса.Номинал = Nominal Тогда
					Результат = "Номинал карты номер "+Nomer+" не совпадает с данными в УТ10";
				ИначеЕсли РезультатЗапроса.Погашена и НЕ Pogashena Тогда
					//Обращаю внимание на то, что при отмене проведения в Рознице, карта будет всё-равно погашена в УТ10
					//так и надо (во избежании махинаций)
					Результат = "Карта номер "+Nomer+" была погашена, а вы пытаетесь сказать, что она не погашена";
				ИначеЕсли РезультатЗапроса.ДатаПродажи ='00010101' и Pogashena Тогда
					Результат = "Карта номер "+Nomer+" не продана, а вы пытаетесь сказать, что она погашена";
				Иначе
					МенЗаписи = РегистрыСведений.ПодарочныеКарты.СоздатьМенеджерЗаписи();
					МенЗаписи.Номер			= Nomer;
					МенЗаписи.Номинал		= Nominal;
					МенЗаписи.Погашена		= РезультатЗапроса.Погашена ИЛИ Pogashena;
					МенЗаписи.ДатаПогашения	= ?(ЗначениеЗаполнено(РезультатЗапроса.ДатаПогашения),РезультатЗапроса.ДатаПогашения,DataPogasheniya);
					МенЗаписи.МестоПогашения= ?(ЗначениеЗаполнено(РезультатЗапроса.МестоПогашения),РезультатЗапроса.МестоПогашения,Справочники.Контрагенты.НайтиПоНаименованию(MestoPogasheniya,Истина));
					МенЗаписи.ДатаПродажи	= ?(ЗначениеЗаполнено(РезультатЗапроса.ДатаПродажи),РезультатЗапроса.ДатаПродажи,DataProdazi);
					МенЗаписи.МестоПродажи	= ?(ЗначениеЗаполнено(РезультатЗапроса.МестоПродажи),РезультатЗапроса.МестоПродажи,Справочники.Контрагенты.НайтиПоНаименованию(MestoProdazi,Истина));
					МенЗаписи.Записать();
				КонецЕсли;
			Иначе
				Результат = "Карта с номером "+Nomer+" не найдена";
			КонецЕсли;
		КонецЕсли;
	Иначе
		Результат = "Не указан номер карты";
	КонецЕсли;
	
	Если НЕ Результат = "ОК" Тогда
		ЗаписьЖурналаРегистрации("Получение данных о подарочных сертификатах из Розницы",УровеньЖурналаРегистрации.Ошибка,Метаданные.WebСервисы._5LB_ДляРозницы,,Результат,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
КонецФункции

//08.02.2017, Юра
Функция DownloadDocument(Nomer, DataDoc, Organization, VidOperation, Magazin, Prodavec, CenaVkluchaetNDS, Summa, Tovar,NomerVozvrat,DataDocVozvrat)
	УстановитьПривилегированныйРежим(Истина);
	
	ИмяСобытия = "Передача документов о продажах в УТ10"; //14.07.2017, Юра
	УровеньЖР = УровеньЖурналаРегистрации.Ошибка; //14.07.2017, Юра
	ОбъектМетаданных = Метаданные.WebСервисы._5LB_ДляРозницы; //14.07.2017, Юра
	КомментарийДляЖурнала = "Данные из 1С:Розница: № "+Nomer+", дата "+DataDoc+", вид операции "+VidOperation+", магазин "+Magazin; //14.07.2017, Юра
	
	Склад = Справочники.Склады.НайтиПоНаименованию(Magazin,Истина);
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не найден склад. "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
		Возврат Ложь;
	КонецЕсли;
	Если VidOperation = "Продажа" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РеализацияТоваровУслуг.Ссылка
		               |ИЗ
		               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		               |ГДЕ
		               |	РеализацияТоваровУслуг.Номер = &Номер
		               |	И (РеализацияТоваровУслуг.Дата = &Дата
					   //Добавлю ещё сравнение по дате на начало дня (до 06.03.2017 передавали только дату без времени). //06.03.2017, Юра
		               |			ИЛИ НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ))
		               |	И РеализацияТоваровУслуг.Склад = &Склад";
		Запрос.УстановитьПараметр("Дата", DataDoc);
		Запрос.УстановитьПараметр("Номер", Nomer);
		Запрос.УстановитьПараметр("Склад", Склад);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ТекДок = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ТекДок.Товары.Очистить();
		Иначе
			ТекДок = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			//Пишем реквизиты, которые не могут измениться:
			ТекДок.Номер = Nomer;
			ТекДок.Дата = DataDoc;
			ТекДок.Склад = Склад;
			ТекДок.Организация = Справочники.Организации.НайтиПоКоду("000000001",Истина);
			ТекДок.Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(Magazin,Истина,Справочники.Контрагенты.НайтиПоКоду("000000016",Истина));//Ищем в папке Магазины
			ТекДок.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию("Основной договор",Истина,,ТекДок.Контрагент);
			ТекДок.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
			ТекДок.КурсВзаиморасчетов = 1;
			ТекДок.КратностьВзаиморасчетов = 1;
			ТекДок.ВидПередачи = Перечисления.ВидыПередачиТоваров.СоСклада;
			ТекДок.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
			ТекДок.ОтражатьВУправленческомУчете = Истина;
			ТекДок.Сделка = Документы.ЗаказПокупателя.ПустаяСсылка();
		КонецЕсли;
		//Пишем реквизиты, которые могут измениться:
		ТекДок.Ответственный = Справочники.Пользователи.НайтиПоНаименованию(Prodavec);
		ТекДок.СуммаВключаетНДС = CenaVkluchaetNDS; //05.04.2017, Юра
		ТекДок.УчитыватьНДС = Истина;//05.04.2017, Юра
		ТекДок.СуммаДокумента = Summa;
		
		Для Каждого Элемент Из Tovar.Element Цикл
			Если Элемент.Kolich > 0 Тогда
				НС = ТекДок.Товары.Добавить();
				Если ЗначениеЗаполнено(Элемент.Tovar) Тогда
					ТекНоменклатура11 = Справочники._Номенклатура_УТ11.НайтиПоНаименованию(Элемент.Tovar,Истина);
					Если ТекНоменклатура11 = Справочники._Номенклатура_УТ11.ПустаяСсылка() Тогда
						//20.02.2017, Юра
						Если Найти(Элемент.Tovar,"Подарочный сертификат") > 0 Тогда
							ТекНоменклатура10 = Справочники.Номенклатура.НайтиПоНаименованию(Элемент.Tovar,Истина);
							Если ЗначениеЗаполнено(ТекНоменклатура10) Тогда
								НС.Номенклатура = ТекНоменклатура10;
							Иначе
								ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу создать документ реализации. Не найдена номенклатура с наименованием """+Элемент.Tovar+""" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
								Возврат Ложь;
							КонецЕсли;
						Иначе
							ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу создать документ реализации. Не найдена номенклатура 11 с наименованием """+Элемент.Tovar+""" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
							Возврат Ложь;
						КонецЕсли;
					Иначе
						НС.Номенклатура = ПолучитьНоменклатуруУТ10(ТекНоменклатура11,Элемент.Harakter);
					КонецЕсли;
					
				Иначе
					ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не указано наименование номенклатуры 11. "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
					Возврат Ложь;
				КонецЕсли;
				НС.Количество = Элемент.Kolich;
				НС.Коэффициент = 1;//03.03.2017, Юра
				НС.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(Элемент.EdIzm);
				
				//Переделал пока так 05.04.2017, Юра
				//НС.СтавкаНДС = ПолучитьСтавкуНДСИзПроцента(Элемент.StavkaNDS);
				Если ЗначениеЗаполнено(НС.Номенклатура.СтавкаНДС) Тогда
					НС.СтавкаНДС = НС.Номенклатура.СтавкаНДС;
				Иначе
					НС.СтавкаНДС =  Перечисления.СтавкиНДС.НДС18;
				КонецЕсли;
			
				НС.Цена = Элемент.Cena;
				НС.Сумма = Элемент.Summa;
				НС.СуммаНДС = Элемент.SummaNDS;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ТекДок.Комментарий = "Автоматически получен из 1С:Розница "+ТекущаяДата();
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Получилось = Истина;
		Исключение
			Получилось = Ложь;
			ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,ОписаниеОшибки()+" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
			//Попытаемся хотя бы записать документ, чтобы находить ошибки было проще //14.07.2017, Юра
			Попытка
				ТекДок.Записать();
			Исключение
				ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,ОписаниеОшибки()+" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			КонецПопытки;
			
		КонецПопытки;
		
	ИначеЕсли VidOperation = "Возврат" Тогда //03.04.2017, Юра
		//Для того чтобы сделать возврат, нужно сначала найти документ реализации товаров:
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РеализацияТоваровУслуг.Ссылка
		               |ИЗ
		               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		               |ГДЕ
		               |	РеализацияТоваровУслуг.Номер = &Номер
		               |	И (РеализацияТоваровУслуг.Дата = &Дата
					   //Добавлю ещё сравнение по дате на начало дня (до 06.03.2017 передавали только дату без времени). //06.03.2017, Юра
		               |			ИЛИ НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ))
		               |	И РеализацияТоваровУслуг.Склад = &Склад";
		Запрос.УстановитьПараметр("Дата", DataDoc);
		Запрос.УстановитьПараметр("Номер", Nomer);
		Запрос.УстановитьПараметр("Склад", Склад);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ДокументРеализации = ВыборкаДетальныеЗаписи.Ссылка;
		Иначе
			ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу сделать возврат, так как документ реализации № "+Nomer+" от "+DataDoc+" по складу "+Склад+" не найден.",РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			Возврат Ложь;
		КонецЕсли;
		
		//Заполняем документ возврата:
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВозвратТоваровОтПокупателя.Ссылка
		               |ИЗ
		               |	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		               |ГДЕ
		               |	ВозвратТоваровОтПокупателя.Номер = &Номер
		               |	И (ВозвратТоваровОтПокупателя.Дата = &Дата
					   //Добавлю ещё сравнение по дате на начало дня (до 06.03.2017 передавали только дату без времени). //06.03.2017, Юра
		               |			ИЛИ НАЧАЛОПЕРИОДА(ВозвратТоваровОтПокупателя.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ))
					   
		               |	И ВозвратТоваровОтПокупателя.СкладОрдер = &Склад";
		Запрос.УстановитьПараметр("Дата",DataDocVozvrat);
		Запрос.УстановитьПараметр("Номер",NomerVozvrat);
		Запрос.УстановитьПараметр("Склад",Склад);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ТекДок = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ТекДок.Товары.Очистить();
		Иначе
			ТекДок = Документы.ВозвратТоваровОтПокупателя.СоздатьДокумент();
			//Пишем реквизиты, которые не могут измениться:
			ТекДок.Номер = NomerVozvrat;
			ТекДок.Дата = DataDocVozvrat;
			ТекДок.СкладОрдер = Склад;
			ТекДок.Организация = Справочники.Организации.НайтиПоКоду("000000001",Истина);
			ТекДок.Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(Magazin,Истина,Справочники.Контрагенты.НайтиПоКоду("000000016",Истина));//Ищем в папке Магазины
			ТекДок.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию("Основной договор",Истина,,ТекДок.Контрагент);
			ТекДок.ВалютаДокумента = Справочники.Валюты.НайтиПоКоду("643");
			ТекДок.КурсВзаиморасчетов = 1;
			ТекДок.КратностьВзаиморасчетов = 1;
			ТекДок.ВидПоступления = Перечисления.ВидыПоступленияТоваров.НаСклад;
			ТекДок.ВидОперации = Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ПростойВозврат;
			ТекДок.СтатусСборки = Перечисления.СтатусыСборкиЗаказа.Собран;
			ТекДок.ОтражатьВУправленческомУчете = Истина;
			ТекДок.Сделка = ДокументРеализации;
		КонецЕсли;
		//Пишем реквизиты, которые могут измениться:
		ТекДок.Ответственный = Справочники.Пользователи.НайтиПоНаименованию(Prodavec);
		ТекДок.ОтветственныйМанагер = ТекДок.Ответственный;
		ТекДок.СуммаВключаетНДС = CenaVkluchaetNDS; //05.04.2017, Юра
		ТекДок.УчитыватьНДС = Истина;//05.04.2017, Юра
		ТекДок.СуммаДокумента = Summa;
		ТекДок.ДатаОтгрузки = DataDocVozvrat;
		
		Для Каждого Элемент Из Tovar.Element Цикл
			Если Элемент.Kolich > 0 Тогда
				НС = ТекДок.Товары.Добавить();
				Если ЗначениеЗаполнено(Элемент.Tovar) Тогда
					ТекНоменклатура11 = Справочники._Номенклатура_УТ11.НайтиПоНаименованию(Элемент.Tovar,Истина);
					Если ТекНоменклатура11 = Справочники._Номенклатура_УТ11.ПустаяСсылка() Тогда
						Если Найти(Элемент.Tovar,"Подарочный сертификат") > 0 Тогда
							ТекНоменклатура10 = Справочники.Номенклатура.НайтиПоНаименованию(Элемент.Tovar,Истина);
							Если ЗначениеЗаполнено(ТекНоменклатура10) Тогда
								НС.Номенклатура = ТекНоменклатура10;
							Иначе
								ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу создать документ. Не найдена номенклатура с наименованием """+Элемент.Tovar+""" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
								Возврат Ложь;
							КонецЕсли;
						Иначе
							ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу создать документ. Не найдена номенклатура 11 с наименованием """+Элемент.Tovar+""" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
							Возврат Ложь;
						КонецЕсли;
					Иначе
						НС.Номенклатура = ПолучитьНоменклатуруУТ10(ТекНоменклатура11,Элемент.Harakter);
					КонецЕсли;
				Иначе
					ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не указано наименование номенклатуры 11. "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
					Возврат Ложь;
				КонецЕсли;
				НС.Количество = Элемент.Kolich;
				НС.Коэффициент = 1;//03.03.2017, Юра
				НС.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(Элемент.EdIzm);
				
				//Переделал пока так 05.04.2017, Юра
				//НС.СтавкаНДС = ПолучитьСтавкуНДСИзПроцента(Элемент.StavkaNDS);
				Если ЗначениеЗаполнено(НС.Номенклатура.СтавкаНДС) Тогда
					НС.СтавкаНДС = НС.Номенклатура.СтавкаНДС;
				Иначе
					НС.СтавкаНДС =  Перечисления.СтавкиНДС.НДС18;
				КонецЕсли;
				
				НС.Цена = Элемент.Cena;
				НС.Сумма = Элемент.Summa;
				НС.СуммаНДС = Элемент.SummaNDS;
				НС.Качество = Справочники.Качество.Новый;
				НС.ДокументПартии = ДокументРеализации;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ТекДок.Комментарий = "Автоматически получен из 1С:Розница "+ТекущаяДата();
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Получилось = Истина;
		Исключение
			Получилось = Ложь;
			ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,ОписаниеОшибки()+" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
			//Попытаемся хотя бы записать документ, чтобы находить ошибки было проще //14.07.2017, Юра
			Попытка
				ТекДок.Записать();
			Исключение
				ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,ОписаниеОшибки()+" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			КонецПопытки;
		КонецПопытки;
	ИначеЕсли VidOperation = "Оприходование" Тогда //03.04.2017, Юра
		
		//12.05.2017, Юра
		Если Найти(Nomer,"И-М") > 0 Тогда
			//Это документ изначально был создан в УТ10. Его запрещено менять в УТ11 и Рознице.
			//И даже когда он там изменён/загружен, его грузить в УТ10 не надо.
			//Но, поскольку это не ошибка, а такая логика, возвращаем Истина
			Возврат Истина;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОприходованиеТоваров.Ссылка
		               |ИЗ
		               |	Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
		               |ГДЕ
		               |	ОприходованиеТоваров.Номер = &Номер
		               |	И НАЧАЛОПЕРИОДА(ОприходованиеТоваров.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
		               |	И ОприходованиеТоваров.Склад = &Склад";
		Запрос.УстановитьПараметр("Дата", DataDoc);
		Запрос.УстановитьПараметр("Номер", Nomer);
		Запрос.УстановитьПараметр("Склад", Склад);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ТекДок = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ТекДок.Товары.Очистить();
		Иначе
			ТекДок = Документы.ОприходованиеТоваров.СоздатьДокумент();
			//Пишем реквизиты, которые не могут измениться:
			ТекДок.Номер = Nomer;
			ТекДок.Дата = DataDoc;
			//ТекДок.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду();
			ТекДок.Склад = Склад;
			ТекДок.Организация = Справочники.Организации.НайтиПоКоду("000000001",Истина);
			ТекДок.ОтражатьВУправленческомУчете = Истина;
		КонецЕсли;
		//Пишем реквизиты, которые могут измениться:
		ТекДок.Ответственный = Справочники.Пользователи.НайтиПоНаименованию(Prodavec);
		ТекДок.СуммаДокумента = Summa;
		ТекДок.СуммаДокументаРегл = Summa;
		
		Для Каждого Элемент Из Tovar.Element Цикл
			Если Элемент.Kolich > 0 Тогда
				НС = ТекДок.Товары.Добавить();
				Если ЗначениеЗаполнено(Элемент.Tovar) Тогда
					ТекНоменклатура11 = Справочники._Номенклатура_УТ11.НайтиПоНаименованию(Элемент.Tovar,Истина);
					Если ТекНоменклатура11 = Справочники._Номенклатура_УТ11.ПустаяСсылка() Тогда
						Если Найти(Элемент.Tovar,"Подарочный сертификат") > 0 Тогда
							ТекНоменклатура10 = Справочники.Номенклатура.НайтиПоНаименованию(Элемент.Tovar,Истина);
							Если ЗначениеЗаполнено(ТекНоменклатура10) Тогда
								НС.Номенклатура = ТекНоменклатура10;
							Иначе
								ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу создать документ. Не найдена номенклатура с наименованием """+Элемент.Tovar+""" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
								Возврат Ложь;
							КонецЕсли;
						Иначе
							ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу создать документ. Не найдена номенклатура 11 с наименованием """+Элемент.Tovar+""" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
							Возврат Ложь;
						КонецЕсли;
					Иначе
						НС.Номенклатура = ПолучитьНоменклатуруУТ10(ТекНоменклатура11,Элемент.Harakter);
					КонецЕсли;
				Иначе
					ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не указано наименование номенклатуры 11. "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
					Возврат Ложь;
				КонецЕсли;
				НС.Количество = Элемент.Kolich;
				НС.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(Элемент.EdIzm);
				НС.Коэффициент = НС.ЕдиницаИзмерения.Коэффициент;
				НС.Цена = Элемент.Cena;
				НС.Сумма = Элемент.Summa;
				НС.СуммаРегл = Элемент.Summa;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ТекДок.Комментарий = "Автоматически получен из 1С:Розница "+ТекущаяДата();
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Получилось = Истина;
		Исключение
			Получилось = Ложь;
			ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,ОписаниеОшибки()+" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
			//Попытаемся хотя бы записать документ, чтобы находить ошибки было проще //14.07.2017, Юра
			Попытка
				ТекДок.Записать();
			Исключение
				ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,ОписаниеОшибки()+" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			КонецПопытки;
		КонецПопытки;
		
	ИначеЕсли VidOperation = "Списание" Тогда //03.04.2017, Юра
		
		//12.05.2017, Юра
		Если Найти(Nomer,"И-М") > 0 Тогда
			//Это документ изначально был создан в УТ10. Его запрещено менять в УТ11 и Рознице.
			//И даже когда он там изменён/загружен, его грузить в УТ10 не надо.
			//Но, поскольку это не ошибка, а такая логика, возвращаем Истина
			Возврат Истина;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СписаниеТоваров.Ссылка
		               |ИЗ
		               |	Документ.СписаниеТоваров КАК СписаниеТоваров
		               |ГДЕ
		               |	СписаниеТоваров.Номер = &Номер
		               |	И НАЧАЛОПЕРИОДА(СписаниеТоваров.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
		               |	И СписаниеТоваров.Склад = &Склад";
		Запрос.УстановитьПараметр("Дата", DataDoc);
		Запрос.УстановитьПараметр("Номер", Nomer);
		Запрос.УстановитьПараметр("Склад", Склад);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ТекДок = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ТекДок.Товары.Очистить();
		Иначе
			ТекДок = Документы.СписаниеТоваров.СоздатьДокумент();
			//Пишем реквизиты, которые не могут измениться:
			ТекДок.Номер = Nomer;
			ТекДок.Дата = DataDoc;
			//ТекДок.ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду();
			ТекДок.Склад = Склад;
			ТекДок.Организация = Справочники.Организации.НайтиПоКоду("000000001",Истина);
			ТекДок.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
			ТекДок.ОтражатьВУправленческомУчете = Истина;
		КонецЕсли;
		//Пишем реквизиты, которые могут измениться:
		ТекДок.Ответственный = Справочники.Пользователи.НайтиПоНаименованию(Prodavec);
		ТекДок.СуммаДокумента = Summa;
		
		Для Каждого Элемент Из Tovar.Element Цикл
			Если Элемент.Kolich > 0 Тогда
				НС = ТекДок.Товары.Добавить();
				Если ЗначениеЗаполнено(Элемент.Tovar) Тогда
					ТекНоменклатура11 = Справочники._Номенклатура_УТ11.НайтиПоНаименованию(Элемент.Tovar,Истина);
					Если ТекНоменклатура11 = Справочники._Номенклатура_УТ11.ПустаяСсылка() Тогда
						Если Найти(Элемент.Tovar,"Подарочный сертификат") > 0 Тогда
							ТекНоменклатура10 = Справочники.Номенклатура.НайтиПоНаименованию(Элемент.Tovar,Истина);
							Если ЗначениеЗаполнено(ТекНоменклатура10) Тогда
								НС.Номенклатура = ТекНоменклатура10;
							Иначе
								ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу создать документ. Не найдена номенклатура с наименованием """+Элемент.Tovar+""" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
								Возврат Ложь;
							КонецЕсли;
						Иначе
							ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не могу создать документ. Не найдена номенклатура 11 с наименованием """+Элемент.Tovar+""" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
							Возврат Ложь;
						КонецЕсли;
					Иначе
						НС.Номенклатура = ПолучитьНоменклатуруУТ10(ТекНоменклатура11,Элемент.Harakter);
					КонецЕсли;
					
				Иначе
					
					ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,"Не указано наименование номенклатуры 11. "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
					Возврат Ложь;
				КонецЕсли;
				НС.Количество = Элемент.Kolich;
				НС.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(Элемент.EdIzm);
				НС.Коэффициент = НС.ЕдиницаИзмерения.Коэффициент;
				НС.Цена = Элемент.Cena;
				НС.Сумма = Элемент.Summa;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ТекДок.Комментарий = "Автоматически получен из 1С:Розница "+ТекущаяДата();
			ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Получилось = Истина;
		Исключение
			Получилось = Ложь;
			ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,ОписаниеОшибки()+" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
			//Попытаемся хотя бы записать документ, чтобы находить ошибки было проще //14.07.2017, Юра
			Попытка
				ТекДок.Записать();
			Исключение
				ЗаписьЖурналаРегистрации(ИмяСобытия,УровеньЖР,ОбъектМетаданных,,ОписаниеОшибки()+" "+КомментарийДляЖурнала,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			КонецПопытки;

		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Получилось;
КонецФункции

//08.02.2017, Юра
Функция ПолучитьСтавкуНДСИзПроцента(ТекПроцент)
	Если ТекПроцент = 20 Тогда
		Возврат Перечисления.СтавкиНДС.НДС20;
	ИначеЕсли ТекПроцент = 10 Тогда
		Возврат Перечисления.СтавкиНДС.НДС10;
	ИначеЕсли ТекПроцент = 18 Тогда
		Возврат Перечисления.СтавкиНДС.НДС18;
	Иначе
		Возврат Перечисления.СтавкиНДС.БезНДС;
	КонецЕсли;
КонецФункции

//08.02.2017, Юра
//Из номенклатуры и характеристики Розницы/УТ11 нужно получить номенклатуру УТ10
Функция ПолучитьНоменклатуруУТ10(Tovar,Harakter)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	_СоответствияНоменклатуры.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	РегистрСведений._СоответствияНоменклатуры КАК _СоответствияНоменклатуры
	               |ГДЕ
	               |	_СоответствияНоменклатуры.Номенклатура_УТ11 = &Tovar
	               |	И ВЫБОР
	               |			КОГДА &Harakter = """"
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ _СоответствияНоменклатуры.Характеристика.Наименование = &Harakter
	               |		КОНЕЦ";
	Запрос.УстановитьПараметр("Tovar",Tovar);
	Запрос.УстановитьПараметр("Harakter",Harakter);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		Возврат РезультатЗапроса.Номенклатура;
	Иначе
		Возврат Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли;
КонецФункции
