
// Функция обработки ответа от wms по загрузке задач на приемку
//
// Параметры:
//           - "TypeDoc" - Тип документа ("String") 
//           - "DocIn" - Двоичные данные ("base64Binary") - Ответ от WMS в формате xml
//
// Возвращаемое значение:
//           - 1 OK - Загрузка успешно выполнена
//           - 0 ERR - Ошибка загрузки
//
Функция DocIn(TypeDoc, DocIn) Экспорт
	
	// Обработка полученных двоичных данных, преобразование в объект XDTO
	наименованиеФайлаДанных = КаталогВременныхФайлов() + "Doc_in_flashback_CWMS3000_" + Формат(ТекущаяДата(),"ДФ=дд_ММ_гг_чч_мм_сс") + ".xml";
	DocIn.Записать(наименованиеФайлаДанных);	
	
	чтениеXML = Новый ЧтениеXML;
	чтениеXML.ОткрытьФайл(наименованиеФайлаДанных);
	
	Попытка 
		DocIn = ФабрикаXDTO.ПрочитатьXML(чтениеXML);		
		возвращаемоеЗначение = "1 OK; Load File Done";	
		чтениеXML.Закрыть();
	Исключение
		чтениеXML.Закрыть();
		возвращаемоеЗначение = "0 ERR; Load File Failed";	
	КонецПопытки;
	
	Если НЕ ЗначениеЗаполнено(возвращаемоеЗначение) Тогда
		Если TypeDoc = "1" Тогда		
			ссылкаНаДокумент = Документы.ПоступлениеТоваровУслуг.ПолучитьСсылку(Новый УникальныйИдентификатор(DocIn.ID_DOC)); // GUID документа в БД
			Если ссылкаНаДокумент.Пустая() Тогда
				// Не найден документ в системе 1С
				возвращаемоеЗначение = "0 ERR; Document - "+ "TypeDoc:" + TypeDoc + "; WMS_ID:" + DocIn.WMS_ID + "; NUMBER:" + DocIn.NUMBER + " - not found.";	
			Иначе
				// Найден документ в системе 1С
				объектДока = ссылкаНаДокумент.ПолучитьОбъект();
				объектДока.WMS_ID = DocIn.WMS_ID;
				отказ = Ложь;
				Для Каждого стрDocIn Из DocIn.CONTENT Цикл				
					ссылкаНаНоменклатуру = Справочники.Номенклатура.НайтиПоКоду(стрDocIn.Code);
					Если НЕ ссылкаНаНоменклатуру.Пустая() Тогда						
						
						// Пытаемся найти номенклатуру в ТЧ существующего документа, если нет добавляем новой строкой 
						массивСтрокСНоменклатурой = объектДока.Товары.НайтиСтроки("Номенклатура", ссылкаНаНоменклатуру);
						Если массивСтрокСНоменклатурой.Количество() > 0 Тогда
							// Найдена номенклатура
							строкаПТУ = массивСтрокСНоменклатурой[0];
						Иначе
							// Не найдена номенклатура, добавляем строку в документ
							строкаПТУ = объектДока.Товары.Добавить();
							строкаПТУ.Номенклатура = ссылкаНаНоменклатуру;
						КонецЕсли;	
						строкаПТУ.ЕдиницаИзмеренияПринято = ссылкаНаНоменклатуру.ЕдиницаХраненияОстатков;
						строкаПТУ.КоличествоПринято = стрDocIn.CNT;
						строкаПТУ.КоэффициентПринято = строкаПТУ.ЕдиницаИзмеренияПринято.Коэффициент;
					Иначе
						возвращаемоеЗначение = "0 ERR; Document - "+ "TypeDoc:" + TypeDoc + "; WMS_ID:" + DocIn.WMS_ID + "; NUMBER:" + DocIn.NUMBER + ". Загрузка отменена. Не найдена номенклатура с кодом: " + стрDocIn.Code;	
						отказ = Истина;
						Прервать;
					КонецЕсли;	
				КонецЦикла;				
				
				Если НЕ Отказ Тогда
					Попытка 
						объектДока.Записать(РежимЗаписиДокумента.Запись);
						возвращаемоеЗначение = "1 OK; Document - "+ "TypeDoc:" + TypeDoc + "; WMS_ID:" + DocIn.WMS_ID + "; NUMBER:" + DocIn.NUMBER + " - loaded.";	
						РегистрыСведений.ИсторияСтатусовWMS.ДобавитьОбъектуНовыйСтатусWMS(ссылкаНаДокумент, ПредопределенноеЗначение("Перечисление.СтатусыWMS.ПринятВWMS"));
					Исключение
						возвращаемоеЗначение = "0 ERR; Document - "+ "TypeDoc:" + TypeDoc + "; WMS_ID:" + DocIn.WMS_ID + "; NUMBER:" + DocIn.NUMBER + " - not loaded. Ошибка проведения документа:" + Символы.ПС + ОписаниеОшибки();	
					КонецПопытки	
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЕсли;	
	КонецЕсли;
	
	Возврат возвращаемоеЗначение;	
		
КонецФункции
