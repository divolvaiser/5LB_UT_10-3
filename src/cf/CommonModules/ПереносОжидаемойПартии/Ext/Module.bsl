
Процедура АвтоПереносОжидаемойПартии() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	П.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК П
	|ГДЕ
	|	П.Проведен = ЛОЖЬ
	|	И П.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И П.Ссылка.ДатаПо <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		возврат;
	КонецЕсли;
	
	Выб = Рез.Выбрать();
	Пока Выб.Следующий() Цикл
		Об = Выб.Ссылка.ПолучитьОбъект();
		Об.ДатаПо = НачалоДня(Об.ДатаПо+86400);
		Попытка
			Об.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			продолжить;
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура МашинкаБиБи (ДатаПоездки=Неопределено) Экспорт
	
	Если ДатаПоездки=Неопределено Тогда
		ДатаПоездки = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИсточникДанных.ДокументПродажи.Сделка.УдалитьКонтактноеЛицо КАК Покупан,
	               |	КОЛИЧЕСТВО(ИсточникДанных.ДокументПродажи.Сделка) КАК КолЗаказов
	               |ПОМЕСТИТЬ ТЗКоличествоЗаказов
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , ) КАК ИсточникДанных
	               |ГДЕ
	               |	ИсточникДанных.ДокументПродажи.Сделка.УдалитьКонтактноеЛицо В ИЕРАРХИИ(&Покупаны)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ИсточникДанных.ДокументПродажи.Сделка.УдалитьКонтактноеЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(Зак.СуммаДокумента) КАК ОбщаяСумма
	               |ПОМЕСТИТЬ ТЗСуммаЗаказов
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК Зак
	               |ГДЕ
	               |	Зак.Проведен
	               |	И Зак.ДатаОтгрузки = &ТекДата
	               |	И Зак.Регион = ""Москва""
	               |	И Зак.СтатусОплаты = &НеОплачен
				   |	И Зак.ВидОплаты = Значение(Справочник.ВидыОплатЧекаККМ.ПустаяСсылка)
	               |	И Зак.Опт = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Зак.Ссылка КАК Заказ,
	               |	Зак.СуммаДокумента КАК Сумма,
	               |	ТЗКоличествоЗаказов.Покупан КАК Покупатель,
	               |	ТЗКоличествоЗаказов.КолЗаказов КАК КоличествоЗ,
	               |	ТЗСуммаЗаказов.ОбщаяСумма * 0.3 КАК ТридцатьПроцентов
	               |ИЗ
	               |	ТЗКоличествоЗаказов КАК ТЗКоличествоЗаказов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК Зак
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЧекиККМ КАК Чеки
	               |			ПО (Чеки.Документ = Зак.Ссылка)
				   |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Шалость КАК Шалость
	               |			ПО (Шалость.Заказ = Зак.Ссылка)
	               |		ПО ТЗКоличествоЗаказов.Покупан = Зак.УдалитьКонтактноеЛицо,
	               |	ТЗСуммаЗаказов КАК ТЗСуммаЗаказов
	               |ГДЕ
	               |	Зак.Проведен
	               |	И Зак.ДатаОтгрузки = &ТекДата
	               |	И Зак.СтатусыСборкиЗаказа = &Собран
	               |	И Зак.Опт = ЛОЖЬ
	               |	И Зак.Регион = ""Москва""
	               |	И Зак.СтатусОплаты = &НеОплачен
				   |	И Зак.ВидОплаты = Значение(Справочник.ВидыОплатЧекаККМ.ПустаяСсылка)
				   //|	И ТЗКоличествоЗаказов.КолЗаказов >= 2
	               |	И Чеки.Документ ЕСТЬ NULL 
				   |	И Шалость.Заказ ЕСТЬ NULL
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Зак.Дата";

	Запрос.УстановитьПараметр("Покупаны",Справочники.Контрагенты.НайтиПоКоду("000000130"));
	Запрос.УстановитьПараметр("Собран",Перечисления.СтатусыСборкиЗаказа.Собран);
		
	НачДата = НачалоДня(ТекущаяДата()-86400*90);
	КонДата = КонецДня(ТекущаяДата());
	
	Запрос.УстановитьПараметр("ДатаНач",НачДата);
	Запрос.УстановитьПараметр("ДатаКон",КонДата);
	
	Запрос.УстановитьПараметр("ТекДата",НачалоДня(ДатаПоездки));
	Запрос.УстановитьПараметр("НеОплачен",Перечисления.СтатусОплаты.НеОпалчен);

	
	Рез = Запрос.Выполнить().Выгрузить();
	
	СчетчикСуммы = 0;
	Для Каждого ст из Рез Цикл
		Если СчетчикСуммы>=ст.ТридцатьПроцентов Тогда
			прервать;
		КонецЕсли;
		
		Набор = РегистрыСведений.Шалость.СоздатьНаборЗаписей();
		Набор.Отбор.Заказ.Установить(ст.Заказ);
		СтрокаДанных = Набор.Добавить();
		СтрокаДанных.Заказ = ст.Заказ;
		Попытка
			Набор.Записать();
		Исключение
		КонецПопытки;

		
		СчетчикСуммы = СчетчикСуммы+ст.Сумма;
	КонецЦикла;

	
КонецПроцедуры


Процедура НочнаяУстановкаКурсовойНаценки () Экспорт
	
	//++ Кузнецов С.А. - Загрузка актуальных курсов валют - 01.04.2016
	РаботаСРегламентныеЗаданиями.ЗагрузитьКурсыВалютПоПараметрам(ТекущаяДата());
	//-- Кузнецов С.А. - 01.04.2016
	
	//26.05.2017 Только загрузка курсов валют
	//Ценообразование.УстановкаКурсовойНаценки(Неопределено);
	
	// 17.05.17 Вялов - перенесено в 
	//// 17.11.16 Вялов - Мегаплан № 3934 - п.4 - рассылка 
	//Ценообразование.ВыполнитьРассылкуПоЦенникам();
	
	
КонецПроцедуры

Функция ОпределитьПлановыйОстаток(СтрокаТаблицы)
	
	ПлановыйОстаток = 0;
	
	Склад = СтрокаТаблицы.Склад;
	Номенклатура = СтрокаТаблицы.Номенклатура;
	Дата = СтрокаТаблицы.Дата;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПродажиОбороты.КоличествоОборот,
	               |	ВЫБОР
	               |		КОГДА ПродажиОбороты.ДокументПродажи ССЫЛКА Документ.РеализацияТоваровУслуг
	               |			ТОГДА ПродажиОбороты.ДокументПродажи.Склад
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ПродажиОбороты.ДокументПродажи ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	               |					ТОГДА ПродажиОбороты.ДокументПродажи.СкладОрдер
	               |				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Склад
	               |ПОМЕСТИТЬ вт_Продажи
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , Номенклатура = &Номенклатура) КАК ПродажиОбороты
	               |ГДЕ
	               |	(ПродажиОбороты.ДокументПродажи ССЫЛКА Документ.РеализацияТоваровУслуг
	               |			ИЛИ ПродажиОбороты.ДокументПродажи ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(вт_Продажи.КоличествоОборот) КАК КоличествоОборот,
	               |	вт_Продажи.Склад
	               |ИЗ
	               |	вт_Продажи КАК вт_Продажи
	               |ГДЕ
	               |	вт_Продажи.Склад = &Склад
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_Продажи.Склад";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Дата));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Дата));
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	если Выборка.Следующий() тогда
		ПлановыйОстаток = Выборка.КоличествоОборот;
	конецесли;
	
	возврат ПлановыйОстаток;
	
КонецФункции

Процедура ОбновитьПлановыеОстатки()  Экспорт
	
	КонецПериода = НачалоДня(ТекущаяДата());
	КонецПериодаВкл = КонецДня(ТекущаяДата());

	Запрос = новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	НЕ Номенклатура.ЭтоГруппа
	               |	И НЕ Номенклатура.ПометкаУдаления
	               |	И Номенклатура.Отметить";
				   
	тзРезультат = Запрос.Выполнить().Выгрузить();
	СписокНоменклатуры = тзРезультат.ВыгрузитьКолонку("Ссылка");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслугТовары.Ссылка.Дата КАК Дата,
	               |	РеализацияТоваровУслугТовары.Ссылка.Склад КАК Склад,
	               |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ вт_Реализации
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровУслугТовары.Ссылка.Проведен
	               |	И РеализацияТоваровУслугТовары.Ссылка.Склад В(&СписокСкладов)
	               |	И РеализацияТоваровУслугТовары.Номенклатура В(&СписокНоменклатуры)
	               |	И РеализацияТоваровУслугТовары.Ссылка.Дата <= &Дата
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_Реализации.Склад,
	               |	вт_Реализации.Номенклатура,
	               |	МАКСИМУМ(вт_Реализации.Дата) КАК Дата
	               |ИЗ
	               |	вт_Реализации КАК вт_Реализации
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_Реализации.Склад,
	               |	вт_Реализации.Номенклатура";
				   
	СписокСкладов = новый Массив;
	СписокСкладов.Добавить(Справочники.Склады.НайтиПоКоду("000000005")); //Основной
	
	Запрос.УстановитьПараметр("СписокСкладов", СписокСкладов);
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	Запрос.УстановитьПараметр("Дата", КонецПериодаВкл);
	
	ТаблицаНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	м = 0;
	к = ТаблицаНоменклатуры.Количество()-1;
	Запись = Истина;
	для н = 0 по ТаблицаНоменклатуры.Количество() - 1 цикл
		
		ПлановыйОстаток = ОпределитьПлановыйОстаток(ТаблицаНоменклатуры[н]);
		если ПлановыйОстаток <> 0 тогда
			НаборЗаписей = РегистрыСведений.ПлановыеОстаткиТоваров.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Период.Установить(КонецПериода);
			НаборЗаписей.Отбор.Сценарий.Установить(Справочники.СценарииПланирования.ДвухнедельныйОборот);
			НаборЗаписей.Отбор.Номенклатура.Установить(ТаблицаНоменклатуры[н].Номенклатура);
			НаборЗаписей.Отбор.Склад.Установить(ТаблицаНоменклатуры[н].Склад);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Период = КонецПериода;
			НоваяЗапись.Сценарий = Справочники.СценарииПланирования.ДвухнедельныйОборот;
			НоваяЗапись.Номенклатура = ТаблицаНоменклатуры[н].Номенклатура;
			НоваяЗапись.Склад = ТаблицаНоменклатуры[н].Склад;
			НоваяЗапись.Количество = ПлановыйОстаток;
			попытка
				НаборЗаписей.Записать(Истина);
			исключение
				Запись = Ложь;
				//сообщить("ош записи набора, обратитесь к администратору "+ОписаниеОшибки());
			конецпопытки;
		конецесли;
		//состояние("Обработано "+н+" из "+к);
	конеццикла;	
	
КонецПроцедуры
