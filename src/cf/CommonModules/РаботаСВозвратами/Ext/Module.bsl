
Процедура ПриПроведенииВозвратаОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	//09.02.2017, Юра
	Если НЕ ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		ECR = Неопределено;
	КонецЕсли;
	
	Если ПараметрыСеанса.ТекущийПользователь.Родитель = Справочники.Пользователи.НайтиПоКоду("Магазины") Тогда
		//**********************************************************************************
		//******************                КОРРЕКТИРОВКА             **********************
		//**********************************************************************************
		//Изменено Monstr 180616
		//Было:Если НачалоДня(Источник.Сделка.Дата)<>НачалоДня(ТекущаяДата()) Тогда
			// Женя 20.08.2018
			// Исправление ошибки в условии  возврата товаров от покупателей
			// Было Если (НачалоДня(ТекущаяДата())-НачалоДня(Источник.Сделка.Дата))/86400 < 14 Тогда 
			// ((
			Если (НачалоДня(ТекущаяДата())-НачалоДня(Источник.Сделка.Дата))/86400 > 14 Тогда 
			// )) 20.08.2018 Женя
		//Конец изменного Monstr 180616
			Возврат;
		КонецЕсли;
		
		ВидОплаты = Неопределено;
		
		Если Источник.Сделка.ВидОплаты = Справочники.ВидыОплатЧекаККМ.Наличные Тогда
			ВидОплаты = "Нал";
		Иначе
			ВидОплаты = "БезНал";
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Р.Значение
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК Р
		|ГДЕ
		|	Р.Объект = &Склад
		|	И Р.Свойство = &Свойство";
		
		Запрос.УстановитьПараметр("Склад",Источник.СкладОрдер);
		Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("ФискальныйРегистратор"));
		
		Рез = Запрос.Выполнить();
		
		Если Рез.Пустой() Тогда
			возврат;
		КонецЕсли;
		
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Если Выб.Значение = Ложь Тогда
			возврат;
		КонецЕсли;
		
		Если ПодготовитьФРКВозврату(Ложь)=Истина Тогда
			Отказ=Истина;
			Возврат;
		КонецЕсли;
		
		Для Каждого ст из Источник.Товары Цикл
			Если ВозвратПоФР(Ложь,ст.Номенклатура.Наименование,ст.Сумма,ст.Количество,ст.ПроцентСкидкиНаценки+ст.ПроцентАвтоматическихСкидок,ст.НомерСтроки)=Истина Тогда
				Отказ=Истина;
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗакрытьЧекФР(Ложь,ВидОплаты) = Истина  Тогда
			Отказ=Истина;
			Возврат;
		КонецЕсли;
		
		//++ Кузнецов С.А. - Зафиксируем, что пробит чек возврата - 07.07.2016
		Набор = РегистрыСведений.ЧекиККМ.СоздатьНаборЗаписей();
		
		датаЧека = ТекущаяДата();
		Набор.Отбор.Документ.Установить(Источник.Ссылка);
		Набор.Отбор.Период.Установить(датаЧека);
		Набор.Отбор.ВидОплатыЧекаККМ.Установить(Источник.Сделка.ВидОплаты);
		Набор.Отбор.Склад.Установить(Источник.СкладОрдер);
		Набор.Отбор.ВидыОперацийЧекККМ.Установить(Перечисления.ВидыОперацийЧекККМ.Возврат);
		
		СтрокаДанных = Набор.Добавить();	
		СтрокаДанных.Период = датаЧека;
		СтрокаДанных.Документ = Источник.Ссылка;
		СтрокаДанных.Пользователь = ПараметрыСеанса.ТекущийПродавец;
		СтрокаДанных.ВидОплатыЧекаККМ = Источник.Сделка.ВидОплаты;
		СтрокаДанных.Склад = Источник.СкладОрдер;
		СтрокаДанных.ВидыОперацийЧекККМ = Перечисления.ВидыОперацийЧекККМ.Возврат;
		СтрокаДанных.Сумма = Источник.СуммаДокумента;
		Попытка
			СтрокаДанных.НомерЧека = ECR.НомерЧека;
			СтрокаДанных.НомерСмены = ECR.Session;
		Исключение
		КонецПопытки;	
		Набор.Записать();				
		//-- Кузнецов С.А. - 07.07.2016
		
	Иначе 
		Если АПечаталсяЛиЧек(Источник.Сделка) Тогда
			Набор = РегистрыСведений.ВозвратыЗаказов.СоздатьНаборЗаписей();
			
			Набор.Отбор.Заказ.Установить(Источник.Сделка);
			Набор.Отбор.Дата.Установить(ТекущаяДата());
			
			СтрокаДанных = Набор.Добавить();
			СтрокаДанных.Заказ = Источник.Сделка;					
			СтрокаДанных.Дата = ТекущаяДата();
			СтрокаДанных.Сумма = Источник.СуммаДокумента;
			
			Набор.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПодготовитьФРКВозврату (Отказ)
	//09.02.2017, Юра
	Если НЕ ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		ECR = Неопределено;
		Возврат Неопределено;
	КонецЕсли;
	
	Отказ=Ложь;
	
	Если ECR.GetStatus() <> 0 тогда
		
		//Предупреждать можно только на клиенте 09.02.2017, Юра
		#Если Клиент Тогда
		Предупреждение ("Нет связи с ККМ!");
		#КонецЕсли
	
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	Если ECR.SessionOpened = 0 Тогда
		//Предупреждать можно только на клиенте 09.02.2017, Юра
		#Если Клиент Тогда
		Предупреждение ("Торговая смена НЕ открыта! Продажа невозможна!");
		#КонецЕсли
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	// если есть открытый чек, то отменяем его
	Если ECR.CheckState <> 0 тогда
		Если ECR.CancelCheck() <> 0 тогда
			//Предупреждать можно только на клиенте 09.02.2017, Юра
			#Если Клиент Тогда
			Предупреждение ("Есть открытый чек, который не удалось отменить");
			#КонецЕсли
			Отказ = Истина;
			Возврат Отказ;
		КонецЕсли;
	КонецЕсли;
	
	//// входим в режим регистрации
	//// устанавливаем пароль кассира
	ECR.Password = "1";
	//// входим в режим регистрации
	ECR.Mode = 1;
	Если ECR.SetMode() <> 0 тогда
		//Предупреждать можно только на клиенте 09.02.2017, Юра
		#Если Клиент Тогда
		Предупреждение ("Не удалось установить нужный режим");
		#КонецЕсли
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	Возврат Отказ;
КонецФункции

Функция ВозвратПоФР (Отказ,Товар,Сумма,Количество,Скидка,СтрокаСкидки)
	//09.02.2017, Юра
	Если НЕ ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		ECR = Неопределено;
	КонецЕсли;
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Количество) Тогда
		Количество = 1;
	КонецЕсли;
	
	Попытка
		Сумма = Число(Сумма);
		Количество = Число(Количество);
	Исключение
	КонецПопытки;

	Цена = Окр(Сумма/Количество,2,1);

	
	ECR.Name = Товар;
	ECR.Price = Цена;
	ECR.Quantity = Количество;
	//{+НАЧАЛО+Изменения} Автор: Тасмаджиев 15/06/2018//=============================================================================================	
	//ECR.Department = 1;
	//ECR.TaxTypeNumber = 0; //НДС 0%
	ECR.TaxTypeNumber = 4; //Без НДС
	ECR.Department = 1;
	//{-КОНЕЦ-Изменения} Автор: Тасмаджиев 15/06/2018//==============================================================================================
	Если ECR.Return() <> 0 тогда
		//Предупреждать можно только на клиенте 09.02.2017, Юра
		#Если Клиент Тогда
		Предупреждение ("Не удалось зарегистрировать возврат");
		#КонецЕсли
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	//Если Скидка>0 Тогда
	//	ECR.Percents = Скидка;
	//	ECR.Destination = СтрокаСкидки;
	//	Если ECR.PercentsDiscount() <> 0 тогда
	//		Сообщить ("Не удалось зарегистрировать продажу (скидки)",статусСообщения.Важное);
	//		Отказ = Истина;
	//		Возврат Отказ;
	//	КонецЕсли;
	//КонецЕсли;

	
	Возврат Отказ;
	
КонецФункции

Функция ЗакрытьЧекФР (Отказ,ВидОплаты)
	//09.02.2017, Юра
	Если НЕ ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		ECR = Неопределено;
	КонецЕсли;
	
	Отказ = Ложь;
	Если ВидОплаты = "БезНал" Тогда
		//{+Добавления} Автор: Тасмаджиев 13/07/2018// ->>
		Если ECR.ФФДверсия = 100 Тогда
			ECR.TypeClose = 3; //ффд 1.0.0
		Иначе
			ECR.TypeClose = 1; //ффд 1.0.5  и выше
		КонецЕсли;
		//{-Добавления} Автор: Тасмаджиев 13/07/2018// <<-
		//{+Редактирования} Автор: Тасмаджиев 13/07/2018// ->>
		//ECR.TypeClose = 3;
		//{-Редактирования} Автор: Тасмаджиев 13/07/2018// <<-
		Если ECR.CloseCheck() <> 0 тогда
			//Предупреждать можно только на клиенте 09.02.2017, Юра
			#Если Клиент Тогда
			Предупреждение ("Не удалось зарегистрировать продажу");
			#КонецЕсли
			Отказ = Истина;
			Возврат Отказ;
		КонецЕсли;
	Иначе
	ECR.TypeClose = 0;
	Если ECR.CloseCheck() <> 0 тогда
		//Предупреждать можно только на клиенте 09.02.2017, Юра
		#Если Клиент Тогда
		Предупреждение ("Не удалось зарегистрировать возврат");
		#КонецЕсли
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	КонецЕсли;
КонецФункции

Функция АПечаталсяЛиЧек(Заказ)
    Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Р.Документ
	             |ИЗ
	             |	РегистрСведений.ЧекиККМ.СрезПоследних(, Документ = &Док) КАК Р";
	Запрос.УстановитьПараметр("Док",Заказ.Ссылка);
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
	
КонецФункции

