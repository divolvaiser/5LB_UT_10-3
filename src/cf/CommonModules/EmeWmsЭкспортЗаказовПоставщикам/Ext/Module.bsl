// Copyright (C) 2012-2016 Engineer Mareev Enterprises

//	Функция РазрешенКЭкспорту возвращает Истина, если заказ поставщику разрешен к экспорту.
Функция РазрешенКЭкспорту(ЗаказПоставщику) Экспорт
	
	Если ЗаказПоставщику.ПометкаУдаления Тогда
		Возврат Ложь;
	КонецЕсли;

	Если Не ЗаказПоставщику.Проведен Тогда
		Возврат Ложь;
	КонецЕсли;

	Если Не ЗаказПоставщику.Склад.EmeWmsУчет Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//НМА 16.12.16 //Заказ должен быть подтвержден
	Если Не ЗаказПоставщику.Статус_УТ11 = Перечисления.СтатусыЗаказовПоставщикам_УТ11.Подтвержден Тогда
		Возврат Ложь;
	КонецЕсли;
	//НМА 16.12.16

	Возврат Истина;
	
КонецФункции

//	Процедура ПометитьКЭкспорту помечает заказ поставщику к экспорту.
Процедура ПометитьКЭкспорту(ЗаказПоставщику) Экспорт

	Если Не РазрешенКЭкспорту(ЗаказПоставщику) Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуЗаказовПоставщикам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаказПоставщику.Установить(ЗаказПоставщику.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.КЭкспорту = Истина;
		НаборЗаписей.Записать();
		Возврат;
	КонецЦикла;
	
  	НоваяЗапись = РегистрыСведений.EmeWmsПометкиКЭкспортуЗаказовПоставщикам.СоздатьМенеджерЗаписи();
	НоваяЗапись.ЗаказПоставщику = ЗаказПоставщику.Ссылка;
	НоваяЗапись.КЭкспорту = Истина;
    НоваяЗапись.Записать(); 
		 
КонецПроцедуры

//	Функция ПомеченКЭкспорту возвращает Истина, если заказ поставщику помечен к экспорту.
Функция ПомеченКЭкспорту(ЗаказПоставщику) Экспорт
	
	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуЗаказовПоставщикам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаказПоставщику.Установить(ЗаказПоставщику.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Возврат Запись.КЭкспорту;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

//	Процедура ПодтвердитьЭкспорт подтверждает экспорт заказа поставщику.
Процедура ПодтвердитьЭкспорт(ЗаказПоставщику) Экспорт

	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуЗаказовПоставщикам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаказПоставщику.Установить(ЗаказПоставщику.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.КЭкспорту = Ложь;
		Запись.ДатаЭкспорта = ТекущаяДата();
		НаборЗаписей.Записать();
		//Возврат; //НМА 15.09.17
	КонецЦикла;
	
	//НМА 06.09.17
	Если ЗаказПоставщику.Статус_УТ11 = Перечисления.СтатусыЗаказовПоставщикам_УТ11.Подтвержден Тогда
		ЗаказПоставщикуОбъект = ЗаказПоставщику.ПолучитьОбъект();
		ЗаказПоставщикуОбъект.Статус_УТ11 = Перечисления.СтатусыЗаказовПоставщикам_УТ11.ОтправленНаСклад;
		ЗаказПоставщикуОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	//НМА 06.09.17
	
КонецПроцедуры

//	Процедура ПометитьКЭкспорту помечает заказ поставщику на событии при записи заказа поставщику.
Процедура ПометитьКЭкспортуПриЗаписиЗаказаПоставщику(Источник, Отказ) Экспорт

	ПометитьКЭкспорту(Источник);
		 
КонецПроцедуры

//	Процедура ЭкспортироватьЗаказыПоставщикам экспортирует заказы поставщикам, помеченные к экспорту.
Процедура ЭкспортироватьЗаказыПоставщикам(ERPData) Экспорт
	
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	EmeWmsПометкиКЭкспортуЗаказовПоставщикам.ЗаказПоставщику.Ссылка КАК Ссылка
		|ИЗ
		|	РегистрСведений.EmeWmsПометкиКЭкспортуЗаказовПоставщикам КАК EmeWmsПометкиКЭкспортуЗаказовПоставщикам
		|ГДЕ
		|	EmeWmsПометкиКЭкспортуЗаказовПоставщикам.КЭкспорту";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Счетчик = 0;
	
	ОшибкиОбработки = "";
	
	Пока Выборка.Следующий() Цикл
		
		//	Защита от плохих данных
		Если Выборка.Ссылка = Null Тогда
			Продолжить;
		КонецЕсли;
			
		//	ВАЖНО! Транзакция источника сообщения должна быть внешней
		НачатьТранзакцию();
		Попытка    		
				
			EmeWmsERPEngine.BeginExport(ERPData, "erp", "wms", "asn");
			Попытка
				
				Если РазрешенКЭкспорту(Выборка.Ссылка) Тогда
					////	Вначале подтверждаем экспорт,
					//ПодтвердитьЭкспорт(Выборка.Ссылка);
					////	а только потом экспортируем, чтобы не потерять флажок КЭКспорту при параллельном изменении данных.
					ЭкспортироватьЗаказПоставщику(ERPData, Выборка.Ссылка, ОшибкиОбработки);
					ПодтвердитьЭкспорт(Выборка.Ссылка); //НМА 06.12.17
					Счетчик = Счетчик + 1;
				КонецЕсли;
					
				EmeWmsERPEngine.CommitExport(ERPData);
				
			Исключение
				Сообщить(ОписаниеОшибки());
				EmeWmsERPEngine.RollbackExport(ERPData);
				ВызватьИсключение(ОписаниеОшибки());
			КонецПопытки;
				
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Ошибка = ОписаниеОшибки();
			Сообщить(Ошибка);
			ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Экспорт сообщения ASN: " + Ошибка);
			ТекстСообщения = "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + "No: " + Выборка.Ссылка + Символы.ПС + Ошибка;
			EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте("Критическая ошибка экспорта сообщения ASN", ТекстСообщения);
		КонецПопытки;
	
	КонецЦикла;
	
	Если Счетчик <> 0 Тогда
		Сообщить("Проэкспортировали сообщения ASN (" + Счетчик + "шт)");
	КонецЕсли;
	
	Если ОшибкиОбработки <> "" Тогда
		ОшибкиОбработки = "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + ОшибкиОбработки;
		EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте("Ошибки экспорта сообщений ASN", ОшибкиОбработки);
	КонецЕсли; 
	
КонецПроцедуры

//	Процедура ЭкспортироватьЗаказПоставщику экспортирует один заказ поставщику.
Процедура ЭкспортироватьЗаказПоставщику(ERPData, Заказ, ОшибкиОбработки = "")
	
	//	Заголовок заказа
	EmeWmsERPEngine.AppendHeaderLine(ERPData);
	ERPData.header.id             = Заказ.УникальныйИдентификатор();
	ERPData.header.asn_reg_no	  =	Заказ.Номер;
	ERPData.header.whs_to_code 	  =	EmeWmsУтилиты.ПолучитьКодСклада(Заказ.Склад);
	ERPData.header.vendor_to_code =	"7715948131"; //Заказ.Организация.ИНН;
	ERPData.header.supplier_id    =	EmeWmsУтилиты.ПолучитьКод(Заказ.Контрагент);
	ERPData.header.supplier_code  =	EmeWmsУтилиты.ПолучитьКод(Заказ.Контрагент);
	ERPData.header.supplier_name  =	Заказ.Контрагент.Наименование;
	ERPData.header.comment        =	Лев(Заказ.Комментарий, 128);
	
	//	Строки заказа
	EmeWmsERPEngine.SelectChild(ERPData, "lines");
	КодСтроки = 0;
	Для Каждого СтрокаТовара Из Заказ.Товары Цикл
		EmeWmsERPEngine.AppendChildLine(ERPData);
		КодСтроки = КодСтроки + 1;
		ERPData.lines.id			= КодСтроки;
		ERPData.lines.asn_line_no	= СтрокаТовара.НомерСтроки;
		ERPData.lines.goods_id		= EmeWmsУтилиты.ПолучитьКод(СтрокаТовара.Номенклатура);
		ERPData.lines.goods_code	= EmeWmsУтилиты.ПолучитьКодСпрНоменклатура_НеДляСинхронизации(СтрокаТовара.Номенклатура);
		ERPData.lines.lot_no		= ("-");
		//НМА 24.08.17
		Если ЗначениеЗаполнено(СтрокаТовара.НомерГТДПоставщика) Тогда
			НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрокаТовара.НомерГТДПоставщика);
			Если НомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда //СерияСрокГодности
				НайденнаяСерияНоменклатуры = Справочники.СерииНоменклатуры.НайтиПоНаименованию(СтрокаТовара.НомерГТДПоставщика,Истина,,СтрокаТовара.Номенклатура);
			Иначе
				НайденнаяСерияНоменклатуры = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("НомерГТД",НомерГТД,,СтрокаТовара.Номенклатура);
			КонецЕсли;
			Если НайденнаяСерияНоменклатуры = Справочники.СерииНоменклатуры.ПустаяСсылка() Тогда
				Сообщить("Серия "+СтрокаТовара.НомерГТДПоставщика+" не найдена, создайте серию и укажите срок годности!"+" Номенклатура: "+СтрокаТовара.Номенклатура.Наименование);
				ЗаписьЖурналаРегистрации("Данные.Изменение", УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.СерииНоменклатуры, НайденнаяСерияНоменклатуры, "Серия "+СтрокаТовара.НомерГТДПоставщика+" не найдена, создайте серию и укажите срок годности!"+" Номенклатура: "+СтрокаТовара.Номенклатура.Наименование);
			Иначе
				Если ЗначениеЗаполнено(НайденнаяСерияНоменклатуры.СрокГодности) Тогда
					ERPData.lines.bbd = НайденнаяСерияНоменклатуры.СрокГодности;
				Иначе
					Сообщить("В серии "+НайденнаяСерияНоменклатуры.Наименование+" не указан срок годности!"+" Номенклатура: "+СтрокаТовара.Номенклатура.Наименование);
					ЗаписьЖурналаРегистрации("Данные.Изменение", УровеньЖурналаРегистрации.Предупреждение, Метаданные.Справочники.СерииНоменклатуры, НайденнаяСерияНоменклатуры, "В серии "+НайденнаяСерияНоменклатуры.Наименование+" не указан срок годности!"+" Номенклатура: "+СтрокаТовара.Номенклатура.Наименование);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//ERPData.lines.gtd_reg_no  = (СтрокаТовара.НомерГТДПоставщика); 
		//ERPData.lines.gtd_line_no = (СтрокаТовара.КодНоменклатурыПоставщика);
		//НМА 24.08.17
	
		ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
		
		// выберем как базовую Единицу измерения с коэффициентом 1
		ЕдИзм_К1 = EmeWmsУтилиты.ПолучитьБазовуюЕдиницуИзмеренияК1(СтрокаТовара.Номенклатура);
		
		Если СтрокаТовара.ЕдиницаИзмерения = ЕдИзм_К1 Тогда // берем кол-во в базовых единицах
			ERPData.lines.quantity		= СтрокаТовара.Количество;
			ERPData.lines.price			= СтрокаТовара.Цена;
			ЕдиницаИзмерения 			= ЕдИзм_К1;
		Иначе
			Если ЕдИзм_К1 <> Неопределено Тогда
				ERPData.lines.quantity	= СтрокаТовара.Количество * СтрокаТовара.Коэффициент; // берем кол-во в базовых единицах
				ERPData.lines.price		= СтрокаТовара.Цена / СтрокаТовара.Коэффициент;
				ЕдиницаИзмерения 		= ЕдИзм_К1;
			Иначе
				ERPData.lines.quantity	= СтрокаТовара.Количество;  // не нашли базовую единицу берем кол-во в текущих единицах (ОШИБКА!)
				ERPData.lines.price		= СтрокаТовара.Цена;
				ЕдиницаИзмерения 		= СтрокаТовара.ЕдиницаИзмерения;
				ОшибкиОбработки = ОшибкиОбработки + Символы.ПС + Заказ + ", не найдена Базовая единица (К = 1) измерения у " + СтрокаТовара.Номенклатура + "";
				ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Экспорт док-та: """ + Заказ + """, не найдена Базовая единица измерения у """ + СтрокаТовара.Номенклатура + """");
			КонецЕсли; 
		КонецЕсли; 
		Если ЗначениеЗаполнено(ЕдиницаИзмерения.ЕдиницаПоКлассификатору.емеКодСинхронизации) Тогда
			ERPData.lines.mu_code		= ЕдиницаИзмерения.ЕдиницаПоКлассификатору.емеКодСинхронизации;
		Иначе
			ERPData.lines.mu_code		= ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Наименование;
		КонецЕсли; 
		
	КонецЦикла;		
	
КонецПроцедуры
