
Функция ПродажаПоФР (Отказ,Товар,Сумма,Количество,Скидка, СтрокаСкидки, СкидкаСуммой=0) Экспорт  // ins SailPlay 05.07.2016  - новый параметр СкидкаСуммой
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Количество) Тогда
		Количество = 1;
	КонецЕсли;
	
	Попытка
		Сумма = Число(Сумма);
		Количество = Число(Количество);
	Исключение
	КонецПопытки;
	
	Цена = Окр(Сумма/Количество,2,1);
	
	ECR.Name = Товар;
	ECR.Price = Цена;
	ECR.Quantity = Количество;
	//{+НАЧАЛО+Изменения} Автор: Тасмаджиев 15/06/2018//=============================================================================================	
	//ECR.Department = 1;
	//ECR.TaxTypeNumber = 0; //НДС 0%
	ECR.TaxTypeNumber = 4; //Без НДС
	ECR.Department = 1;
	//{-КОНЕЦ-Изменения} Автор: Тасмаджиев 15/06/2018//==============================================================================================
	Если ECR.Registration() <> 0 тогда
		Сообщить ("Не удалось зарегистрировать продажу",СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	// ins SailPlay 05.07.2016 
	//Если СкидкаСуммой > 0 Тогда
	//	ECR.Summ = СкидкаСуммой;
	//	ECR.Destination = СтрокаСкидки;
	//	Если ECR.SummDiscount() <> 0 тогда
	//		Сообщить ("Не удалось зарегистрировать продажу (скидки)",статусСообщения.Важное);
	//		Отказ = Истина;
	//		Возврат Отказ;
	//	КонецЕсли;
	//	//  end ins SailPlay 05.07.2016 
	//ИначеЕсли Скидка>0 Тогда
	//	ECR.Percents = Скидка;
	//	ECR.Destination = СтрокаСкидки;
	//	Если ECR.PercentsDiscount() <> 0 тогда
	//		Сообщить ("Не удалось зарегистрировать продажу (скидки)",статусСообщения.Важное);
	//		Отказ = Истина;
	//		Возврат Отказ;
	//	КонецЕсли;
	//КонецЕсли;
	
	
	Возврат Отказ;
	
КонецФункции

// Женя 12.07.2018
// Создание механизма чека коррекции через драйвер АТОЛ
// ((
Функция ЧекКоррекцииПоФР(Отказ,Источник,ТипКоррекции) Экспорт
	
	Отказ = Ложь;
	
	// Mode - Режим: 
	//     0 - Выбора 
	//     1 - Регистрации 
	//     2 - Отчётов без гашения 
	//     3 - Отчётов с гашением 
	ECR.Mode = 1; 
	ECR.SetMode(); 
	
	ECR.NewDocument(); 
	
	// Записать текущего пользователя 
	ECR.AttrNumber = 1021;
	ECR.AttrValue = ПараметрыСеанса.ТекущийПользователь; 
	ECR.WriteAttribute(); 
	
	// CheckType - Тип чека: 
	//     1 - Приход 
	//     2 - Возврат прихода 
	//     4 - Расход 
	//     5 - Возврат расхода 
	//     7 - Коррекция прихода 
	//     9 - Коррекция расхода 
	Если Источник.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств Тогда 
		ECR.CheckType = 7; 
		ECR.Name = "Коррекция прихода"; 
	ИначеЕсли Источник.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств Тогда
		ECR.CheckType = 9;
		ECR.Name = "Коррекция расхода";
	Иначе
		Сообщить("Тип расчета неопределен, выберите приход или расход денежных средств.");
		Возврат Отказ;
	КонецЕсли;
	
	// CheckMode - Режим формирования чека: 
	//     0 - только в электронном виде без печати на чековой ленте 
	//     1 - печатать на чековой ленте 
	ECR.CheckMode = 1; 
	//ECR.OpenCheck(); 
	
	// Регистрация суммы коррекции. В чеках коррекции можно зарегистрировать только одну позицию в количестве 1 на сумму коррекции. Передавать СНО,  скидки/надбавки, выполнять оплату запрещено. Чек коррекции можно только закрыть без сдачи по одному типу оплаты. 
	
	ECR.Price = Источник.СуммаДокумента;
	
	ECR.Quantity = 1;        // Нужно ли?? Женя
	ECR.Department = 1;  //0
	
	// ??????????? Корректно ли передавать НДС??? 
	// TaxTypeNumber - Номер налога: 
	//     0 - Налог из секции 
	//     1 - НДС 0% 
	//     2 - НДС 10% 
	//     3 - НДС 18% 
	//     4 - НДС не облагается 
	//     5 - НДС с расчётной ставкой 10% 
	//     6 - НДС с расчётной ставкой 18% 
	ECR.TaxTypeNumber = 4;
	//ECR.Department = 1;
	ECR.TaxMode = 0;
	
	// Сумма налога TaxSumm. Если передаётся 0, то ККТ считает самостоятельно по TaxTypeNumber и TaxMode. 
	// В противном случае в ОФД отправляется переданная сумма, но при значении настройки Т2Р1П114 бит 1 = 1 ККТ 
	// будет осуществлять контроль переданных данных, при чём контроль в будущем нельзя будет отключить (Русинова).
	//ECR.TaxSumm = 0;	
	
	// Тип коррекции:
	// 0 - самостоятельная операция,
	// 1 - операция по предписанию.
	Если Источник.ТипКоррекции = 0 Тогда
		ECR.AttrNumber = 1173;
		ECR.AttrValue = 0;
		ECR.WriteAttribute();
		
	ИначеЕсли Источник.ТипКоррекции = 1 Тогда
		ECR.AttrNumber = 1173;
		ECR.AttrValue = 1;
		ECR.WriteAttribute();
	КонецЕсли;
	
	// Основание для коррекции
	Попытка
		Если ЗначениеЗаполнено(Источник.ДатаДокументаОснования) И ЗначениеЗаполнено(Источник.НомерДокументаОснования) Тогда 
			ДеньОснКорр = Формат(Источник.ДатаДокументаОснования,"ДЛФ=Д");
			ECR.AttrNumber = 1177;
			ECR.AttrValue = "Осн.для корр. "+Источник.НомерДокументаОснования+" от "+ДеньОснКорр;
			ECR.WriteAttribute(); 
		КонецЕсли;	
	Исключение
		Сообщить("Дата и номер документа основания для чека коррекции не указаны.");
	КонецПопытки;
	
	//// Записать текущего пользователя 
	//ECR.AttrNumber = 1021;
	//ECR.AttrValue = ПараметрыСеанса.ТекущийПользователь; 
	//ECR.WriteAttribute(); 
	
	// Оплата и закрытие чека 
	// TypeClose - Тип оплаты: 
	//     0 - Наличными 
	//     1 - Электронными средствами платежа 
	Если Источник.ВидОплаты = Справочники.ВидыОплатЧекаККМ.Наличные Тогда 
		ECR.TypeClose = 0;
	Иначе//Если Источник.ВидОплаты = Справочники.ВидыОплатЧекаККМ Тогда
		ECR.TypeClose = 1;
	КонецЕсли;
	
	ECR.Summ = Источник.СуммаДокумента;
	ECR.Payment();
	
	Если ECR.Registration() <> 0 тогда
		Сообщить ("Не удалось зарегистрировать чек коррекции!",СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	ECR.CloseCheck(); 
	
	Возврат Отказ;
		
КонецФункции

// )) 12.08.2018 Женя

Функция ЗакрытьЧекФР (Отказ,Сдача,СуммаОпл,ВидОплаты,ВидОплПодКарта=Неопределено) Экспорт
	Отказ = Ложь;
	Если Сдача Тогда
		// закрытие чека наличными с вводом полученной от клиента суммы
		ECR.Summ = СуммаОпл;
		ECR.TypeClose = 0;
		Если ECR.Delivery() <> 0 тогда
			Сообщить ("Не удалось зарегистрировать продажу",СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат Отказ;
			
		КонецЕсли;
		
	ИначеЕсли ВидОплаты = "БезНал" Тогда
		ECR.Summ = СуммаОпл;
		//{+НАЧАЛО+Добавления} Автор: Тасмаджиев 20/06/2018//=============================================================================================
		Если ECR.ФФДверсия = 100 Тогда
			ECR.TypeClose = 3; //ффд 1.0.0
		Иначе
			ECR.TypeClose = 1; //ффд 1.0.5  и выше
		КонецЕсли;
		//{-КОНЕЦ-Добавления} Автор: Тасмаджиев 20/06/2018//==============================================================================================
		ECR.Payment();
		Если ECR.CloseCheck() <> 0 тогда
			Сообщить ("Не удалось зарегистрировать продажу",СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат Отказ;
		КонецЕсли;
		//15082017 Подарочные карты не общей скидкой, а типом оплаты. Рустам.	
	ИначеЕсли ВидОплаты = "ПодарочнаяКарта" Тогда
		ECR.Summ = СуммаОпл;
		ECR.TypeClose = 4;
		ECR.Payment();
		Если ECR.Remainder = 0 Тогда
			Если ECR.CloseCheck() <> 0 тогда
				Сообщить ("Не удалось зарегистрировать продажу (подарочные карты)",СтатусСообщения.Важное);
				Отказ = Истина;
				Возврат Отказ;
			КонецЕсли;
		Иначе
			Если ЗакрытьЧекФР(Ложь,Ложь,ECR.Remainder,ВидОплПодКарта) = Истина  Тогда
				Отказ=Истина;
				Возврат Отказ;
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		// закрытие чека наличными без ввода полученной от клиента суммы
		ECR.Summ = СуммаОпл;
		ECR.TypeClose = 0;
		ECR.Payment();
		Если ECR.CloseCheck() <> 0 тогда
			Сообщить ("Не удалось зарегистрировать продажу",СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат Отказ;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция СкидкаСуммойНаВесьЧек (Отказ, СуммаСкидки) Экспорт
	Отказ=Ложь;
	ECR.Summ = СуммаСкидки;
	ECR.Destination = 0;
	Если ECR.SummDiscount() <> 0 Тогда
		Сообщить ("Не удалось зарегистрировать продажу (общая скидка)",статусСообщения.Важное);
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

Функция ПодготовитьФРКПродаже (Отказ) Экспорт
	Отказ=Ложь;
	
	Если ECR.GetStatus() <> 0 тогда
		Сообщить ("Нет связи с ККМ!",СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	Если ECR.SessionOpened = 0 Тогда
		Сообщить ("Торговая смена НЕ открыта! Продажа невозможна!",СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	// если есть открытый чек, то отменяем его
	Если ECR.CheckState <> 0 тогда
		Если ECR.CancelCheck() <> 0 тогда
			Сообщить ("Есть открытый чек, который не удалось отменить",СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат Отказ;
		КонецЕсли;
	КонецЕсли;
	
	//// входим в режим регистрации
	//// устанавливаем пароль кассира
	ECR.Password = "1";
	//// входим в режим регистрации
	ECR.Mode = 1;
	Если ECR.SetMode() <> 0 тогда
		Сообщить ("Не удалось установить нужный режим",СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	Возврат Отказ;
КонецФункции

Функция ПечатьСтроки (Стр,Выравнивание) Экспорт
	ECR.Caption = Стр;
	ECR.Alignment = Выравнивание;
	ECR.TextWrap=1;
	ECR.PrintString();
	ECR.Alignment = 0;
	ECR.TextWrap=0;
КонецФункции

Функция ПечатьКартинки(Картинко) Экспорт
	
	//ECR.Password = "1";
	//ECR.Mode = 1;
	//Если ECR.SetMode() <> 0 тогда
	//	Возврат Ложь;
	//КонецЕсли;
	
	
	ECR.PrintPurpose = 1;
	ECR.AutoSize = False;
	ECR.Alignment = 1;
	ECR.FileName=Картинко;
	ECR.PrintBitmapFromFile();
	
	//Если ECR.ResetMode() <> 0 тогда
	//	Возврат Ложь;
	//КонецЕсли;
	
	
КонецФункции

Функция ПечатьЧекаВозможна (Источник) Экспорт
	
	Если Источник.ОтражатьВУправленческомУчете=Ложь Тогда
		Сообщить ("Нужно отразить в упр.учете!",СтатусСообщения.Важное);
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Р.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК Р
	|ГДЕ
	|	Р.Объект = &Склад
	|	И Р.Свойство = &Свойство";
	
	Запрос.УстановитьПараметр("Склад",Источник.Склад);
	Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("ФискальныйРегистратор"));
	
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Сообщить ("В магазине отключена печать чеков!",СтатусСообщения.Важное);
		возврат Ложь;
	КонецЕсли;
	
	Выб = Рез.Выбрать();
	Выб.Следующий();
	Если Выб.Значение = Ложь Тогда
		Сообщить ("В магазине отключена печать чеков!",СтатусСообщения.Важное);
		возврат Ложь;
	КонецЕсли;
	
	
	Если (Источник.ВидОплаты = Неопределено) ИЛИ (Источник.ВидОплаты = Справочники.ВидыОплатЧекаККМ.ПустаяСсылка()) Тогда
		Сообщить ("Укажите вид оплаты!",статусСообщения.Важное);
		Возврат Ложь;
	КонецЕсли;
	
	Если Источник.ВидОплаты = Справочники.ВидыОплатЧекаККМ.Наличные Тогда
		СуммаОпл = Источник.ПолучитьФорму("ФормаДокумента").СуммаОплаты;
		Если СуммаОпл = 0 Тогда
			Сообщить ("Укажите сумму оплаты!",СтатусСообщения.Важное);
			возврат Ложь;
		ИначеЕсли СуммаОпл<Источник.СуммаДокумента Тогда
			Сообщить ("Сумма оплаты меньше суммы документа!",СтатусСообщения.Важное);
			возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПечататьЧек (Источник,Отказ)  Экспорт
	//Элементарные проверки на реквизиты документа перенесены в процедуру "ЧекНажатие" формы документа "Реализация товаров и услуг" //07.09.2017, Юра
	
	Если ПараметрыСеанса.ТекущийПользователь.Родитель = Справочники.Пользователи.НайтиПоКоду("Магазины") Тогда
		Сдача = Ложь;
		Если Источник.ВидОплаты = Справочники.ВидыОплатЧекаККМ.Наличные Тогда
			ВидОплаты = "Нал";
			СуммаОпл = Источник.ПолучитьФорму("ФормаДокумента").СуммаОплаты;
			Сдача = СуммаОпл<>Источник.СуммаДокумента;
			Если Сдача Тогда //25042018 если разница в пределах копеек, отменяем сдачу:) и сумма оплаты = сумме дока
				ТекРазница = СуммаОпл-Источник.СуммаДокумента;
				ТекРазница = Макс(-ТекРазница,ТекРазница);
				Если ТекРазница<1 Тогда
					Сдача=Ложь;
					СуммаОпл =  Источник.СуммаДокумента;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ВидОплаты = "БезНал";
			СуммаОпл =  Источник.СуммаДокумента;
		КонецЕсли;
		
		Если ПодготовитьФРКПродаже(Ложь)=Истина Тогда
			Отказ=Истина;
			Возврат;
		КонецЕсли;
		
		// Женя 13.07.2018
		// Добавила поиск организации через попытку, было только "лОрганизация = ПолучитьОрганизациюПоСкладу(Источник.Склад);"
		// ((
		Попытка 
			лОрганизация = ПолучитьОрганизациюПоСкладу(Источник.Склад);
		Исключение
			лОрганизация = Источник.Организация;
		КонецПопытки;
		// )) 13.07.2018 Женя
		
		// Женя 22.08.2018
		// Закомментировала печать первой строки в чеках "www.5lb.ru" .
		// ((
		//ПечатьСтроки(Символ(9)+"w"+Символ(9)+"w"+Символ(9)+"w"+"."+Символ(9)+"5"+Символ(9)+"l"+Символ(9)+"b"+"."+Символ(9)+"r"+Символ(9)+"u",1);
		// )) 22.08.2018 Женя
		
		Если лОрганизация = Неопределено Тогда
			//ПечатьСтроки(Символ(9)+"О"+Символ(9)+"О"+Символ(9)+"О"+" "+Символ(9)+"5"+Символ(9)+"Л"+Символ(9)+"Б",0);
			ПечатьСтроки("ООО 5ЛБ",0);
			//ПечатьСтроки("ИНН 7715948131",0);
			ПечатьСтроки("ИНН 7715431262",0);
		Иначе
			ПечатьСтроки(лОрганизация.Наименование,0);
			ПечатьСтроки("ИНН "+СокрЛП(лОрганизация.ИНН),0);
		КонецЕсли;
		
		ПечатьСтроки(ВернутьАдресГамаза(),0);
		ПечатьСтроки("  ",0);
		
		// ins SailPlay 11.05.2016 
		Попытка
			флПечатьSP = (ПараметрыСеанса.НеВыгружатьВSailPlay=ЛОжь);
		Исключение
			флПечатьSP = Ложь;
		КонецПопытки; 
		//  end ins SailPlay 11.05.2016 
		
		// Женя 13.07.2018
		// Добавила попытку,т.к.при чеках коррекции товаров не может быть 
		// ((
		Попытка
			
			ECR.Mode = 1;
			ECR.NewDocument();
			//#***+Добавления*** Тасмаджиев 21/12/2018// ->>
			//ФИО Пользавателя в чек.
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ФИОФизЛицСрезПоследних.Фамилия,
			|	ФИОФизЛицСрезПоследних.Имя,
			|	ФИОФизЛицСрезПоследних.Отчество
			|ИЗ
			|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ТекДата, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних");
			
			Запрос.УстановитьПараметр("ФизЛицо", ПараметрыСеанса.ТекущийПродавец.ФизЛицо);
			Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если НЕ РезультатЗапроса.Пустой() Тогда
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Фамилия = ВыборкаДетальныеЗаписи.Фамилия;
					Имя = ВыборкаДетальныеЗаписи.Имя;
					Отчество = ВыборкаДетальныеЗаписи.Отчество; 
					ФамилияИмяОтчество = Фамилия + " " + Имя + " " + Отчество;
					
				КонецЦикла;
				
				Если НЕ ПустаяСтрока(СокрЛП(ФамилияИмяОтчество)) Тогда 
					
					ECR.AttrNumber = 1021;
					ECR.AttrValue = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчество); 
					ECR.WriteAttribute();
					
				КонецЕсли;
				
			КонецЕсли;
			//#***-Добавления*** Тасмаджиев 21/12/2018// <<-
			
			Для Каждого ст из Источник.Товары Цикл
				// ins SailPlay 05.07.2016 
				СкидкаСуммой=0;
				Если флПечатьSP Тогда
					Попытка                
						СкидкаСуммой = ст.СуммаСкидкиSailPlay;
					Исключение
					КонецПопытки;    
				КонецЕсли; 
				//  end ins SailPlay 05.07.2016 
				
				Если ПродажаПоФР(Ложь,ст.Номенклатура.Наименование,ст.Сумма,ст.Количество,ст.ПроцентСкидкиНаценки+ст.ПроцентАвтоматическихСкидок,1, СкидкаСуммой)=Истина Тогда
					Отказ=Истина;
					Возврат;	
				КонецЕсли;
			КонецЦикла;
		Исключение
			
		КонецПопытки;
		// )) 13.07.2018 Женя
		
		
		// Женя 12.07.2018
		// Создание механизма чека коррекции через драйвер АТОЛ
		// ((
		Попытка
			Если Источник.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств 		
				ИЛИ  Источник.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств Тогда
				Отказ = ЧекКоррекцииПоФР(Ложь,Источник,Источник.ТипКоррекции);
				Возврат;
			КонецЕсли;
		Исключение
		КонецПопытки;
		// )) 12.07.2018 Женя	
		
		//Если есть подарочные карты, фигачим общую скидку
		//15082017 Подарочные карты не общей скидкой, а типом оплаты. Рустам.
		//Если Источник.ПодарочныеКарты.Итог("Сумма")>0 Тогда
		//	СуммаОбщСкидки = Источник.ПодарочныеКарты.Итог("Сумма");
		//	Если Источник.Товары.Итог("Сумма")+Источник.Услуги.Итог("Сумма")-СуммаОбщСкидки<=0 Тогда
		//		 СуммаОбщСкидки = Источник.Товары.Итог("Сумма")+Источник.Услуги.Итог("Сумма")-0.01;
		//	КонецЕсли;
		//	Если СкидкаСуммойНаВесьЧек (Ложь, СуммаОбщСкидки) = Истина Тогда
		//		Отказ=Истина;
		//		Возврат;
		//	КонецЕсли;
		//КонецЕсли;
		
		// ins SailPlay 05.05.2016 
		Попытка
			Если флПечатьSP И типЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
				СуммаSailPlayБонусы = Источник.Товары.Итог("СуммаСкидкиОплатыБонусомSailPlay");
				МассивСтрокSP = Источник.ПолучитьМассивСтрокSailPlayВЧек();
				Для каждого стрПечать Из МассивСтрокSP Цикл
					ПечатьСтроки(стрПечать,0);    
				КонецЦикла; 
				Если СуммаSailPlayБонусы > 0 Тогда
					Если СкидкаСуммойНаВесьЧек(Ложь, СуммаSailPlayБонусы) = Истина Тогда
						Отказ=Истина;
						Возврат;
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли; 
		Исключение
			#Если Клиент Тогда
				Сообщить("Ошибка печати строки программы лояльности SailPlay! " + ОписаниеОшибки());
			#КонецЕсли
		КонецПопытки; 
		//  end ins SailPlay 05.05.2016 
		
		//ПечатьКартинки("C:\1Сlnk\123.BMP");
		
		//15082017 Подарочные карты не общей скидкой, а типом оплаты. Рустам.
		// Женя 13.07.2018
		// Добавила попытку, т.к. в чеках коррекции не будет подарочных карт
		// ((
		Попытка
			СуммаПодарочнойКарты = Источник.ПодарочныеКарты.Итог("Сумма");
			Если СуммаПодарочнойКарты>0 Тогда
				Если ЗакрытьЧекФР(Ложь,Ложь,СуммаПодарочнойКарты,"ПодарочнаяКарта",ВидОплаты) = Истина  Тогда
					Отказ=Истина;
					Возврат;
				КонецЕсли;
			Иначе		
				Если ЗакрытьЧекФР(Ложь,Сдача,СуммаОпл,ВидОплаты) = Истина  Тогда
					Отказ=Истина;
					Возврат;
				КонецЕсли;
			КонецЕсли;	
		Исключение
		КонецПопытки;
		// )) 13.07.2018 Женя
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверкаОлСтарс(Источник) Экспорт
	ОлСтарс = Справочники.Номенклатура.НайтиПоКоду("67");
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	СУММА(Т.Сумма) КАК Сумма
	//|ИЗ
	//|	Документ.РеализацияТоваровУслуг.Товары КАК Т
	//|ГДЕ
	//|	Т.Ссылка = &ЭтотДок
	//|	И Т.Номенклатура В ИЕРАРХИИ(&AllStars)";
	//Запрос.УстановитьПараметр("ЭтотДок",Источник.Ссылка);
	//Запрос.УстановитьПараметр("AllStars",ОлСтарс);
	
	СуммаОлСтарс = 0;
	Для Каждого ст из Источник.Товары Цикл
		Если ст.Номенклатура.Родитель = ОлСтарс Тогда
			СуммаОлСтарс = СуммаОлСтарс+ст.Сумма;
		КонецЕсли;
		Если СуммаОлСтарс>=1000 Тогда 
			прервать;
		КонецЕсли;
	КонецЦикла;
	
	//Рез = Запрос.Выполнить().Выгрузить();
	//Если Рез[0].Сумма>=1000 Тогда
	Если СуммаОлСтарс>=1000 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
		|	Р.Код
		|ИЗ
		|	РегистрСведений.ПромоКоды КАК Р
		|ГДЕ
		|	Р.Выдан = ЛОЖЬ
		|	И Р.Бренд = &AllStars";
		Запрос.УстановитьПараметр("AllStars",ОлСтарс);
		
		РезКоды = Запрос.Выполнить();
		Если РезКоды.Пустой() Тогда
			Возврат 0;
		КонецЕсли;
		
		ВыбКоды = РезКоды.Выбрать();
		ВыбКоды.Следующий();
		
		Набор = РегистрыСведений.ПромоКоды.СоздатьНаборЗаписей();
		
		Набор.Отбор.Бренд.Установить(ОлСтарс);
		Набор.Отбор.Код.Установить(ВыбКоды.Код);
		Набор.Прочитать();
		
		СтрокаДанных = Набор[0];
		СтрокаДанных.Выдан = Истина;
		СтрокаДанных.Магазин = Источник.Склад;
		СтрокаДанных.Документ = Источник;
		СтрокаДанных.Пользователь = Источник.Ответственный;
		СтрокаДанных.Дата = ТекущаяДата();
		
		Попытка
			Набор.Записать();
		Исключение
			Сообщить ("Не удалось сформировать промо код!");
			Возврат 0;
		КонецПопытки;
		
		Возврат ВыбКоды.Код;
	КонецЕсли;
	
КонецФункции

Функция ПроверкаНутрикс(Источник)  Экспорт
	ОлСтарс = Справочники.Номенклатура.НайтиПоКоду("81");
	СуммаОлСтарс = 0;
	Для Каждого ст из Источник.Товары Цикл
		Если ст.Номенклатура.Родитель = ОлСтарс Тогда
			СуммаОлСтарс = СуммаОлСтарс+ст.Сумма;
		КонецЕсли;
		Если СуммаОлСтарс>=1000 Тогда 
			прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если СуммаОлСтарс>=1000 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
		|	Р.Код
		|ИЗ
		|	РегистрСведений.ПромоКоды КАК Р
		|ГДЕ
		|	Р.Выдан = ЛОЖЬ
		|	И Р.Бренд = &AllStars";
		Запрос.УстановитьПараметр("AllStars",ОлСтарс);
		
		РезКоды = Запрос.Выполнить();
		Если РезКоды.Пустой() Тогда
			Возврат 0;
		КонецЕсли;
		
		ВыбКоды = РезКоды.Выбрать();
		ВыбКоды.Следующий();
		
		Набор = РегистрыСведений.ПромоКоды.СоздатьНаборЗаписей();
		
		Набор.Отбор.Бренд.Установить(ОлСтарс);
		Набор.Отбор.Код.Установить(ВыбКоды.Код);
		Набор.Прочитать();
		
		СтрокаДанных = Набор[0];
		СтрокаДанных.Выдан = Истина;
		СтрокаДанных.Магазин = Источник.Склад;
		СтрокаДанных.Документ = Источник;
		СтрокаДанных.Пользователь = Источник.Ответственный;
		СтрокаДанных.Дата = ТекущаяДата();
		
		Попытка
			Набор.Записать();
		Исключение
			Сообщить ("Не удалось сформировать промо код!");
			Возврат 0;
		КонецПопытки;
		
		Возврат ВыбКоды.Код;
	КонецЕсли;
	
КонецФункции

Функция ВернутьАдресГамаза () Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст="
	|ВЫБРАТЬ
	|	ЗначениеНастроек.Значение 
	|ИЗ
	|	РегистрСведений.НастройкиПользователей КАК ЗначениеНастроек
	|ГДЕ
	|   ЗначениеНастроек.Пользователь = &Юзер
	|И  ЗначениеНастроек.Настройка = &Скл";
	Запрос.УстановитьПараметр("Юзер", Справочники.Пользователи.НайтиПоКоду(ПользователиИнформационнойБазы.ТекущийПользователь().Имя).Ссылка);
	Запрос.УстановитьПараметр("Скл", ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойСклад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Складик = Выборка.Значение;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Р.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК Р
	|ГДЕ
	|	Р.Объект = &Склад
	|	И Р.Свойство = &Свойство";
	
	Запрос.УстановитьПараметр("Склад",Складик);
	Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Адрес",Истина));
	
	ВыбАдр = Запрос.Выполнить().Выбрать();
	ВыбАдр.Следующий();
	Возврат ВыбАдр.Значение;
	
	
	
КонецФункции

Функция ПолучитьОрганизациюПоСкладу (Склад) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Контрагент КАК Орг
	|ИЗ
	|	РегистрСведений._5LB_СоответствиеСкладаИКонтрагента.СрезПоследних(&ТекДата, Склад = &Склад) КАК Рег";
	Запрос.УстановитьПараметр("Склад",Склад);
	//11082017 Фильтр значений по текущей дате. Рустам.
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	
	Выб = Запрос.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.Орг;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Подарочные акции

// возвращает таблицу значений по всем товарам т.ч. по которым есть номенклатура и наборы (группы) сопутствующей (подарочные акции)
Функция ПолучитьТоварыПодаркиПоОсновной(ДокОбъект, ТабЧастьТовары=Неопределено) Экспорт
	
	РезТабл = Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрАвто.Номенклатура КАК Номенклатура, 
	// 06.12
	|	РегистрАвто.НоменклатураДобавления КАК НоменклатураСопутствующая,
	//|	ВЫБОР
	//|		КОГДА ТИПЗНАЧЕНИЯ(РегистрАвто.НоменклатураДобавления) = ТИП(Справочник.Номенклатура)
	//|			ТОГДА РегистрАвто.НоменклатураДобавления
	//|		КОГДА ТИПЗНАЧЕНИЯ(РегистрАвто.НоменклатураДобавления) = ТИП(Справочник._5LB_ГруппыНоменклатуры)
	//|			ТОГДА ГруппыНоменклатурыСопутствующие.Номенклатура
	//|		ИНАЧЕ NULL
	//|	КОНЕЦ КАК НоменклатураСопутствующая,
	//|	ВЫБОР
	//|		КОГДА ТИПЗНАЧЕНИЯ(РегистрАвто.НоменклатураДобавления) = ТИП(Справочник.Номенклатура)
	//|			ТОГДА ЛОЖЬ
	//|		КОГДА ТИПЗНАЧЕНИЯ(РегистрАвто.НоменклатураДобавления) = ТИП(Справочник._5LB_ГруппыНоменклатуры)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ NULL
	//|	КОНЕЦ КАК ЭтоГруппаНоменклатурыСопутствующей,		
	|	РегистрАвто.ЗапретУдаления,
	|	РегистрАвто.ЦенаНоменклатурыДобавления КАК Цена,
	// 02.12
	|	РегистрАвто.Количество КАК Количество,
	|	РегистрАвто.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	// 05.12
	|	РегистрАвто.ТолькоЕслиЕстьВНаличии КАК ТолькоЕслиЕстьВНаличии					
	|ИЗ
	|	РегистрСведений.АвтоДобавлениеВМагазинСопутствующиеТовары КАК РегистрАвто
	//// 06.12
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|	Справочник._5LB_ГруппыНоменклатуры.СоставГруппы КАК ГруппыНоменклатурыСопутствующие
	//|	ПО ГруппыНоменклатурыСопутствующие.Ссылка = РегистрАвто.НоменклатураДобавления
	//|		
	|ГДЕ
	|	РегистрАвто.Номенклатура В (&СписокОсновнойНоменклатуры)
	|	И РегистрАвто.Раздел = ЗНАЧЕНИЕ(Перечисление.Правила.Реализация)	
	|	И (РегистрАвто.ДатаС <= &ДатаДок ИЛИ РегистрАвто.ДатаС = ДАТАВРЕМЯ(1,1,1))
	|   И (РегистрАвто.ДатаПо >= &ДатаДок ИЛИ РегистрАвто.ДатаПо = ДАТАВРЕМЯ(1,1,1))	
	|	И (РегистрАвто.Магазин = &Магазин ИЛИ РегистрАвто.Магазин = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|";
	
	Запрос.УстановитьПараметр("ДатаДок", ?(ДокОбъект.Дата=Дата(1,1,1), ТекущаяДата(), ДокОбъект.Дата));
	Запрос.УстановитьПараметр("Магазин", ДокОбъект.Склад);
	Если ТабЧастьТовары = Неопределено Тогда
		ТЧ = ДокОбъект.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	Иначе
		Если ТипЗнч(ТабЧастьТовары) = Тип("ТаблицаЗначений") Тогда
			ТЧ = ТабЧастьТовары.ВыгрузитьКолонку("Номенклатура");
		ИначеЕсли ТипЗнч(ТабЧастьТовары) = Тип("СправочникСсылка.Номенклатура") Тогда
			ТЧ = Новый Массив();
			ТЧ.Добавить(ТабЧастьТовары);
		Иначе
			Возврат РезТабл;	
		КонецЕсли;
	КонецЕсли;
	Запрос.УстановитьПараметр("СписокОсновнойНоменклатуры", ТЧ);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
	Иначе
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		РезТабл = РезультатЗапроса.Выгрузить();
		//РезТабл.Колонки.Очистить();
		//РезТабл.Колонки.Добавить("НоменклатураСопутствующая", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		//
		
		//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//	
		//	Если ТипЗнч(ВыборкаДетальныеЗаписи.НоменклатураСопутствующая) = Тип("СправочникСсылка.Номенклатура") Тогда
		//		НоваяСтрока = РезТабл.Добавить();				
		//		НоваяСтрока.НоменклатураСопутствующая = ВыборкаДетальныеЗаписи.НоменклатураСопутствующая;
		//	ИначеЕсли типЗнч(ВыборкаДетальныеЗаписи.НоменклатураСопутствующая) = Тип("СправочникСсылка._5LB_ГруппыНоменклатуры") Тогда
		//		Если ВыборкаДетальныеЗаписи.НоменклатураСопутствующая.СоставГруппы.Количество() > 0 Тогда									
		//			Для Каждого ТекСтрСостава Из ВыборкаДетальныеЗаписи.НоменклатураСопутствующая.СоставГруппы Цикл
		//				НоваяСтрока = РезТабл.Добавить();		
		//				НоваяСтрока.НоменклатураСопутствующая = ТекСтрСостава.Номенклатура;
		//			КонецЦикла;
		//		Иначе
		//		КонецЕсли;
		//	КонецЕсли;
		//	
		//КонецЦикла;		
		
	КонецЕсли;
	
	Возврат РезТабл;
	
КонецФункции


// обратная задача - функция возвращает т.з. записи р.с. в которые входит сопуствующая н-ра 
// в составе набора (группы) "ОбъектАнализа" - (документ, т.ч. или номенклатура)
Функция ПолучитьТоварыПодаркиПоСопутствующей(НоменклатураСопутствующая, ОбъектАнализа, СкладМагазин=Неопределено, НаДату=Неопределено) Экспорт
	
	РезТабл = Новый ТаблицаЗначений;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Группы.Ссылка КАК Номенклатура
	|ПОМЕСТИТЬ втНоменклатураГруппы
	|ИЗ
	|	Справочник._5LB_ГруппыНоменклатуры.СоставГруппы КАК Группы
	|ГДЕ
	|	Группы.Номенклатура = &НоменклатураСопутствующая
	|;
	|////////////////////////////////////		
	|ВЫБРАТЬ
	|	РегистрАвто.Номенклатура КАК Номенклатура, 
	|	РегистрАвто.НоменклатураДобавления КАК НоменклатураСопутствующая,
	|	РегистрАвто.ЗапретУдаления,
	|	РегистрАвто.ЦенаНоменклатурыДобавления КАК Цена,
	|	РегистрАвто.Количество КАК Количество,
	|	РегистрАвто.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РегистрАвто.ТолькоЕслиЕстьВНаличии КАК ТолькоЕслиЕстьВНаличии				
	|ИЗ
	|	РегистрСведений.АвтоДобавлениеВМагазинСопутствующиеТовары КАК РегистрАвто		
	|ГДЕ
	|	РегистрАвто.Номенклатура В (&НоменклатураСписок)
	|	И (РегистрАвто.НоменклатураДобавления = &НоменклатураСопутствующая
	|	ИЛИ РегистрАвто.НоменклатураДобавления В (ВЫБРАТЬ НоменклатураГруппы.Номенклатура ИЗ втНоменклатураГруппы КАК НоменклатураГруппы))
	|
	|	И РегистрАвто.Раздел = ЗНАЧЕНИЕ(Перечисление.Правила.Реализация)	
	|	И (РегистрАвто.ДатаС <= &ДатаДок ИЛИ РегистрАвто.ДатаС = ДАТАВРЕМЯ(1,1,1))
	|   И (РегистрАвто.ДатаПо >= &ДатаДок ИЛИ РегистрАвто.ДатаПо = ДАТАВРЕМЯ(1,1,1))	
	|	И (РегистрАвто.Магазин = &Магазин ИЛИ РегистрАвто.Магазин = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|";
	
	Если ТипЗнч(ОбъектАнализа) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		Запрос.УстановитьПараметр("ДатаДок", ?(ОбъектАнализа.Дата=Дата(1,1,1), ТекущаяДата(), ОбъектАнализа.Дата));
		Запрос.УстановитьПараметр("Магазин", ОбъектАнализа.Склад);
		Запрос.УстановитьПараметр("НоменклатураСписок", ОбъектАнализа.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура"));		
	ИначеЕсли ТипЗнч(ОбъектАнализа) = Тип("СправочникСсылка.Номенклатура") Тогда
		Если ЗначениеЗаполнено(НаДату) Тогда
			Запрос.УстановитьПараметр("ДатаДок", НаДату);
		Иначе
			Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата());
		КонецЕсли;
		Если ЗначениеЗаполнено(СкладМагазин) Тогда
			Запрос.УстановитьПараметр("Магазин", СкладМагазин);
		Иначе
			Запрос.УстановитьПараметр("Магазин", Справочники.Склады.ПустаяСсылка());
		КонецЕсли;
		МассивН = Новый Массив();
		МассивН.Добавить(ОбъектАнализа);
		Запрос.УстановитьПараметр("НоменклатураСписок", МассивН);	
	Иначе
		Возврат РезТабл;	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НоменклатураСопутствующая", НоменклатураСопутствующая);	
	
	РезТабл = Запрос.Выполнить().Выгрузить();
	//Если НЕ Запрос.Выполнить().Пустой() Тогда
	//	Рез = Истина;
	//КонецЕсли;
	
	Возврат РезТабл;
	
	
	
КонецФункции


