Процедура ПерваяМА (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если РольДоступна(Метаданные.Роли.МенеджерПоПродажам) Тогда
	//	возврат;
	//КонецЕсли;
	
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1305452"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1304452"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("52441"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1307452"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1303452"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1306452"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1294452"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("13034452"));	
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1998451"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1308452"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("394452"));
	//
	//СписокДляВыбора = Новый СписокЗначений;
	//
	//
	//КоэфПодарка = 3;
	//
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	//
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	СколькоВхождений = СколькоВхождений+ст.Количество;	
	//	СписокДляВыбора.Добавить(ст.Номенклатура);
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = СписокДляВыбора.ВыбратьЭлемент("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//		КонецЦикла;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Значение,"Номенклатура");
	//		Если ТекСтр<>Неопределено Тогда
	//			Если ТекСтр.Количество>1 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество-1;
	//				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//				
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Значение;
	//				НовСтр.Количество = 1;
	//				НовСтр.Коэффициент = стр.Коэффициент;
	//				НовСтр.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	
	//			ИначеЕсли ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				ТекСтр.Сумма = 0.01;
	//				ТекСтр.Цена = 0.01;
	//				ТекСтр.СуммаНДС = 0.01;
	//			КонецЕсли;
	//		Иначе
	//			Если ТабличнаяЧасть.Количество() = ТабличнаяЧасть.Итог("Количество") Тогда
	//				Сообщить("Низя этот товар по акции продать..",СтатусСообщения.Важное);
	//				прервать;
	//			КонецЕсли;
	//			Если стр.Количество>1 Тогда
	//				стр.Количество = стр.Количество-1;
	//				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стр, Объект);
	//				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стр, Объект);
	//			КонецЕсли;
	//			
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Значение;
	//			НовСтр.Количество = 1;
	//			НовСтр.Коэффициент = стр.Коэффициент;
	//			НовСтр.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//		КонецЕсли;
	//		п = п+1;
	//	КонецЦикла;
	//КонецЦикла;
	
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("50823"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("51278"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("51351"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("52132"));
	
	
	КоэфПодарка = 1;
	БанкаПодарок = Справочники.Номенклатура.НайтиПоКоду("895570");
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;	
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	
	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(БанкаПодарок,Объект,ТабличнаяЧасть);
	ТекСтр = СвободныйОстатокПозиции.Найти(БанкаПодарок,"Номенклатура");
	Если ТекСтр = неопределено тогда
		возврат;
	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<СколькоПодарков) Тогда
		возврат;
	КонецЕсли;   
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(БанкаПодарок,"Номенклатура");
			Если ТекСтр<>Неопределено Тогда
				Если п>0 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				ИначеЕсли СколькоПодарков = 1 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				КонецЕсли;
				ТекСтр.Цена = 0.01;
				ТекСтр.СуммаНДС = 0.01;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стр, Объект);
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = БанкаПодарок;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = стр.Коэффициент;
				НовСтр.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				Если Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак Тогда
					НовСтр.Качество = Справочники.Качество.Новый;
				КонецЕсли;
			КонецЕсли;
			п = п+1;
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура Cellucor (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если РольДоступна(Метаданные.Роли.МенеджерПоПродажам) Тогда
	//	возврат;
	//КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("20305"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("208147"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("203073"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("203052"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("203051"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("203072"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("870540"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("875266"));	
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("203071"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("203050"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("885539"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("885410"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("875012"));
	
	//ИндексПоследнего = СписокДляВыбора.Количество() - 1;
	//
	//Для Индекс = 0 По ИндексПоследнего Цикл
	//	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,Объект);
	//	ТекСтр = СвободныйОстатокПозиции.Найти(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,"Номенклатура");
	//	Если ТекСтр = неопределено тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	КонецЕсли;   
	//КонецЦикла;
	
	//Если СписокДляВыбора.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;	
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				//Выбор = СписокДляВыбора.ВыбратьЭлемент("Выберите товар в подарок");
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				ТекСтр.Количество = ТекСтр.Количество+1;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				//Если ТабличнаяЧасть.Количество() = ТабличнаяЧасть.Итог("Количество") Тогда
				//	Сообщить("Низя этот товар по акции продать..",СтатусСообщения.Важное);
				//	прервать;
				//КонецЕсли;
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = стр.Коэффициент;
				НовСтр.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
	
	
КонецПроцедуры

Процедура Cytosport (ТабличнаяЧасть, Объект) Экспорт
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("521453"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("85757"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("542122"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("526232"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("56452"));
	
	
	КоэфПодарка = 1;
	БанкаПодарок = Справочники.Номенклатура.НайтиПоКоду("895075");
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;	
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	
	//СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(БанкаПодарок,Объект,ТабличнаяЧасть);
	//ТекСтр = СвободныйОстатокПозиции.Найти(БанкаПодарок,"Номенклатура");
	//Если ТекСтр = неопределено тогда
	//	возврат;
	//ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<СколькоПодарков) Тогда
	//	возврат;
	//КонецЕсли;   
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(БанкаПодарок,Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()> 1 Тогда
				Выбор = Неопределено;
				Пока Выбор=Неопределено Цикл
					Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
					Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				КонецЦикла;
				
				Выбор.Свободный = Выбор.Свободный-1;
				ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Иначе
				ТабОстатковПодарки[0].Свободный = ТабОстатковПодарки[0].Свободный-1;
				ТекСтр = ТабличнаяЧасть.Найти(БанкаПодарок,"Номенклатура");
			КонецЕсли;
			
			Если (ТекСтр<>Неопределено) И (?(ТабОстатковПодарки.Количество()>1,Выбор.Качество = ТекСтр.Качество,ТабОстатковПодарки[0].Качество=ТекСтр.Качество)) Тогда
				Если п>0 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				ИначеЕсли СколькоПодарков = 1 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				КонецЕсли;
				ТекСтр.Цена = 0.01;
				ТекСтр.СуммаНДС = 0.01;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стр, Объект);
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = БанкаПодарок;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = стр.Коэффициент;
				НовСтр.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак Тогда
				НовСтр.Качество = ?(ТабОстатковПодарки.Количество()>1,Выбор.Качество,ТабОстатковПодарки[0].Качество);
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	
	
	
КонецПроцедуры

Процедура PlatinumPre (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если РольДоступна(Метаданные.Роли.МенеджерПоПродажам) Тогда
	//	возврат;
	//КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("49581"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("501462"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("896655"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("106752"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("38542"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("987654"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("452585"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("445525"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("466525"));
	
	
	//ИндексПоследнего = СписокДляВыбора.Количество() - 1;
	//
	//Для Индекс = 0 По ИндексПоследнего Цикл
	//	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,Объект,ТабличнаяЧасть);
	//	ТекСтр = СвободныйОстатокПозиции.Найти(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,"Номенклатура");
	//	Если ТекСтр = неопределено тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	КонецЕсли;   
	//КонецЦикла;
	
	//Если СписокДляВыбора.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;	
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя") Тогда
				Если стр.Цена = 0.02 Тогда 
					ТабличнаяЧасть.Удалить(стр);
					Продолжить;
				КонецЕсли;
			Иначе
				Если стр.Цена = 0.01 Тогда 
					ТабличнаяЧасть.Удалить(стр);
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", ?(ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя"),0.02,0.01));
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя") Тогда
				Если стр.Цена = 0.02 Тогда 
					ТабличнаяЧасть.Удалить(стр);
					п=п+1;
					Продолжить;
				КонецЕсли;
			Иначе
				Если стр.Цена = 0.01 Тогда 
					ТабличнаяЧасть.Удалить(стр);
					п=п+1;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя") Тогда
				Если стр.Цена = 0.02 Тогда продолжить КонецЕсли;
			Иначе
				Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				ТекСтр.Количество = ТекСтр.Количество+1;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				//Если ТабличнаяЧасть.Количество() = ТабличнаяЧасть.Итог("Количество") Тогда
				//	Сообщить("Низя этот товар по акции продать..",СтатусСообщения.Важное);
				//	прервать;
				//КонецЕсли;
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = стр.Коэффициент;
				НовСтр.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = ?(ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя"),0.02,0.01);
				НовСтр.Цена = ?(ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя"),0.02,0.01);
				Если ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя") Тогда
					НовСтр.Размещение = Справочники.Склады.НайтиПоКоду("000000005");
				КонецЕсли;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
	
	
КонецПроцедуры

Процедура Nutrex (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21305"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21304"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21303"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("554015"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("282055"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("285506"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("285501"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("378012"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("285502"));
	
	
	//ИндексПоследнего = СписокДляВыбора.Количество() - 1;
	//
	//Для Индекс = 0 По ИндексПоследнего Цикл
	//	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,Объект,ТабличнаяЧасть);
	//	ТекСтр = СвободныйОстатокПозиции.Найти(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,"Номенклатура");
	//	Если ТекСтр = неопределено тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	КонецЕсли;   
	//КонецЦикла;
	
	//Если СписокДляВыбора.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;	
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя") Тогда
				Если стр.Цена = 0.02 Тогда 
					ТабличнаяЧасть.Удалить(стр);
					Продолжить;
				КонецЕсли;
			Иначе
				Если стр.Цена = 0.01 Тогда 
					ТабличнаяЧасть.Удалить(стр);
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", ?(ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя"),0.02,0.01));
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя") Тогда
				Если стр.Цена = 0.02 Тогда 
					ТабличнаяЧасть.Удалить(стр);
					п=п+1;
					Продолжить;
				КонецЕсли;
			Иначе
				Если стр.Цена = 0.01 Тогда 
					ТабличнаяЧасть.Удалить(стр);
					п=п+1;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя") Тогда
				Если стр.Цена = 0.02 Тогда продолжить КонецЕсли;
			Иначе
				Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				ТекСтр.Количество = ТекСтр.Количество+1;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				//Если ТабличнаяЧасть.Количество() = ТабличнаяЧасть.Итог("Количество") Тогда
				//	Сообщить("Низя этот товар по акции продать..",СтатусСообщения.Важное);
				//	прервать;
				//КонецЕсли;
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = стр.Коэффициент;
				НовСтр.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = ?(ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя"),0.02,0.01);
				НовСтр.Цена = ?(ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя"),0.02,0.01);
				Если ТипЗнч(Объект)=Тип("ДокументОбъект.ЗаказПокупателя") Тогда
					НовСтр.Размещение = Справочники.Склады.НайтиПоКоду("000000005");
				КонецЕсли;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
	
	
КонецПроцедуры

Процедура ХалявнаяТренировка (ТабличнаяЧасть, Объект, Сумма) Экспорт
	
	Если Объект.Проведен Тогда возврат КонецЕсли;
	
	Если Объект.Склад = Справочники.Склады.НайтиПоКоду("000000005") Тогда Возврат КонецЕсли;
	
	Для каждого стр из ТабличнаяЧасть Цикл
		Если (стр.Номенклатура = Справочники.Номенклатура.НайтиПоКоду("289013")) ИЛИ (стр.Номенклатура = Справочники.Номенклатура.НайтиПоКоду("289014")) Тогда
			ТабличнаяЧасть.Удалить(стр);
			продолжить;
		КонецЕсли;
	КонецЦикла;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Р.Значение
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК Р
	//|ГДЕ
	//|	Р.Объект = &Склад
	//|	И Р.Свойство = &Свойство";
	//
	//Запрос.УстановитьПараметр("Склад",Объект.Склад);
	//Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УчастникАкции"));
	//
	//Рез = Запрос.Выполнить();
	//
	//Если Рез.Пустой() Тогда
	//	возврат;
	//КонецЕсли;
	//
	//Выб = Рез.Выбрать();
	//Выб.Следующий();
	//Если Выб.Значение = Ложь Тогда
	//	Возврат;
	//КонецЕсли;
	
	СуммаМлять = Число(Сумма);
	//Если (СуммаМлять>=10000) И (СуммаМлять<30000) Тогда
	Если СуммаМлять>=10000 Тогда
		СертПодарок = Справочники.Номенклатура.НайтиПоКоду("289013");
		СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СертПодарок,Объект,ТабличнаяЧасть);
		ТекСтр = СвободныйОстатокПозиции.Найти(СертПодарок,"Номенклатура");
		Если ТекСтр = неопределено тогда
			возврат;
		ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
			возврат;
		КонецЕсли;  
		//ИначеЕсли  СуммаМлять>=30000 Тогда
		//	СертПодарок = Справочники.Номенклатура.НайтиПоКоду("289014");
		//	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СертПодарок,Объект);
		//	ТекСтр = СвободныйОстатокПозиции.Найти(СертПодарок,"Номенклатура");
		//	Если ТекСтр = неопределено тогда
		//		возврат;
		//	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
		//		возврат;
		//	КонецЕсли;
	Иначе
		возврат;
	КонецЕсли;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = СертПодарок;
	НовСтр.Количество = 1;
	НовСтр.Коэффициент = 1;
	НовСтр.ЕдиницаИзмерения = СертПодарок.ЕдиницаХраненияОстатков;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
		НовСтр.Качество = Справочники.Качество.Новый;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура CellucorWhey (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("895004"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("895005"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("202108"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("895006"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("202109"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("202101"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("901103"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("901005"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("901100"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("910101"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("910102"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("573009"));
	
	//ИндексПоследнего = СписокДляВыбора.Количество() - 1;
	//
	//Для Индекс = 0 По ИндексПоследнего Цикл
	//	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,Объект,ТабличнаяЧасть);
	//	ТекСтр = СвободныйОстатокПозиции.Найти(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,"Номенклатура");
	//	Если ТекСтр = неопределено тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	КонецЕсли;   
	//КонецЦикла;
	
	//Если СписокДляВыбора.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;	
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				ТекСтр.Количество = ТекСтр.Количество+1;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = стр.Коэффициент;
				НовСтр.ЕдиницаИзмерения = стр.ЕдиницаИзмерения;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура DynamicDevelopment (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22387"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22382"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("247124"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22386"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22383"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("451002"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("852035"));
	
	//ИндексПоследнего = СписокДляВыбора.Количество() - 1;
	//
	//Для Индекс = 0 По ИндексПоследнего Цикл
	//	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,Объект,ТабличнаяЧасть);
	//	ТекСтр = СвободныйОстатокПозиции.Найти(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,"Номенклатура");
	//	Если ТекСтр = неопределено тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	КонецЕсли;   
	//КонецЦикла;
	
	//Если СписокДляВыбора.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			СколькоВхождений = СколькоВхождений+ст.Количество;
		Иначе
			СколькоВхождений = СколькоВхождений+Цел(ст.Количество/25);
		КонецЕсли;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				ТекСтр.Количество = ТекСтр.Количество+1;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура Isolife (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("794206"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("459008"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("552039"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("794206"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("459008"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("552039"));
	//	
	//ИндексПоследнего = СписокДляВыбора.Количество() - 1;
	//
	//Для Индекс = 0 По ИндексПоследнего Цикл
	//	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,Объект,ТабличнаяЧасть);
	//	ТекСтр = СвободныйОстатокПозиции.Найти(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,"Номенклатура");
	//	Если ТекСтр = неопределено тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	КонецЕсли;   
	//КонецЦикла;
	
	//Если СписокДляВыбора.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.Коэффициент = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры


Процедура Beowulf (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("402798"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("884010"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("203787"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("302789"));
	//
	//
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("1257462"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("54824"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("1184462"));
	//
	////ИндексПоследнего = СписокДляВыбора.Количество() - 1;
	////
	////Для Индекс = 0 По ИндексПоследнего Цикл
	////	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,Объект,ТабличнаяЧасть);
	////	ТекСтр = СвободныйОстатокПозиции.Найти(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,"Номенклатура");
	////	Если ТекСтр = неопределено тогда
	////		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	////	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
	////		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	////	КонецЕсли;   
	////КонецЦикла;
	//
	////Если СписокДляВыбора.Количество()=0 Тогда
	////	Возврат;
	////КонецЕсли;
	//
	//
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//КоэфПодарка = 1;
	//
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	//
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			
	//			ТекСтр.Количество = ТекСтр.Количество+1;
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.Коэффициент = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//			НовСтр.Качество = Выбор.Качество;
	//			//КонецЕсли;
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

Процедура BWML_IronDeram (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255262"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255261"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255263"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255264"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("800031"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("800030"));
	
	//ИндексПоследнего = СписокДляВыбора.Количество() - 1;
	//
	//Для Индекс = 0 По ИндексПоследнего Цикл
	//	СвободныйОстатокПозиции = ПолучитьСвободныйОстаток(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,Объект,ТабличнаяЧасть);
	//	ТекСтр = СвободныйОстатокПозиции.Найти(СписокДляВыбора[ИндексПоследнего - Индекс].Значение,"Номенклатура");
	//	Если ТекСтр = неопределено тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	ИначеЕсли (ТекСтр<>Неопределено) И (ТекСтр.Свободный<1) Тогда
	//		СписокДляВыбора.Удалить(ИндексПоследнего - Индекс);
	//	КонецЕсли;   
	//КонецЦикла;
	
	//Если СписокДляВыбора.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				
				ТекСтр.Количество = ТекСтр.Количество+1;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура Novonutrition (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("789206"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("785033"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("783604"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("789635"));
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество,Сумма");
	
	
	ТабРез = Новый ТаблицаЗначений;
	ТабРез.Колонки.Добавить("Номенклатура");
	//ТабРез.Колонки.Добавить("Коэффициент");
	//ТабРез.Колонки.Добавить("ЕдиницаИзмерения");
	ТабРез.Колонки.Добавить("СтавкаНДС");
	ТабРез.Колонки.Добавить("Цена");
	ТабРез.Колонки.Добавить("Количество");
	ТабРез.Колонки.Добавить("ПроцентАвтоматическихСкидок");
	
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		НовСт = ТабРез.Добавить();
		НовСт.Номенклатура = ст.Номенклатура;
		НовСт.СтавкаНДС = ст.СтавкаНДС;
		НовСт.Количество = ст.Количество*ст.Коэффициент;
		Если ст.Коэффициент>1 Тогда
			НовСт.Цена = ст.Сумма/НовСт.Количество;
		Иначе
			НовСт.Цена = ст.Цена;
		КонецЕсли;
		НовСт.ПроцентАвтоматическихСкидок = 50;
	КонецЦикла;
	
	Если ТабРез.Количество()=0 Тогда
		возврат;
	КонецЕсли;
	
	ВсегоЧипсов = ТабРез.Итог("Количество");
	
	//КолБезСкидки = (ВсегоЧипсов)%12;
	КолБезСкидки = (ВсегоЧипсов)%2;
	КолСоСкидкой = (ВсегоЧипсов) - КолБезСкидки;
	
	Если (КолБезСкидки>0) И (КолСоСкидкой>0) Тогда
		Для каждого ст из ТабРез Цикл
			Если ст.Количество<КолБезСкидки Тогда
				ст.ПроцентАвтоматическихСкидок = 0;
				КолБезСкидки = КолБезСкидки-ст.Количество;
			ИначеЕсли ст.Количество=КолБезСкидки Тогда
				ст.ПроцентАвтоматическихСкидок = 0;
				КолБезСкидки = 0;
			КонецЕсли;
		КонецЦикла;
		
		Если КолБезСкидки>0 Тогда //остались чипоны без скидки...
			ТабРез[0].Количество = ТабРез[0].Количество - КолБезСкидки;
			НовСт = ТабРез.Добавить();
			НовСт.Номенклатура = ТабРез[0].Номенклатура;
			НовСт.СтавкаНДС = ТабРез[0].СтавкаНДС;
			НовСт.Цена = ТабРез[0].Цена;
			НовСт.Количество = КолБезСкидки;
			НовСт.ПроцентАвтоматическихСкидок = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	Если КолСоСкидкой=0 Тогда
		Для Каждого ст из ТабРез Цикл
			ст.ПроцентАвтоматическихСкидок = 0;
		КонецЦикла;
	КонецЕсли;
	
	
	к=0;
	Пока к<ТабличнаяЧасть.Количество() Цикл
		Если ТабРез.Найти(ТабличнаяЧасть[к].Номенклатура,"Номенклатура")<>Неопределено Тогда
			ТабличнаяЧасть.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	
	
	Для Каждого ст из ТабРез Цикл
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = ст.Номенклатура;
		НовСтр.Количество = ст.Количество;
		НовСтр.Коэффициент = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.СтавкаНДС = ст.СтавкаНДС;
		НовСтр.Цена = ст.Цена;
		Если ст.ПроцентАвтоматическихСкидок>0 Тогда
			НовСтр.ПроцентАвтоматическихСкидок = ст.ПроцентАвтоматическихСкидок;
		КонецЕсли;
		НовСтр.Качество = Справочники.Качество.Новый;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
	КонецЦикла;
	
	УжеМА=Истина;
	
КонецПроцедуры

Процедура BeowulfПодарокIronCre3ArnoldSeries (ТабличнаяЧасть, Объект,УжеМА) Экспорт 
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255262"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255261"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255263"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255264"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("402798"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("884010"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("203787"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("302789"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("800400"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("800033"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("800039"));
	
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				
				ТекСтр.Количество = ТекСтр.Количество+1;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры	

Процедура ПротеинИГейнер (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если Объект.Склад.Родитель <> Справочники.Склады.НайтиПоКоду("000000008") Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//	
	//Протеины = Ложь;
	//Гейнеры = Ложь;
	//НетПротеинов = Ложь;
	//НетГейнеров = Ложь;
	//
	//СписокДляВыбораП = Новый СписокЗначений;
	//СписокДляВыбораП.Добавить(Справочники.Номенклатура.НайтиПоКоду("255271"));
	//СписокДляВыбораП.Добавить(Справочники.Номенклатура.НайтиПоКоду("255268"));
	//СписокДляВыбораП.Добавить(Справочники.Номенклатура.НайтиПоКоду("255273"));
	//СписокДляВыбораП.Добавить(Справочники.Номенклатура.НайтиПоКоду("255269"));
	//СписокДляВыбораП.Добавить(Справочники.Номенклатура.НайтиПоКоду("255272"));
	//СписокДляВыбораП.Добавить(Справочники.Номенклатура.НайтиПоКоду("255270"));
	//
	//СписокДляВыбораГ = Новый СписокЗначений;
	//СписокДляВыбораГ.Добавить(Справочники.Номенклатура.НайтиПоКоду("255287"));
	//СписокДляВыбораГ.Добавить(Справочники.Номенклатура.НайтиПоКоду("255288"));
	//СписокДляВыбораГ.Добавить(Справочники.Номенклатура.НайтиПоКоду("255289"));
	//СписокДляВыбораГ.Добавить(Справочники.Номенклатура.НайтиПоКоду("255290"));
	//СписокДляВыбораГ.Добавить(Справочники.Номенклатура.НайтиПоКоду("255291"));
	//СписокДляВыбораГ.Добавить(Справочники.Номенклатура.НайтиПоКоду("255292"));
	//
	////к=0;
	////Пока к<ТабличнаяЧасть.Количество() Цикл
	////	Если СписокДляВыбораП.НайтиПоЗначению(ТабличнаяЧасть[к].Номенклатура)<>Неопределено Тогда
	////		ТабличнаяЧасть.Удалить(к);
	////		продолжить;
	////	КонецЕсли;
	////	Если СписокДляВыбораГ.НайтиПоЗначению(ТабличнаяЧасть[к].Номенклатура)<>Неопределено Тогда
	////		ТабличнаяЧасть.Удалить(к);
	////		продолжить;
	////	КонецЕсли;
	////	к=к+1;
	////КонецЦикла;
	//
	//Для Каждого стр из ТабличнаяЧасть Цикл
	//	Если стр.Цена = 0.01 Тогда 
	//		ТабличнаяЧасть.Удалить(стр);
	//		Продолжить;
	//	КонецЕсли;
	//КонецЦикла;

	//
	//Для Каждого ст из ТабличнаяЧасть Цикл
	//	ПриИзмененииНоменклатурыТоваров(ст,Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	//КонецЦикла;
	//
	//ТабОстатковПодаркиП = ПолучитьСвободныйОстаток(СписокДляВыбораП.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодаркиП.Количество()= 0 Тогда
	//	НетПротеинов=Истина;
	//КонецЕсли;
	//ТабОстатковПодаркиГ = ПолучитьСвободныйОстаток(СписокДляВыбораГ.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодаркиГ.Количество()= 0 Тогда
	//	НетГейнеров=Истина;
	//КонецЕсли;

	//Если (НетПротеинов) и (НетГейнеров) Тогда
	//	возврат;
	//КонецЕсли;


	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Табл.Номенклатура,
	//               |	Табл.Цена,
	//               |	Табл.Количество
	//               |ПОМЕСТИТЬ ТЗхЗ
	//               |ИЗ
	//               |	&Таб КАК Табл
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	СУММА(ТЗхЗ.Цена * ТЗхЗ.Количество) КАК Сумма
	//               |ИЗ
	//               |	ТЗхЗ КАК ТЗхЗ
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК Рег
	//               |		ПО ТЗхЗ.Номенклатура = Рег.Объект
	//               |			И (Рег.Категория = &Кат)
	//               |ГДЕ
	//               |	НЕ Рег.Объект ЕСТЬ NULL ";
	//
	//Запрос.УстановитьПараметр("Таб",ТабличнаяЧасть);
	//Запрос.УстановитьПараметр("Кат",Справочники.КатегорииОбъектов.НайтиПоКоду("13"));

	//ТМПТаб = Запрос.Выполнить().Выгрузить();
	//Если ТМПТаб[0].Сумма<>NULL Тогда
	//	Если ТМПТаб[0].Сумма>=6000 Тогда
	//		Протеины = Истина;
	//	КонецЕсли;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Табл.Номенклатура,
	//               |	Табл.Цена,
	//               |	Табл.Количество
	//               |ПОМЕСТИТЬ ТЗхЗ
	//               |ИЗ
	//               |	&Таб КАК Табл
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	СУММА(ТЗхЗ.Цена * ТЗхЗ.Количество) КАК Сумма
	//               |ИЗ
	//               |	ТЗхЗ КАК ТЗхЗ
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК Рег
	//               |		ПО ТЗхЗ.Номенклатура = Рег.Объект
	//               |			И (Рег.Категория = &Кат)
	//               |ГДЕ
	//               |	НЕ Рег.Объект ЕСТЬ NULL ";
	//
	//Запрос.УстановитьПараметр("Таб",ТабличнаяЧасть);
	//Запрос.УстановитьПараметр("Кат",Справочники.КатегорииОбъектов.НайтиПоКоду("19"));

	//ТМПТаб = Запрос.Выполнить().Выгрузить();
	//Если ТМПТаб[0].Сумма<>NULL Тогда
	//	Если ТМПТаб[0].Сумма>=6000 Тогда
	//		Гейнеры = Истина;
	//	КонецЕсли;
	//КонецЕсли;

	//
	//
	//Если (Протеины) И (НЕ НетПротеинов) Тогда
	//	
	//	Выбор = Неопределено;
	//	Пока Выбор=Неопределено Цикл
	//		Выбор = ТабОстатковПодаркиП.ВыбратьСтроку("Выберите товар в подарок");
	//		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//		
	//	КонецЦикла;
	//	
	//	НовСтр = ТабличнаяЧасть.Добавить();
	//	НовСтр.Номенклатура = Выбор.Номенклатура;
	//	НовСтр.Количество = 1;
	//	//НовСтр.ПроцентАвтоматическихСкидок = 100;
	//	ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
	//	ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
	//	НовСтр.Цена = 0.01;
	//	НовСтр.Качество = Выбор.Качество;
	//	
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
	//	
	//	//ЧислоВычесть = НовСтр.Цена*НовСтр.Количество-НовСтр.Сумма;
	//	//
	//	//Запрос = Новый Запрос;
	//	//Запрос.Текст = "ВЫБРАТЬ
	//	//               |	Табл.Номенклатура,
	//	//               |	Табл.Цена
	//	//               |ПОМЕСТИТЬ ТЗхЗ
	//	//               |ИЗ
	//	//               |	&Таб КАК Табл
	//	//               |ГДЕ
	//	//               |	Табл.Цена > &ЧислоВычесть
	//	//               |;
	//	//               |
	//	//               |////////////////////////////////////////////////////////////////////////////////
	//	//               |ВЫБРАТЬ ПЕРВЫЕ 1
	//	//               |	ТЗхЗ.Номенклатура
	//	//               |ИЗ
	//	//               |	ТЗхЗ КАК ТЗхЗ
	//	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК Рег
	//	//               |		ПО ТЗхЗ.Номенклатура = Рег.Объект
	//	//               |			И (Рег.Категория = &Кат)
	//	//               |ГДЕ
	//	//               |	НЕ Рег.Объект ЕСТЬ NULL ";
	//	//Запрос.УстановитьПараметр("Таб",ТабличнаяЧасть);
	//	//Запрос.УстановитьПараметр("ЧислоВычесть",ЧислоВычесть);
	//	//Запрос.УстановитьПараметр("Кат",Справочники.КатегорииОбъектов.НайтиПоКоду("13"));
	//	//
	//	//ТМПТаб = Запрос.Выполнить().Выгрузить();
	//	//Если ТМПТаб.Количество()=0 Тогда
	//	//	к=0;
	//	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//	//		Если СписокДляВыбораП.НайтиПоЗначению(ТабличнаяЧасть[к].Номенклатура)<>Неопределено Тогда
	//	//			ТабличнаяЧасть.Удалить(к);
	//	//			продолжить;
	//	//		КонецЕсли;
	//	//		к=к+1;
	//	//	КонецЦикла;
	//	//	Сообщить ("Цена подарка превышает цену товара!",СтатусСообщения.Важное);
	//	//Иначе
	//	//	ТекСтр = ТабличнаяЧасть.Найти(ТМПТаб[0].Номенклатура,"Номенклатура");
	//	//	ТекСтр.Цена = ТекСтр.Цена - ЧислоВычесть;
	//	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	//	
	//	//КонецЕсли;
	//УжеМА=Истина;
	//КонецЕсли;
	//
	//Если (Гейнеры) И (НЕ НетГейнеров) Тогда
	//	
	//	Выбор = Неопределено;
	//	Пока Выбор=Неопределено Цикл
	//		Выбор = ТабОстатковПодаркиГ.ВыбратьСтроку("Выберите товар в подарок");
	//		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//		
	//	КонецЦикла;
	//	
	//	НовСтр = ТабличнаяЧасть.Добавить();
	//	НовСтр.Номенклатура = Выбор.Номенклатура;
	//	НовСтр.Количество = 1;
	//	//НовСтр.ПроцентАвтоматическихСкидок = 100;
	//	ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
	//	ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
	//	НовСтр.Качество = Выбор.Качество;
	//	НовСтр.Цена = 0.01;
	//	
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
	//	
	//	//ЧислоВычесть = НовСтр.Цена*НовСтр.Количество-НовСтр.Сумма;
	//	//
	//	//Запрос = Новый Запрос;
	//	//Запрос.Текст = "ВЫБРАТЬ
	//	//               |	Табл.Номенклатура,
	//	//               |	Табл.Цена
	//	//               |ПОМЕСТИТЬ ТЗхЗ
	//	//               |ИЗ
	//	//               |	&Таб КАК Табл
	//	//               |ГДЕ
	//	//               |	Табл.Цена > &ЧислоВычесть
	//	//               |;
	//	//               |
	//	//               |////////////////////////////////////////////////////////////////////////////////
	//	//               |ВЫБРАТЬ ПЕРВЫЕ 1
	//	//               |	ТЗхЗ.Номенклатура
	//	//               |ИЗ
	//	//               |	ТЗхЗ КАК ТЗхЗ
	//	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КатегорииОбъектов КАК Рег
	//	//               |		ПО ТЗхЗ.Номенклатура = Рег.Объект
	//	//               |			И (Рег.Категория = &Кат)
	//	//               |ГДЕ
	//	//               |	НЕ Рег.Объект ЕСТЬ NULL ";
	//	//Запрос.УстановитьПараметр("Таб",ТабличнаяЧасть);
	//	//Запрос.УстановитьПараметр("ЧислоВычесть",ЧислоВычесть);
	//	//Запрос.УстановитьПараметр("Кат",Справочники.КатегорииОбъектов.НайтиПоКоду("19"));
	//	//
	//	//ТМПТаб = Запрос.Выполнить().Выгрузить();
	//	//Если ТМПТаб.Количество()=0 Тогда
	//	//	к=0;
	//	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//	//		Если СписокДляВыбораГ.НайтиПоЗначению(ТабличнаяЧасть[к].Номенклатура)<>Неопределено Тогда
	//	//			ТабличнаяЧасть.Удалить(к);
	//	//			продолжить;
	//	//		КонецЕсли;
	//	//		к=к+1;
	//	//	КонецЦикла;
	//	//	Сообщить ("Цена подарка превышает цену товара!",СтатусСообщения.Важное);
	//	//Иначе
	//	//	ТекСтр = ТабличнаяЧасть.Найти(ТМПТаб[0].Номенклатура,"Номенклатура");
	//	//	ТекСтр.Цена = ТекСтр.Цена - ЧислоВычесть;
	//	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	//	
	//	//КонецЕсли;
	//УжеМА=Истина;
	//КонецЕсли;
	
КонецПроцедуры

Процедура FitRx (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	//Если Объект.Склад.Родитель <> Справочники.Склады.НайтиПоКоду("000000008") Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если ТабличнаяЧасть.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;

	//Для Каждого ст из ТабличнаяЧасть Цикл
	////	ПриИзмененииНоменклатурыТоваров(ст,Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	//	
	//КонецЦикла;
	//
	////Табб = Новый ТаблицаЗначений;
	//Табб = ТабличнаяЧасть.Выгрузить();
	//Для Каждого стт из Табб Цикл
	//	стт.КлючСтроки = Табб.Индекс(стт);
	//КонецЦикла;
	//
	//Если Удаление Тогда Возврат КонецЕсли;

	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Табл.Количество КАК КолПодарков
	//               |ПОМЕСТИТЬ ТЗКолПод
	//               |ИЗ
	//               |	&Таб КАК Табл
	//               |ГДЕ
	//               |	Табл.Номенклатура В ИЕРАРХИИ(&FitRx)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Табл.КлючСтроки,
	//               |	Табл.Номенклатура,
	//               |	Табл.Цена,
	//               |	Табл.Количество
	//               |ПОМЕСТИТЬ ТЗхЗ
	//               |ИЗ
	//               |	&Таб КАК Табл
	//               |ГДЕ
	//               |	Табл.Номенклатура В ИЕРАРХИИ(&FitRx)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ТЗхЗ.КлючСтроки,
	//               |	ТЗхЗ.Номенклатура,
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество,
	//               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	//               |ИЗ
	//               |	ТЗхЗ КАК ТЗхЗ,
	//               |	ТЗКолПод КАК ТзКолПод
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ТЗхЗ.КлючСтроки,
	//               |	ТЗхЗ.Номенклатура,
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество УБЫВ";
	//			   
	//               	
	//Запрос.УстановитьПараметр("Таб",Табб);
	//Запрос.УстановитьПараметр("FitRx",Справочники.Номенклатура.НайтиПоКоду("792828"));
	//		
	//ТМПТаб = Запрос.Выполнить().Выгрузить();
	//
	////Если ТМПТаб[0].КлючСтроки = Null Тогда
	////	Возврат;
	////КонецЕсли;
	//
	//Если ТМПТаб.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//КолПодарков = ТМПТаб[0].СколькоПод;
	//Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	//
	//Для Каждого ст из ТМПТаб Цикл
	//	//ТекСтр = ТабличнаяЧасть.Найти(ст.КлючСтроки,"КлючСтроки");
	//	ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
	//	ТекСтр.ПроцентАвтоматическихСкидок = 0;
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	
	//	Если КолПодарков = 0 Тогда продолжить КонецЕсли;
	//	
	//	
	//	Если ТекСтр.Количество = КолПодарков Тогда
	//		КолПодарков = 0;
	//		ТекСтр.ПроцентАвтоматическихСкидок = 50;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
	//		ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		
	//		НовСтр = ТабличнаяЧасть.Добавить();
	//		НовСтр.Номенклатура = ТекСтр.Номенклатура;
	//		НовСтр.Количество = КолПодарков;
	//		НовСтр.ПроцентАвтоматическихСкидок = 50;
	//		ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
	//		ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
	//		НовСтр.Качество = ТекСтр.Качество;
	//		
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
	//		
	//		КолПодарков = 0;
	//	ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
	//		КолПодарков = КолПодарков - ТекСтр.Количество;
	//		ТекСтр.ПроцентАвтоматическихСкидок = 50;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	КонецЕсли;
	//	
	//КонецЦикла;

	//
	////УжеМА=Истина;
	//
	
КонецПроцедуры

//19122016 МА Z-KONZEPT
Процедура Z_KONZEPT (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170201000000') ИЛИ (Объект.Дата <'20161219000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993557"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993571"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993560"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993578"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993580"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993579"));
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.Коэффициент = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//19122016 МА Z-KONZEPT

//19122016 МА Red Star Labs
Процедура Red_Star_Labs (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170401000000') ИЛИ (Объект.Дата <'20161219000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992260"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992226"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992259"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992227"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990202"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990201"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993960"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993725"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372016"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372010"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372015"));
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//19122016 МА Red Star Labs

//19122016 МА Trec Nutrition
Процедура TrecNutrition (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170301000000') ИЛИ (Объект.Дата <'20161219000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("193040"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21533"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22063"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("22067"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993479"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992658"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("22069"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993480"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993098"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("22068"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993481"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992524"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992742"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993097"));
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка)*3;
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.Коэффициент = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//19122016 МА Trec Nutrition


//19122016 МА Optimum Nutrition
Процедура OptimumNutrition (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170201000000') ИЛИ (Объект.Дата <'20161219000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999959"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992378"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991469"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("447663"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду(""));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999940"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999958"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993701"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992377"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999939"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991807"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992376"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("54882"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999932"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999931"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992375"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("586521"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999960"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991906"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999934"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999936"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999933"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("9999243"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991961"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255280"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999938"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991583"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("586522"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999937"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991470"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("236699"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("238892"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993698"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995916"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995915"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995914"));
	
	СписокДляВыбора2 = Новый СписокЗначений;
	СписокДляВыбора2.Добавить(Справочники.Номенклатура.НайтиПоКоду("202007"));
	СписокДляВыбора2.Добавить(Справочники.Номенклатура.НайтиПоКоду("202006"));
	СписокДляВыбора2.Добавить(Справочники.Номенклатура.НайтиПоКоду("202005"));
	СписокДляВыбора2.Добавить(Справочники.Номенклатура.НайтиПоКоду("202008"));
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТабОстатковПодарки2 = ПолучитьСвободныйОстаток(СписокДляВыбора2.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.Коэффициент = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
			Если ТабОстатковПодарки2.Количество()>0 Тогда
				ДобавитьДополнительныйТоварВАкцию(ТабОстатковПодарки2,ТабличнаяЧасть);
				
				к=0;
				Пока к<ТабОстатковПодарки2.Количество() Цикл
					Если ТабОстатковПодарки2[к].Свободный = 0 Тогда
						ТабОстатковПодарки2.Удалить(к);
						продолжить;
					КонецЕсли;
					к=к+1;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//19122016 МА Optimum Nutrition


//20122016 МА BOOMBAR
Процедура BOOMBAR (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170301000000') ИЛИ (Объект.Дата <'20161220000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995766"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995767"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995768"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995769"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995770"));
	                              
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995766"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995767"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995768"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995769"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995770"));

	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 3;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//20122016 МА BOOMBAR

//31012017 Walden Farms 2+1
Процедура WaldenFarms (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170401000000') ИЛИ (Объект.Дата <'20170201000000') Тогда
		Возврат;
	КонецЕсли;
	
	ТекРод = Справочники.Номенклатура.НайтиПоКоду("877651");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Ном.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Ном
	               |ГДЕ
	               |	Ном.Ссылка В ИЕРАРХИИ(&Род)
	               |	И НЕ Ном.ПометкаУдаления";
	Запрос.УстановитьПараметр("Род",ТекРод);
					
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(Запрос.Выполнить().Выгрузить(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если ст.Номенклатура.Родитель<>ТекРод Тогда
			продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Номенклатура.Родитель<>ТекРод Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.Коэффициент = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//31012017 Walden Farms 2+1

//31012017 NutrexSculpt
Процедура NutrexSculpt (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170301000000') ИЛИ (Объект.Дата <'20170201000000') Тогда
		Возврат;
	КонецЕсли;
	
	ТМПНом = Справочники.Номенклатура.НайтиПоКоду("59752");
	ТекЦена = Ценообразование.ПолучитьЦенуНоменклатуры(ТМПНом, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001"));
	
	СписокНом1 = Новый СписокЗначений;
	СписокНом1.Добавить(ТМПНом);
	
	СписокНом2 = Новый СписокЗначений;
	//СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("255255"));
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("255256"));
	
	КоэфПодарка = 1;
					
	Ираз=Ложь;
	два=Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если СписокНом1.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Ном4Скидки = ст;
			Ираз=Истина;
		КонецЕсли;
		
		Если СписокНом2.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			два=Истина;
		КонецЕсли;
		
	КонецЦикла;
	
			
	Если НЕ (Ираз И два) Тогда
		Возврат;
	КонецЕсли;
	
	Если Ном4Скидки.Цена<>ТекЦена Тогда
		Возврат;
	КонецЕсли;
	
	Ном4Скидки.Цена = Ном4Скидки.Цена - 500;
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки, Объект);
	
	УжеМА=Истина;
	
КонецПроцедуры
//31012017 NutrexSculpt

//31012017 TrecNutrition
Процедура TrecNutrition2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170301000000') ИЛИ (Объект.Дата <'20170201000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21527"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21528"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21545"));
	

	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("23099"));
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//31012017 TrecNutrition

//20022017 HardLabz
Процедура HardLabz  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170401000000') ИЛИ (Объект.Дата <'20170220000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("872006"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("23713"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("870161"));
	

	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("872006"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("23713"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("870161"));
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//20022017 

//20022017 Nutrabolics
Процедура Nutrabolics  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170401000000') ИЛИ (Объект.Дата <'20170220000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993923"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995817"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995816"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993920"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993921"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("578813"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("578812"));
	

	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("22635"));
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//20022017 

//02032017 LevelUp
Процедура LevelUp  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170309000000') ИЛИ (Объект.Дата <'20170301000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995925"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995926"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995927"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995928"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995929"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995930"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995944"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995948"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995945"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995946"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995947"));
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура LevelUp2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170309000000') ИЛИ (Объект.Дата <'20170301000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995936"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995937"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995938"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995939"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995940"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995941"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995964"));
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//02032017 

//07032017 Akvion
Процедура Akvion  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170401000000') ИЛИ (Объект.Дата <'20170301000000') Тогда
		Возврат;
	КонецЕсли;
	
	Магазы = Новый СписокЗначений;
	Магазы.Добавить(Справочники.Склады.НайтиПоКоду("603"));
	Магазы.Добавить(Справочники.Склады.НайтиПоКоду("7"));
	Магазы.Добавить(Справочники.Склады.НайтиПоКоду("250"));
	Магазы.Добавить(Справочники.Склады.НайтиПоКоду("602"));
	Магазы.Добавить(Справочники.Склады.НайтиПоКоду("249"));
	Магазы.Добавить(Справочники.Склады.НайтиПоКоду("585"));
	Магазы.Добавить(Справочники.Склады.НайтиПоКоду("587"));
	Магазы.Добавить(Справочники.Склады.НайтиПоКоду("246"));
	
	Если Магазы.НайтиПоЗначению(Объект.Склад) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995851"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995848"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995850"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995847"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995849"));
	

	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995855"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995852"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995853"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995854"));
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//07032017 

//07032017 BIGSHOCK
Процедура BIGSHOCK  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170401000000') ИЛИ (Объект.Дата <'20170301000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994050"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994242"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994243"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994052"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994051"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996432"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996431"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994053"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996425"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994054"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996430"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994241"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996423"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996424"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996429"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994055"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996433"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994057"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994056"));
	

	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994050"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994242"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994243"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994052"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994051"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996432"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996431"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994053"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996425"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994054"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996430"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994241"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996423"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996424"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996429"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994055"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996433"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994057"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994056"));

		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//07032017 

Процедура RSLSculpt (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
		Возврат;
	КонецЕсли;
	
	НомCelluless = Справочники.Номенклатура.НайтиПоКоду("255256");
	ЦенаCelluless = Ценообразование.ПолучитьЦенуНоменклатуры(НомCelluless, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001"));
	
	НомAbsteel = Справочники.Номенклатура.НайтиПоКоду("255255");
	ЦенаAbsteel = Ценообразование.ПолучитьЦенуНоменклатуры(НомAbsteel, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001"));
	
	СписокНом1 = Новый СписокЗначений;
	СписокНом1.Добавить(НомCelluless);
	СписокНом1.Добавить(НомAbsteel);
	
	СписокНом2 = Новый СписокЗначений;
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("645702"));
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("645801"));
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265"));
	
	КоэфПодарка = 1;
					
	Ираз=Ложь;
	два=Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если СписокНом1.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Ном4Скидки = ст;
			Ираз=Истина;
		КонецЕсли;
		
		Если СписокНом2.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
				два=Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	//01082017 обработка удаления 
	Если (Ираз=Истина) И (два = Ложь)  Тогда
		Если Ном4Скидки.Номенклатура = НомCelluless Тогда
			Ном4Скидки.Цена=ЦенаCelluless;
		КонецЕсли;
		
		Если Ном4Скидки.Номенклатура = НомAbsteel Тогда
			Ном4Скидки.Цена=ЦенаAbsteel;
		КонецЕсли;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки, Объект);
	КонецЕсли;

			
	Если НЕ (Ираз И два) Тогда
		Возврат;
	КонецЕсли;
	
		
	Если (Ном4Скидки.Номенклатура = НомCelluless) И (Ном4Скидки.Цена<>ЦенаCelluless) Тогда
		Возврат;
	КонецЕсли;
	
	Если (Ном4Скидки.Номенклатура = НомAbsteel) И (Ном4Скидки.Цена<>ЦенаAbsteel) Тогда
		Возврат;
	КонецЕсли;

	
	Ном4Скидки.Цена = Ном4Скидки.Цена - 500;
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки, Объект);
	
	УжеМА=Истина;
	
КонецПроцедуры

Процедура Nutrend  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("102006"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991238"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("102005"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("102007"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("102009"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991241"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991239"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994196"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993318"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("361014"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("361015"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993316"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993317"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("102006"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991238"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("102005"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("102007"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("102009"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991241"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991239"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994196"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993318"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("361014"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("361015"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993316"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999993317"));
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура Acvion (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20171001000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995855"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995855"));
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура ЦенаКрасногорск (ТабличнаяЧасть, Объект) Экспорт
	
	//04082017 Продлеваем акцию. Рустам
	//Если (Объект.Дата >='20170801000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
	//Если (Объект.Дата >='20171101000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если Объект.Склад <> Справочники.Склады.НайтиПоКоду("669") Тогда
	//	возврат;
	//КонецЕсли;
	//
	//Для Каждого ст из ТабличнаяЧасть Цикл
	//	Если ст.Номенклатура= Справочники.Номенклатура.НайтиПоКоду("1936541") Тогда
	//		ст.Цена = 1590;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	//	КонецЕсли;
	//	
	//	Если ст.Номенклатура= Справочники.Номенклатура.НайтиПоКоду("651542") Тогда
	//		ст.Цена = 1690;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	//	КонецЕсли;
	//	
	//	
	//КонецЦикла;
					
КонецПроцедуры

Процедура ЦенаВсяРозница (ТабличнаяЧасть, Объект) Экспорт
	
	Если (Объект.Дата >='20170816000000') ИЛИ (Объект.Дата <'20170724000000') Тогда
		Возврат;
	КонецЕсли;
	
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992246"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992243"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992244"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992245"));
	
	СписокНом2 = Новый СписокЗначений;
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992260"));
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992226"));
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992259"));
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992227"));


			
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			ст.Цена = 2790;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
		КонецЕсли;
		
		Если СписокНом2.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			ст.Цена = 3490;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
		КонецЕсли;
		
		
	КонецЦикла;
					
КонецПроцедуры


//31072017 Detour Lenny Chef 
Процедура DetourLennyChef  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170815000000') Тогда
	//01082017 Снова действует с 02.08.2017
	Если (Объект.Дата >='20180101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991491"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("700053"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("785029"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991489"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("857233"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991490"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991487"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255294"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("789255"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991488"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("892237"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("896668"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991492"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991493"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("451203"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("501009"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("451200"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998403"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("451201"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("451202"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("784639"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998402"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("784631"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991481"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991486"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991484"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991483"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991482"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("28004"));
	
	
		

	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991491"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("700053"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("785029"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991489"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("857233"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991490"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991487"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("255294"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("789255"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991488"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("892237"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("896668"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991492"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991493"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("451203"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("501009"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("451200"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998403"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("451201"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("451202"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("784639"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998402"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("784631"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991481"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991486"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991484"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991483"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991482"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("28004"));

		

		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура DetourLennyChef2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170815000000') Тогда
	//01082017 Снова действует с 02.08.2017
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
	//	Возврат;
	//КонецЕсли;
	//	
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991490"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991487"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991488"));
	//
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991490"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991487"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991488"));	

	//	
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//
	//КоэфПодарка = 2;
	//
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	//
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;

	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//				НовСтр.Качество = Выбор.Качество;
	//				//КонецЕсли;
	//				
	//			КонецЕсли;	
	//			// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//			НовСтр.Качество = Выбор.Качество;
	//			//КонецЕсли;
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

Процедура DetourLennyChef3  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170815000000') Тогда
	//01082017 Снова действует с 02.08.2017
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
	//	Возврат;
	//КонецЕсли;
	//	
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991492"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991493"));
	//	
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991492"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991493"));
	//

	//	
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//
	//КоэфПодарка = 2;
	//
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	//
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;

	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//				НовСтр.Качество = Выбор.Качество;
	//				//КонецЕсли;
	//				
	//			КонецЕсли;	
	//			// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//			НовСтр.Качество = Выбор.Качество;
	//			//КонецЕсли;
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

Процедура DetourLennyChef4  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170815000000') Тогда
	//01082017 Снова действует с 02.08.2017
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
	//	Возврат;
	//КонецЕсли;
	//	
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("451203"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998403"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("451202"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("784639"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998402"));
	//
	//
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("451203"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998403"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("451202"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("784639"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998402"));
	//

	//	
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//
	//КоэфПодарка = 2;
	//
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	//
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;

	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//				НовСтр.Качество = Выбор.Качество;
	//				//КонецЕсли;
	//				
	//			КонецЕсли;	
	//			// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//			НовСтр.Качество = Выбор.Качество;
	//			//КонецЕсли;
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

Процедура DetourLennyChef5  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170815000000') Тогда
	//01082017 Снова действует с 02.08.2017
	//Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
	//	Возврат;
	//КонецЕсли;
	//	
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991481"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991484"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991483"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991486"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991482"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991485"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22714"));
	//
	//
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991481"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991484"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991483"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991486"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991482"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991485"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("22714"));

	//

	//	
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//
	//КоэфПодарка = 2;
	//
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	//
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;

	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//				НовСтр.Качество = Выбор.Качество;
	//				//КонецЕсли;
	//				
	//			КонецЕсли;	
	//			// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//			НовСтр.Качество = Выбор.Качество;
	//			//КонецЕсли;
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры
//31072017 

//01082017 RSL+ProTan 
Процедура RSLProTan (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20170901000000') ИЛИ (Объект.Дата <'20170731000000') Тогда
		Возврат;
	КонецЕсли;
	
	НомAbsOfSteel = Справочники.Номенклатура.НайтиПоКоду("99999998261");
	ЦенаAbsOfSteel = Ценообразование.ПолучитьЦенуНоменклатуры(НомAbsOfSteel, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001"));
	
	СписокНом2 = Новый СписокЗначений;
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("645702"));
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("645801"));
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265"));
	
	КоэфПодарка = 1;
					
	Ираз=Ложь;
	два=Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Номенклатура = НомAbsOfSteel Тогда
			Ном4Скидки = ст;
			Ираз=Истина;
		КонецЕсли;
		
		Если СписокНом2.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
				два=Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	//01082017 обработка удаления 
	Если (Ираз=Истина) И (два = Ложь)  Тогда
		Если Ном4Скидки.Номенклатура = НомAbsOfSteel Тогда
			Ном4Скидки.Цена=ЦенаAbsOfSteel;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки, Объект);
	КонецЕсли;

			
	Если НЕ (Ираз И два) Тогда
		Возврат;
	КонецЕсли;
	
	Если (Ном4Скидки.Номенклатура = НомAbsOfSteel) И (Ном4Скидки.Цена<>ЦенаAbsOfSteel) Тогда
		Возврат;
	КонецЕсли;
		
	
	Ном4Скидки.Цена = Ном4Скидки.Цена - 500;
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки, Объект);
	
	УжеМА=Истина;
	
КонецПроцедуры
//01082017

//01082017 RedStarLabs
Процедура RedStarLabs  (ТабличнаяЧасть, Объект,УжеМА,RedStarLabs) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170731000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997876"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997881"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997877"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997882"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997879"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997883"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997880"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997878"));
	
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372016"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372004"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372010"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372005"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372015"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372008"));
	
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("564026"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("564031"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("564040"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("564049"));
	
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	RedStarLabs=Истина;
	
КонецПроцедуры
//01082017

//31082017 Detour Lenny Chef>1000р
Процедура DetourLennyChef1000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991491"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991490"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991493"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998403"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998402"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991484"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991483"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991482"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991485"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22714"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991491"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991490"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991493"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998403"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998402"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991484"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991483"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991482"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991485"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("22714"));
	
	
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		//Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
		//	продолжить;
		//КонецЕсли;
		
		//Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
		//	продолжить;
		//КонецЕсли;
		
		СуммаВхождений = СуммаВхождений+ст.Сумма;
		
	КонецЦикла;
	
	Если СуммаВхождений < 1000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	//Если СуммаВхождений >10000 Тогда
	//	Возврат;
	//КонецЕсли;
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры

//31082017 Detour Lenny Chef>10000р
Процедура DetourLennyChef_10000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991490"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998403"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998402"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991484"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991483"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991482"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991485"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22714"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991490"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998403"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998402"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991484"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991483"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991482"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991485"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("22714"));
	
	
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		//Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
		//	продолжить;
		//КонецЕсли;
		
		//Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
		//	продолжить;
		//КонецЕсли;
		
		СуммаВхождений = СуммаВхождений+ст.Сумма;
		
	КонецЦикла;
	
	Если СуммаВхождений < 10000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = ПолучитьБазовуюЕдИзм(НовСтр.Номенклатура);
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры

//04092017 NaborPohudey30% 
Процедура NaborPohudey (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180101000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
		Возврат;
	КонецЕсли;
		
	
	//СписокНом1 = Новый СписокЗначений;
	//СписокНом1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996610"));
	//СписокНом1.Добавить(Справочники.Номенклатура.НайтиПоКоду("22115"));
	//СписокНом1.Добавить(Справочники.Номенклатура.НайтиПоКоду("582019"));
	//СписокНом1.Добавить(Справочники.Номенклатура.НайтиПоКоду("455322"));
	//	
	//СписокНом2 = Новый СписокЗначений;
	//СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("255255"));
	//СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("255256"));
	//СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998261"));
	//
	//СписокНом3 = Новый СписокЗначений;
	//СписокНом3.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997495"));
	//СписокНом3.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997494"));
	//СписокНом3.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997496"));
	//
	////упаки
	//СписокНом3.Добавить(Справочники.Номенклатура.НайтиПоКоду("645702"));
	//СписокНом3.Добавить(Справочники.Номенклатура.НайтиПоКоду("645801"));
	//СписокНом3.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265"));
	
	СписокНом1 = Новый СписокЗначений;
	СписокНом1.Добавить(Справочники.Номенклатура.НайтиПоКоду("455322"));
				
	СписокНом2 = Новый СписокЗначений;
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("255255"));
			
	СписокНом3 = Новый СписокЗначений;
	СписокНом3.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265"));
				
	КоэфПодарка = 1;
					
	Ираз=Ложь;
	два=Ложь;
	три = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если СписокНом1.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Ном4Скидки1 = ст;
			Ираз=Истина;
		КонецЕсли;
		
		Если СписокНом2.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Ном4Скидки2 = ст;
			два=Истина;
		КонецЕсли;
		
		Если СписокНом3.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			//Если (СокрЛП(ст.Номенклатура.Код) = "645702") ИЛИ 
			//	(СокрЛП(ст.Номенклатура.Код) = "645801") ИЛИ 
			//	(СокрЛП(ст.Номенклатура.Код) = "255265") Тогда
				Если
					ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
					Ном4Скидки3 = ст;
					три=Истина;
				Иначе
					Ном4Скидки3 = ст;
					три=Ложь;
				КонецЕсли;
			//Иначе
				//Ном4Скидки3 = ст;
				//три=Истина;
			//КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если (Ираз=Ложь) ИЛИ (два = Ложь) ИЛИ (три = Ложь) Тогда
		
		Если Ном4Скидки1<>Неопределено Тогда
			Ном4Скидки1.ПроцентСкидкиНаценки = 0;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки1, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки1, Объект);
		КонецЕсли;
		
		Если Ном4Скидки2<>Неопределено Тогда
			Ном4Скидки2.ПроцентСкидкиНаценки = 0;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки2, Объект); 
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки2, Объект);
		КонецЕсли;
		
		Если Ном4Скидки3<>Неопределено Тогда
			Ном4Скидки3.ПроцентСкидкиНаценки = 0;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки3, Объект); 
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки3, Объект);
		КонецЕсли;

		//Для Каждого стр из ТабличнаяЧасть Цикл
		//	стр.ПроцентСкидкиНаценки = 0;
		//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стр, Объект);
		//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стр, Объект);
		//КонецЦикла;
	КонецЕсли;

			
	Если НЕ (Ираз И два И три) Тогда
		Возврат;
	КонецЕсли;
			
	
	Ном4Скидки1.ПроцентСкидкиНаценки = 30;
	Ном4Скидки2.ПроцентСкидкиНаценки = 30;
	Ном4Скидки3.ПроцентСкидкиНаценки = 30;
	
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки1, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки1, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки2, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки2, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки3, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки3, Объект);
	
	СписокВторойНабор = Новый СписокЗначений;
	СписокВторойНабор.Добавить(Справочники.Номенклатура.НайтиПоКоду("59752"));
	СписокВторойНабор.Добавить(Справочники.Номенклатура.НайтиПоКоду("255256"));
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если СписокВторойНабор.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			ст.ПроцентСкидкиНаценки = 0;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект); 
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
		КонецЕсли;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры

Процедура NaborPohudey2 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180101000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
		Возврат;
	КонецЕсли;
			
	СписокНом1 = Новый СписокЗначений;
	СписокНом1.Добавить(Справочники.Номенклатура.НайтиПоКоду("59752"));
			
	СписокНом2 = Новый СписокЗначений;
	СписокНом2.Добавить(Справочники.Номенклатура.НайтиПоКоду("255256"));
		
	СписокНом3 = Новый СписокЗначений;
	СписокНом3.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265"));
				
	КоэфПодарка = 1;
					
	Ираз=Ложь;
	два=Ложь;
	три = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если СписокНом1.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Ном4Скидки1 = ст;
			Ираз=Истина;
		КонецЕсли;
		
		Если СписокНом2.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Ном4Скидки2 = ст;
			два=Истина;
		КонецЕсли;
		
		Если СписокНом3.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Если
				ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
				Ном4Скидки3 = ст;
				три=Истина;
			Иначе
				Ном4Скидки3 = ст;
				три=Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если (Ираз=Ложь) ИЛИ (два = Ложь) ИЛИ (три = Ложь) Тогда
		
		Если Ном4Скидки1<>Неопределено Тогда
			Ном4Скидки1.ПроцентСкидкиНаценки = 0;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки1, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки1, Объект);
		КонецЕсли;
		
		Если Ном4Скидки2<>Неопределено Тогда
			Ном4Скидки2.ПроцентСкидкиНаценки = 0;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки2, Объект); 
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки2, Объект);
		КонецЕсли;
		
		Если Ном4Скидки3<>Неопределено Тогда
			Ном4Скидки3.ПроцентСкидкиНаценки = 0;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки3, Объект); 
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки3, Объект);
		КонецЕсли;

	КонецЕсли;

			
	Если НЕ (Ираз И два И три) Тогда
		Возврат;
	КонецЕсли;
			
	
	Ном4Скидки1.ПроцентСкидкиНаценки = 30;
	Ном4Скидки2.ПроцентСкидкиНаценки = 30;
	Ном4Скидки3.ПроцентСкидкиНаценки = 30;
	
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки1, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки1, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки2, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки2, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Ном4Скидки3, Объект);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Ном4Скидки3, Объект);
	
	СписокВторойНабор = Новый СписокЗначений;
	СписокВторойНабор.Добавить(Справочники.Номенклатура.НайтиПоКоду("455322"));
	СписокВторойНабор.Добавить(Справочники.Номенклатура.НайтиПоКоду("255255"));
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если СписокВторойНабор.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			ст.ПроцентСкидкиНаценки = 0;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект); 
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
		КонецЕсли;
	КонецЦикла;

	
	УжеМА=Истина;

	
КонецПроцедуры

//04092017 Walden Farms 3+1
Процедура WaldenFarms3and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20171101000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("852852"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("856634"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994260"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990013"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("103697"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("890007"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994263"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994265"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990011"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("904014"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("982246"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994262"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("963369"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994259"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("895672"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("852466"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994264"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994261"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990012"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("987634"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("800222"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("256390"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("852852"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("856634"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994260"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990013"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("103697"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("890007"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994263"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994265"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990011"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("904014"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("982246"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994262"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("963369"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994259"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("895672"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("852466"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994264"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994261"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990012"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("987634"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("800222"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("256390"));
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 3;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
				КонецЕсли;	
			Иначе
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//04092017 Level Up > 4000
Процедура LevelUp_4000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Сообщить ("Не найдена категория!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170717000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998882"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998883"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998884"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995931"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995933"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995932"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995934"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("100000027"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998560"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995935"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998771"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998954"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998953"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998882"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998883"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998884"));
		
	Шейкер = Справочники.Номенклатура.НайтиПоКоду("99999998885");
	//Шейкер = Справочники.Номенклатура.НайтиПоКоду("99999998771");
	
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	ТабОстатковПодарки2 = ПолучитьСвободныйОстаток(Шейкер,Объект,ТабличнаяЧасть);
	Если (ТабОстатковПодарки.Количество()= 0) И (ТабОстатковПодарки2.Количество()= 0) Тогда
		Возврат;
	КонецЕсли;
	
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		Если ст.Номенклатура.Родитель <>Справочники.Номенклатура.НайтиПоКоду("99999995920") Тогда
			продолжить;
		КонецЕсли;
		
		СуммаВхождений = СуммаВхождений+ст.Сумма;
		
	КонецЦикла;
	
	Если СуммаВхождений < 4000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТабОстатковПодарки.Количество()> 0 Тогда
		Выбор = Неопределено;
		Пока Выбор=Неопределено Цикл
			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
			
		КонецЦикла;
		
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = Выбор.Номенклатура;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Выбор.Качество;
	КонецЕсли;
	
	
	
	Если ТабОстатковПодарки2.Количество()> 0 Тогда
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = Шейкер;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Справочники.Качество.Новый;
	КонецЕсли;
	
	
	
	УжеМА=Истина;

КонецПроцедуры

//13102017 Detour Lenny Chef>2000р
Процедура DetourLennyChef2000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991489"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991487"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991488"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("451202"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991486"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991481"));
	
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		СуммаВхождений = СуммаВхождений+ст.Сумма;
	КонецЦикла;
	
	Если СуммаВхождений < 2000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
			
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры

//13102017 ID 46.0 Каша Like 2+1
Процедура КашаLike2and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20181101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998862"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998864"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998863"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999426"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999427"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999428"));	

	ИдентификаторМА = "46.0";//"23.0";//"КашаLike2and1";
		
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	//
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//				НовСтр.Качество = Выбор.Качество;
	//				//КонецЕсли;
	//				
	//			КонецЕсли;	
	//			// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//			НовСтр.Качество = Выбор.Качество;
	//			//КонецЕсли;
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//13102017 Джемы Slim Jam  3+1 
Процедура ДжемыSlimJam3and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999138"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999136"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999139"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999140"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999137"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999141"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999142"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999143"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999303"));
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 3;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//13102017 PowerSystem2and1
Процедура PowerSystem2and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20171201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("334262"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("354262"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("334262"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("354262"));
	
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура PowerSystem2and1_2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20171201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22670"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("23253"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("336487"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("22670"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("23253"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("336487"));
	
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

Процедура PowerSystem2and1_3  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20171201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("9796772"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("128872"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("9876772"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("9899772"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("9796772"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("128872"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("9876772"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("9899772"));
	
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры


//02112017 Instant Oatmeal 2000 
Процедура InstantOatmeal2000  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
		
	Если (Объект.Дата >='20180101000000') ИЛИ (Объект.Дата <'20170731000000') Тогда
		Возврат;
	КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998344"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998341"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998338"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998339"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998340"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998343"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998342"));
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;

	
КонецПроцедуры

//02112017 Walden Farms 2+1  (Walden Farms подарок при покупке)
Процедура WaldenFarms2and1_new  (ТабличнаяЧасть, Объект,УжеМА,WaldenFarms2and1_new) Экспорт
	
	Если (Объект.Дата >='20180901000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	Валден = Справочники.Номенклатура.НайтиПоКоду("877651");
		
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994270"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994271"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994269"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994268"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994266"));
	
	СписокДляВыбора = Новый СписокЗначений;
	
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994270"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994271"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994269"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994268"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994266"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994267"));
	
		
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 1;
	ИдентификаторМА = "WaldenFarms2and1_new";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(Валден,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если ст.Номенклатура.Родитель <> Валден Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если СписокДляВыбора.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;

	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//Если СколькоПодарков > 1 Тогда 
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Номенклатура.Родитель <> Валден Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если СписокДляВыбора.НайтиПоЗначению(стр.Номенклатура) <> Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;

	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//				НовСтр.Качество = Выбор.Качество;
	//				//КонецЕсли;
	//				
	//			КонецЕсли;	
	//			// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
	//			НовСтр.Качество = Выбор.Качество;
	//			//КонецЕсли;
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	////УжеМА=Истина;
	//WaldenFarms2and1_new=Истина;
	
КонецПроцедуры

//29112017 Trec wear 50%
Процедура  TrecWear50 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Флагман = Справочники.КатегорииОбъектов.НайтиПоНаименованию("Флагман",Истина);
	Если Флагман.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Флагман";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Флагман", Флагман);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	
	Если (Объект.Дата >='20190101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ст из ТабличнаяЧасть Цикл
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	НужныйДок = Документы.УстановкаСкидокНоменклатуры.НайтиПоНомеру("00000000001",ТекущаяДАта());
	Если НужныйДок.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если НужныйДок.Товары.Количество()=0 Тогда
		Возврат;
	КонецЕсли;

	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
				   //|	Табл.Номенклатура В ИЕРАРХИИ(&TrecWear)
				   |	Табл.Номенклатура В (&TrecWear)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
				   //|	Табл.Номенклатура В ИЕРАРХИИ(&TrecWear)
				   |	Табл.Номенклатура В (&TrecWear)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество УБЫВ";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	//Запрос.УстановитьПараметр("TrecWear",Справочники.Номенклатура.НайтиПоКоду("99999995633"));
	Запрос.УстановитьПараметр("TrecWear", НужныйДок.Товары.Выгрузить());
			
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//29112017 Schiek 50%
Процедура  Schiek50 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20180119000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ст из ТабличнаяЧасть Цикл
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&Schiek)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&Schiek)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество УБЫВ";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Schiek",Справочники.Номенклатура.НайтиПоКоду("402030"));
			
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//29112017 Dymatize
Процедура Dymatize  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	//неправильная акция. Работает вместе RedStarLabs
	
	Если (Объект.Дата >='20180201000000') ИЛИ (Объект.Дата <'20170731000000') Тогда
		Возврат;
	КонецЕсли;
	
	НужныйДок = Документы.УстановкаСкидокНоменклатуры.НайтиПоНомеру("00000000023",ТекущаяДАта());
	Если НужныйДок.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если НужныйДок.Товары.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999271"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999273"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999272"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999275"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999274"));
	
	RedStarLabs = Новый СписокЗначений;
	RedStarLabs.Добавить(Справочники.Номенклатура.НайтиПоКоду("372016"));
	RedStarLabs.Добавить(Справочники.Номенклатура.НайтиПоКоду("372004"));
	RedStarLabs.Добавить(Справочники.Номенклатура.НайтиПоКоду("372010"));
	RedStarLabs.Добавить(Справочники.Номенклатура.НайтиПоКоду("372005"));
	RedStarLabs.Добавить(Справочники.Номенклатура.НайтиПоКоду("372015"));
	RedStarLabs.Добавить(Справочники.Номенклатура.НайтиПоКоду("372008"));

				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если НужныйДок.Товары.Найти(ст.Номенклатура,"Номенклатура")=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		Если RedStarLabs.НайтиПоЗначению(под.Номенклатура)=Неопределено Тогда
			УжеПодарки = УжеПодарки+под.Количество;
		КонецЕсли;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если НужныйДок.Товары.Найти(стр.Номенклатура,"Номенклатура")=Неопределено Тогда
				Продолжить;
			КонецЕсли;

			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//29112017 Гели Арена
Процедура ГелиАрена  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999029"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999028"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999030"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999027"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999031"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999032"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100298"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999029"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999028"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999030"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999027"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999031"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999032"));	

		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//07122017 Akvion Vitime
Процедура Akvion_Vitime  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Сообщить ("Не найдена категория!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	Если (Объект.Дата >='20180109000000') ИЛИ (Объект.Дата <'20170301000000') Тогда
		Возврат;
	КонецЕсли;
			
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995851"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995848"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995850"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995847"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995849"));
	
	СписокДляДобавить = Новый СписокЗначений;
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокНом.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
		
		СписокДляДобавить.Добавить(ст.Номенклатура);
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляДобавить.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;

	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
										
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//07122017 Akvion Dietelle
Процедура Akvion_Dietelle  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Сообщить ("Не найдена категория!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	Если (Объект.Дата >='20180109000000') ИЛИ (Объект.Дата <'20170301000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995855"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995852"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995853"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995854"));
	
	СписокДляДобавить = Новый СписокЗначений;
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокНом.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
		
		СписокДляДобавить.Добавить(ст.Номенклатура);
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляДобавить.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;

	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
										
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//07122017 

//08122017 Booster_100
Процедура Booster_100  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180109000000') ИЛИ (Объект.Дата <'20170301000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21559"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21560"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990735"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21563"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991143"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21562"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990734"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21558"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21561"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21557"));
	
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокНом.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
										
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
										
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//08122017 

//08122017 Booster_50
Процедура Booster_50  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180109000000') ИЛИ (Объект.Дата <'20170301000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22068"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22067"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22069"));
		
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокНом.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
										
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
										
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//08122017 

//19122017 QNT акция 3+1
Процедура QNTакция3and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990777"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990778"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990779"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998145"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998146"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998147"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998148"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998149"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998150"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998151"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998152"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998153"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998154"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990777"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990778"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990779"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998145"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998146"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998147"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998148"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998149"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998150"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998151"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998152"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998153"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998154"));
	
	
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 3;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//19122017 Healthy ball акция 2+1
Процедура Healthyballакция2and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100397"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100395"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100399"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100394"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100398"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100396"));
		
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100397"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100395"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100399"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100394"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100398"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100396"));
	                           
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору <> Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.БазоваяЕдиницаИзмерения;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.БазоваяЕдиницаИзмерения;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//19122017 LevelUP  акция 2+1  (1)
Процедура LevelUPакция2and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Сообщить ("Не найдена категория!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995960"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995961"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998951"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995962"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998770"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995960"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995961"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998951"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995962"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998770"));	
	
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//19122017 LevelUP  акция 2+1  (2)
Процедура LevelUPакция2and1_2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Сообщить ("Не найдена категория!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995921"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995922"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995923"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995924"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995921"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995922"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995923"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995924"));	
	
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры


//19122017 Спортивные технологии  акция 2+1
Процедура Спортивныетехнологииакция2and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
		
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998062"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998280"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998281"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998282"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998283"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998284"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998285"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998062"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998280"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998281"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998282"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998283"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998284"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998285"));	
	
		
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//19122017 walden farms акция 2+1
Процедура waldenfarmsакция2and1  (ТабличнаяЧасть, Объект,УжеМА,WaldenFarms2and1_new) Экспорт
		
	Если (Объект.Дата >='20180601000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	//СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998935"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998938"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998936"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998937"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998939"));
	//	
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998935"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998938"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998936"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998937"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998939"));	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("825040"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994258"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("896240"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("789355"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("904005"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994257"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("875016"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("905020"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("895120"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("904003"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990014"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("936221"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("952274"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("797254"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("895210"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("852852"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("856634"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994260"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990013"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("103697"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("890007"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994263"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994265"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990011"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("904014"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("982246"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994262"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("963369"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994259"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("895672"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("852466"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994264"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994261"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990012"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("987634"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("800222"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("256390"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("895031"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994253"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("254120"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994255"));
	
	Пробники = Новый СписокЗначений;
	Пробники.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994270"));
	Пробники.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994271"));
	Пробники.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994269"));
	Пробники.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994268"));
	Пробники.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994266"));
	Пробники.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994267"));

	
	Валден = Справочники.Номенклатура.НайтиПоКоду("877651");
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Ном.Ссылка
	//               |ИЗ
	//               |	Справочник.Номенклатура КАК Ном
	//               |ГДЕ
	//               |	Ном.Ссылка В ИЕРАРХИИ(&Род)
	//               |	И НЕ Ном.ПометкаУдаления";
	//Запрос.УстановитьПараметр("Род",Валден);
					
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТабОстатковПодарки2 = ПолучитьСвободныйОстаток(Пробники.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки2.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;

		
	КоэфПодарка = 2;
	ИдентификаторМА = "waldenfarmsакция2and1";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,ПримененнаяАкцияSailPlay","Количество");
	
	упак = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778");
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если ст.Номенклатура.Родитель <> Валден Тогда
			продолжить;
		КонецЕсли;
		
		Если Пробники.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			продолжить;
		КонецЕсли;

		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = упак  Тогда
			продолжить;
		КонецЕсли;
		
		//Если СокрЛП(ст.ПримененнаяАкцияSailPlay) = ИдентификаторМА  Тогда
		//	Продолжить;
		//КонецЕсли;
		Если ЗначениеЗаполнено(ст.ПримененнаяАкцияSailPlay)  Тогда 
			Продолжить;
		КонецЕсли;

						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			//Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) И (WaldenFarms2and1_new=Ложь) Тогда
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay = ИдентификаторМА)) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		//Если WaldenFarms2and1_new Тогда
		//	УжеМА=Истина;
		//КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СокрЛП(стр.ПримененнаяАкцияSailPlay) = ИдентификаторМА  Тогда
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если ТабОстатковПодарки2.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;

		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Номенклатура.Родитель<>Валден Тогда
				продолжить;
			КонецЕсли;
			
			Если Пробники.НайтиПоЗначению(стр.Номенклатура) <> Неопределено Тогда
				продолжить;
			КонецЕсли;


			
			Если СокрЛП(стр.ПримененнаяАкцияSailPlay) = ИдентификаторМА Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			Если ТабОстатковПодарки2.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;

			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			Выбор.Свободный = Выбор.Свободный-1;
			
			Выбор2 = Неопределено;
			Пока Выбор2=Неопределено Цикл
				Выбор2 = ТабОстатковПодарки2.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор2 = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			Выбор2.Свободный = Выбор2.Свободный-1;
			
			Выбор3 = Неопределено;
			Пока Выбор3=Неопределено Цикл
				Выбор3 = ТабОстатковПодарки2.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор3 = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			Выбор3.Свободный = Выбор3.Свободный-1;

			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
					НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
				КонецЕсли;	
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
			КонецЕсли;
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор2.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор2.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор2.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор2.Качество;
					НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;				
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор2.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор2.Качество;
				НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
			КонецЕсли;
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор3.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор3.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор3.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор3.Качество;
					НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;				
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор3.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор3.Качество;
				НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
			КонецЕсли;


			
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
			к=0;
			Пока к<ТабОстатковПодарки2.Количество() Цикл
				Если ТабОстатковПодарки2[к].Свободный = 0 Тогда
					ТабОстатковПодарки2.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры


//19122017 5лб скидка 50%  на вторую вещь
Процедура  лб5_50 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ст из ТабличнаяЧасть Цикл
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&лб)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&лб)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество УБЫВ";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("лб",Справочники.Номенклатура.НайтиПоКоду("82"));
			
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//19122017 Grizzly скидка 50%  на вторую вещь
Процедура  Grizzly50 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ст из ТабличнаяЧасть Цикл
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&Grizzly)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&Grizzly)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество УБЫВ";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Grizzly",Справочники.Номенклатура.НайтиПоКоду("501630"));
			
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//19122017 Chiba скидка 50%  на вторую вещь
Процедура  Chiba50 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ст из ТабличнаяЧасть Цикл
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&Chiba)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&Chiba)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество УБЫВ";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Chiba",Справочники.Номенклатура.НайтиПоКоду("125"));
			
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//19122017 Mad Max скидка 50%  на вторую вещь
Процедура  MadMax50 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20180116000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ст из ТабличнаяЧасть Цикл
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&MadMax)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ(&MadMax)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество УБЫВ";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("MadMax",Справочники.Номенклатура.НайтиПоКоду("97"));
			
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//20122017 Natural zero акция 2+1
Процедура Naturalzeroакция2and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
		
	Если (Объект.Дата >='20180801000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998935"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998938"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998936"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998937"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998939"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100467"));
		
	СписокДляВыбора = Новый СписокЗначений;
//	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998935"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998938"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998936"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998937"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998939"));		
//	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100467"));
	
		
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	ИдентификаторМА = "14.0";//"Naturalzeroакция2and1";	
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//15012018 Trec Nutrition  3+1
Процедура TrecNutrition3and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("104006"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("193041"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("104006"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("193041"));
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры
//15012018 Trec Nutrition  3+1 2
Процедура TrecNutrition3and1_2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("104008"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("104001"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("104008"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("104001"));
			
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//15012018 Quamtrax подарок при покупке
Процедура Quamtraxподарокприпокупке  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
			//Сообщить ("Не найдена категория!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20180601000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998334"));
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998920"));
				
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 1;
	ИдентификаторМА = "17.0";//"Quamtraxподарокприпокупке";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//15012018 SN Pro вода 2+1
Процедура SNProвода2and1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995601"));
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995601"));
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//30012018 RSL BCCA подарок при покупке
Процедура RSLBCCAподарокприпокупке  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999617"));
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995601"));
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//30012018 BCCA Blast подарок при покупке
Процедура BCCABlastподарокприпокупке  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180501000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("872006"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("23713"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("870161"));
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100612"));
				
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 1;
	ИдентификаторМА = "BCCABlastподарокприпокупке";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//30012018 Energy Drink  подарок при покупке
Процедура EnergyDrinkподарокприпокупке  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	//ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	//Если ПерваяКатегория.Пустая() Тогда
	//	Сообщить ("Не найдена категория!",СтатусСообщения.Важное);
	//	Возврат;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Рег.Объект
	//|ИЗ
	//|	РегистрСведений.КатегорииОбъектов КАК Рег
	//|ГДЕ
	//|	Рег.Объект = &Склад
	//|	И Рег.Категория = &Первая";
	//Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	//
	//Если Запрос.Выполнить().Пустой() Тогда
	//	Возврат;
	//КонецЕсли;

	
	Если (Объект.Дата >='20190201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("452013"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100620"));
		
		
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 1;
	ИдентификаторМА = "21.0";//"EnergyDrinkподарокприпокупке";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//09022018 Мсяо распродажа остатка
Процедура Мсяораспродажаостатка  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996154"));
				
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996154"));
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//09022018 Мсяо распродажа остатка2
Процедура Мсяораспродажаостатка2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996157"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996156"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996155"));
				
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996157"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996156"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996155"));
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//09022018 Масленица в 5LB
Процедура Масленицав5LB  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180219000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997613"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997611"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997616"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997615"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997612"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998336"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998337"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996137"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991151"));
				
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("904004"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("904001"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("904006"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("892222"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("205413"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("855366"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994246"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999994245"));
	
				
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//19022018 Акции к 23 февраля "50% скидка на аксессуары
Процедура  Акциик23февраля50скидканааксессуары (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20180224000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ст из ТабличнаяЧасть Цикл
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	СписокРод = Новый СписокЗначений;
	СписокРод.Добавить(Справочники.Номенклатура.НайтиПоКоду("402030"));
	СписокРод.Добавить(Справочники.Номенклатура.НайтиПоКоду("501630"));
	СписокРод.Добавить(Справочники.Номенклатура.НайтиПоКоду("125"));
	СписокРод.Добавить(Справочники.Номенклатура.НайтиПоКоду("97"));

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ (&СписокРод)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В ИЕРАРХИИ (&СписокРод)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество УБЫВ";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("СписокРод",СписокРод.ВыгрузитьЗначения());
			
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 50;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//28022018 Natural Zero 2+1
Процедура NaturalZero2and1 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170201000000') Тогда
		Возврат;
	КонецЕсли;
	
	ТекРод = Справочники.Номенклатура.НайтиПоКоду("99999999897");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Ном.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Ном
	               |ГДЕ
	               |	Ном.Ссылка В ИЕРАРХИИ(&Род)
	               |	И НЕ Ном.ПометкаУдаления";
	Запрос.УстановитьПараметр("Род",ТекРод);
					
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(Запрос.Выполнить().Выгрузить(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	КоэфПодарка = 2;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если ст.Номенклатура.Родитель<>ТекРод Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
		
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Номенклатура.Родитель<>ТекРод Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.Коэффициент = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
										
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//28022018 Power Pro Подарок при покупке
Процедура PowerProПодарокприпокупке (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180416000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999926"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999927"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999928"));
					
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100419"));
						
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
		
	КоэфПодарка = 1;
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.Цена = 0.01 Тогда 
			Продолжить;
		КонецЕсли;
						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Цена", 0.01);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-5;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+5;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 5;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
									
				КонецЕсли;	
				
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 5;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	УжеМА=Истина;
	
КонецПроцедуры

//28022018 Trec Подарок при покупке
Процедура TrecПодарокприпокупке (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	
	Если (Объект.Дата >='20180601000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996480"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996483"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996481"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996482"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996484"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996485"));
					
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990751"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100817"));
						
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
		
	КоэфПодарка = 1;
	ИдентификаторМА = "9.0";//"TrecПодарокприпокупке";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//28022018 Diadar 1+1
Процедура Diadar1and1 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20181101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996831"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996832"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996833"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996834"));
						
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996831"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996832"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996833"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996834"));
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100806"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100807"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100808"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100809"));

						
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
		
	КоэфПодарка = 1;
	ИдентификаторМА = "Diadar1and1";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//28022018 Diadar 1+1_2
Процедура Diadar1and1_2 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20181101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996835"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996836"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996837"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996838"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996839"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996840"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996841"));
						
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996835"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996836"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996837"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996838"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996839"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996840"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996841"));
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100810"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100811"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100812"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100813"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100814"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100815"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100816"));

						
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
		
	КоэфПодарка = 1;
	ИдентификаторМА = "Diadar1and1_2";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//01032018 Twinlab скидка 25% на вторую вещь
Процедура  Twinlab25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20180401000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	men = Справочники.Номенклатура.НайтиПоКоду("565483");
	women = Справочники.Номенклатура.НайтиПоКоду("516483");
	
	Ираз = Ложь;
	Два = Ложь;

	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Номенклатура = men Тогда
			Ираз=Истина;
		КонецЕсли;
		
		Если ст.Номенклатура = women Тогда
			Два = Истина;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если НЕ (Ираз И Два) Тогда
		Возврат;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(men);
	СписокНом.Добавить(women);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В(&СписокНом)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В(&СписокНом)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("СписокНом",СписокНом.ВыгрузитьЗначения());
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод*2;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//02032018 RSL скидка 25% на вторую вещь
Процедура  RSL25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20180501000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	melat = Справочники.Номенклатура.НайтиПоКоду("99999994500");
	antiox = Справочники.Номенклатура.НайтиПоКоду("11111100003");
	
	Ираз = Ложь;
	Два = Ложь;

	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Номенклатура = melat Тогда
			Ираз=Истина;
		КонецЕсли;
		
		Если ст.Номенклатура = antiox Тогда
			Два = Истина;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если НЕ (Ираз И Два) Тогда
		Возврат;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(melat);
	СписокНом.Добавить(antiox);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В(&СписокНом)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В(&СписокНом)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	ВЫРАЗИТЬ(СУММА(ТзКолПод.КолПодарков) / 2 - 0.5 КАК ЧИСЛО(15, 0)) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("СписокНом",СписокНом.ВыгрузитьЗначения());
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолПодарков = ТМПТаб[0].СколькоПод*2;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
	//УжеМА=Истина;

	
КонецПроцедуры

//14032018 BestJoy  Акция 1+1
Процедура BestJoyАкция1_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	//Флагман = Справочники.КатегорииОбъектов.НайтиПоНаименованию("Флагман",Истина);
	//Если Флагман.Пустая() Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Рег.Объект
	//|ИЗ
	//|	РегистрСведений.КатегорииОбъектов КАК Рег
	//|ГДЕ
	//|	Рег.Объект = &Склад
	//|	И Рег.Категория = &Флагман";
	//Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//Запрос.УстановитьПараметр("Флагман", Флагман);
	//
	//Если Запрос.Выполнить().Пустой() Тогда
	//	Возврат;
	//КонецЕсли;

	Если Объект.Склад <>Справочники.Склады.НайтиПоКоду("603") Тогда //только Авиапарк
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20181201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100478"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100477"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100476"));
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100796"));
		
		
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 1;
	ИдентификаторМА = "11.0";//"BestJoyАкция1_1";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//14032018 SVN «Подарок при покупке» 
Процедура SVNПодарокприпокупке  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	
	Если (Объект.Дата >='20180616000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100479"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100480"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100482"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100483"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100484"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100485"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100486"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100487"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999177"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100488"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100489"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100490"));
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100797"));
		
		
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	ИдентификаторМА = "12.0";
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	//
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//14032018 Quamtrax Акция 1+1
Процедура QuamtraxАкция1_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20181001000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998918"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998919"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998917"));
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998918"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998919"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998917"));
				
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	ИдентификаторМА = "QuamtraxАкция1_1";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//14032018 Quamtrax Акция 1+1_2
Процедура QuamtraxАкция1_1_2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20181001000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998921"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998922"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998920"));
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998921"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998922"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998920"));
				
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	ИдентификаторМА = "QuamtraxАкция1_1_2";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//14032018 Trec «Подарок при покупке»>500
Процедура TrecПодарокприпокупке500 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	//Флагман = Справочники.КатегорииОбъектов.НайтиПоНаименованию("Флагман",Истина);
	//Если Флагман.Пустая() Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Рег.Объект
	//|ИЗ
	//|	РегистрСведений.КатегорииОбъектов КАК Рег
	//|ГДЕ
	//|	Рег.Объект = &Склад
	//|	И Рег.Категория = &Флагман";
	//Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//Запрос.УстановитьПараметр("Флагман", Флагман);
	//
	//Если Запрос.Выполнить().Пустой() Тогда
	//	Возврат;
	//КонецЕсли;

	//
	//Если (Объект.Дата >='20180501000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//	
	//СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996534"));
	//	
	//
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	//
	//СуммаВхождений = 0;
	//Для Каждого ст из ТМПТаб Цикл
	//			
	//	СуммаВхождений = СуммаВхождений+ст.Сумма;
	//	
	//КонецЦикла;
	//
	//Если СуммаВхождений < 500 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//Если НайденныеПодарки.Количество()>0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//	
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//	
	//
	//НовСтр = ТабличнаяЧасть.Добавить();
	//НовСтр.Номенклатура = Справочники.Номенклатура.НайтиПоКоду("99999996534");
	//НовСтр.Количество = 1;
	//НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	//НовСтр.СуммаНДС = 0;
	//НовСтр.Сумма = 0.01;
	//НовСтр.Цена = 0.01;
	//НовСтр.Качество = Справочники.Качество.Новый;
	//
	//к=0;
	//Пока к<ТабОстатковПодарки.Количество() Цикл
	//	Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//		ТабОстатковПодарки.Удалить(к);
	//		продолжить;
	//	КонецЕсли;
	//	к=к+1;
	//КонецЦикла;
	
	//УжеМА=Истина;

	
КонецПроцедуры

//30032018 Quamtrax Акция 2+1
Процедура QuamtraxАкция2_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180701000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998934"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998933"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998932"));
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998934"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998933"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998932"));
					
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	ИдентификаторМА = "16.1";//"QuamtraxАкция2_1";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//30032018 PowerPro 3+1
Процедура PowerPro3_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180601000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997457"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997458"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997459"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997460"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100417"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100418"));
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100419"));
	//				
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 3;
	ИдентификаторМА = "1.0";//"PowerPro3_1";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//30032018 Vitale XD 1+1
Процедура VitaleXD1_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180601000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("526601"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("285561"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("258890"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("582210"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("552001"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("915011"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("401801"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("205002"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("251044"));
	
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("526601"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("285561"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("258890"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("582210"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("552001"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("915011"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("401801"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("205002"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("251044"));
					
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 1;
	ИдентификаторМА = "13.0";//"VitaleXD1_1";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//30032018 Walden Farms>5000
Процедура WaldenFarms_5000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180601000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	ТекРод = Справочники.Номенклатура.НайтиПоКоду("877651");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Ном.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Ном
	               |ГДЕ
	               |	Ном.Ссылка В ИЕРАРХИИ(&Род)
	               |	И НЕ Ном.ПометкаУдаления";
	Запрос.УстановитьПараметр("Род",ТекРод);

	ТабОстатковПодарки = ПолучитьСвободныйОстаток(Запрос.Выполнить().Выгрузить(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторМА = "18.0";//"WaldenFarms_5000";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
				
		СуммаВхождений = СуммаВхождений+ст.Сумма;
		
	КонецЦикла;
	
	Если СуммаВхождений < 5000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры

//30032018 Trec 1+1
Процедура Trec1_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180701000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21508"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("659233"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("582368"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991147"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21509"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997606"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997627"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992305"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992304"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997623"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992303"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997626"));
	  	
			
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("564026"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372006"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("371020"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("564036"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999995678"));
	
					
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 1;
	ИдентификаторМА = "3.1";//"Trec1_1";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//30032018 Vasco 2+1
Процедура Vasco2_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180501000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100497"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100498"));
				
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100792"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100793"));
					
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	ИдентификаторМА = "Vasco2_1";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//30032018 Vasco 2+1 Флагманы
Процедура Vasco2_1_Флагманы  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Флагман = Справочники.КатегорииОбъектов.НайтиПоНаименованию("Флагман",Истина);
	Если Флагман.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Флагман";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Флагман", Флагман);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;


	
	Если (Объект.Дата >='20180501000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100494"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100495"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100496"));
				
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100519"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100520"));
					
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	ИдентификаторМА = "Vasco2_1_Флагманы";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//30032018 Vasco 2+1 Флагманы 2
Процедура Vasco2_1_Флагманы_2  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Флагман = Справочники.КатегорииОбъектов.НайтиПоНаименованию("Флагман",Истина);
	Если Флагман.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Флагман";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Флагман", Флагман);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;


	
	Если (Объект.Дата >='20180501000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100499"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100500"));
					
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100522"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100521"));
					
	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	
	
	КоэфПодарка = 2;
	ИдентификаторМА = "Vasco2_1_Флагманы_2";
	
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,Цена","Количество");
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
	//СколькоВхождений=0;
	//Для Каждого ст из ТМПТаб Цикл
	//	Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
	//		продолжить;
	//	КонецЕсли;
	//	
	//	Если ст.Цена = 0.01 Тогда 
	//		Продолжить;
	//	КонецЕсли;
	//					
	//	СколькоВхождений = СколькоВхождений+ст.Количество;
	//	
	//КонецЦикла;
	//
	//СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	//
	//Если СколькоПодарков = 0 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (ТабличнаяЧасть[к].Цена = 0.01) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Цена", 0.01);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//УжеПодарки = 0;
	//Для Каждого под из НайденныеПодарки Цикл
	//	УжеПодарки = УжеПодарки+под.Количество;
	//КонецЦикла;
	//СколькоПодарков = СколькоПодарков - УжеПодарки;
	//
	//Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	//
	//Если СколькоПодарков<0 Тогда
	//	СколькоПодарков = СколькоПодарков*-1;
	//	п=0;
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда 
	//			ТабличнаяЧасть.Удалить(стр);
	//			п=п+1;
	//			Продолжить;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//
	//п=0;
	//Пока п<>СколькоПодарков Цикл
	//	Если ТабОстатковПодарки.Количество()= 0 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Для Каждого стр из ТабличнаяЧасть Цикл
	//		Если п=СколькоПодарков Тогда
	//			прервать;
	//		КонецЕсли;
	//		
	//		Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
	//			продолжить;
	//		КонецЕсли;
	//		
	//		Если стр.Цена = 0.01 Тогда продолжить КонецЕсли;
	//		
	//		Если ТабОстатковПодарки.Количество()= 0 Тогда
	//			Прервать;
	//		КонецЕсли;
	//		
	//		Выбор = Неопределено;
	//		Пока Выбор=Неопределено Цикл
	//			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//		Выбор.Свободный = Выбор.Свободный-1;
	//		
	//		
	//		ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
	//		Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
	//			Если ТекСтр.Цена = 0.01 Тогда
	//				ТекСтр.Количество = ТекСтр.Количество+1;
	//			Иначе
	//				НовСтр = ТабличнаяЧасть.Добавить();
	//				НовСтр.Номенклатура = Выбор.Номенклатура;
	//				НовСтр.Количество = 1;
	//				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//				НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//				НовСтр.СуммаНДС = 0;
	//				НовСтр.Сумма = 0.01;
	//				НовСтр.Цена = 0.01;
	//				НовСтр.Качество = Выбор.Качество;
	//								
	//			КонецЕсли;	
	//			
	//		Иначе
	//			
	//			НовСтр = ТабличнаяЧасть.Добавить();
	//			НовСтр.Номенклатура = Выбор.Номенклатура;
	//			НовСтр.Количество = 1;
	//			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//			НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//			НовСтр.СтавкаНДС = стр.СтавкаНДС;
	//			НовСтр.СуммаНДС = 0;
	//			НовСтр.Сумма = 0.01;
	//			НовСтр.Цена = 0.01;
	//			НовСтр.Качество = Выбор.Качество;
	//			
	//		КонецЕсли;
	//		п = п+1;
	//		
	//		к=0;
	//		Пока к<ТабОстатковПодарки.Количество() Цикл
	//			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//				ТабОстатковПодарки.Удалить(к);
	//				продолжить;
	//			КонецЕсли;
	//			к=к+1;
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//КонецЦикла;
	//УжеМА=Истина;
	
КонецПроцедуры

//25042018 2.0 RSL Подарок при покупке
Процедура ID2_0_RSLПодарокприпокупке  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180701000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997876"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997881"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997877"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997882"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997879"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997883"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997880"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997878"));
	
			
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("564026"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("372006"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("371020"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("564036"));
		
	КоэфПодарка = 1;
	ИдентификаторМА = "2.1";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//30052018 ID311_Vitale>500
Процедура ID31_1_VitaleXD500 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180701000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
		
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("526601"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("285561"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("258890"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("582210"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("552001"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("915011"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("401801"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("205002"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("251044"));
					
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторМА = "31.0";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
				
		СуммаВхождений = СуммаВхождений+ст.Сумма;
		
	КонецЦикла;
	
	Если СуммаВхождений < 500 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	//УжеМА=Истина;

	
КонецПроцедуры

//28062018 34.0 OBEZIN 3+1
Процедура ID34_0_OBEZIN3_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20190201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100868"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100867"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100869"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100870"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100871"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101253"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100872"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100873"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100874"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100875"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100876"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101254"));
	
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101490"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101500"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101493"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101499"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101494"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101491"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101495"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101496"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101501"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101497"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101498"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101492"));
		
	КоэфПодарка = 3;
	ИдентификаторМА = "34.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//28062018 35.0 Crunch-Brunch 2+1
Процедура ID35_0_CrunchBrunch2_1  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180801000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101379"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101382"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101380"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101381"));
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101610"));
	
		
	КоэфПодарка = 2;
	ИдентификаторМА = "35.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//28062018 My Choice>1000
Процедура MyChoice_1000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	//Если (Объект.Дата >='20180801000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//ТекРод = Справочники.Номенклатура.НайтиПоКоду("11111101449");
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Ном.Ссылка
	//               |ИЗ
	//               |	Справочник.Номенклатура КАК Ном
	//               |ГДЕ
	//               |	Ном.Ссылка В ИЕРАРХИИ(&Род)
	//               |	И НЕ Ном.ПометкаУдаления";
	//Запрос.УстановитьПараметр("Род",ТекРод);

	//ТабОстатковПодарки = ПолучитьСвободныйОстаток(Запрос.Выполнить().Выгрузить(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//ИдентификаторМА = "36.0";
	//
	//ТМПТаб = ТабличнаяЧасть.Выгрузить();
	//ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	//
	//СуммаВхождений = 0;
	//Для Каждого ст из ТМПТаб Цикл
	//			
	//	СуммаВхождений = СуммаВхождений+ст.Сумма;
	//	
	//КонецЦикла;
	//
	//Если СуммаВхождений < 1000 Тогда 
	//	к=0;
	//	Пока к<ТабличнаяЧасть.Количество() Цикл
	//		Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
	//			ТабличнаяЧасть.Удалить(к);
	//			продолжить;
	//		КонецЕсли;
	//		к=к+1;
	//	КонецЦикла;
	//	Возврат;
	//КонецЕсли;
	//
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	//
	//НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	//Если НайденныеПодарки.Количество()>0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Выбор = Неопределено;
	//Пока Выбор=Неопределено Цикл
	//	Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
	//	Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
	//	
	//КонецЦикла;
	//
	//Выбор.Свободный = Выбор.Свободный-1;
	//
	//НовСтр = ТабличнаяЧасть.Добавить();
	//НовСтр.Номенклатура = Выбор.Номенклатура;
	//НовСтр.Количество = 1;
	//НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	//НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	//НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	//НовСтр.СуммаНДС = 0;
	//НовСтр.Сумма = 0.01;
	//НовСтр.Цена = 0.01;
	//НовСтр.Качество = Выбор.Качество;
	//НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	//
	//к=0;
	//Пока к<ТабОстатковПодарки.Количество() Цикл
	//	Если ТабОстатковПодарки[к].Свободный = 0 Тогда
	//		ТабОстатковПодарки.Удалить(к);
	//		продолжить;
	//	КонецЕсли;
	//	к=к+1;
	//КонецЦикла;
	//
	//УжеМА=Истина;

	
КонецПроцедуры

//31072018 39.0 ON Подарок при покупке
Процедура ID39_0_ON_Подарокприпокупке (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("49581"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("501462"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("896655"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("106752"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("38542"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("987654"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998971"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998970"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996846"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998969"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998975"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998974"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998973"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998972"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("10000000000"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101286"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("38943"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("57752"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("44832"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("56872"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("498462"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("407532"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("40652"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998449"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1255462"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1012462"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1254462"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("1253462"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997944"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996147"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996149"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996148"));
	
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992556"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992307"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992308"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991468"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("52178"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("31852"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("44144"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("780405"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("66566"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997967"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997966"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997965"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22165"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22166"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22164"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("22163"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999941"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999962"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992557"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999963"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("44352"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999959"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("447663"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999940"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999958"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("54882"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999932"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999931"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("586521"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999960"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999934"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999936"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("9999243"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999938"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("999937"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("238892"));
		
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101640"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101642"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101641"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101756"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101758"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101757"));
	
		
	КоэфПодарка = 1;
	ИдентификаторМА = "39.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//31072018 40.0 RSL 3+1
Процедура ID40_0_RSL_3_1 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180901000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("645702"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("645801"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265"));
	
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("645702"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("645801"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265"));
	
		
	КоэфПодарка = 3;
	ИдентификаторМА = "40.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//31072018 41.0 RSL 3+1
Процедура ID41_0_АлексФедоров (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20180901000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998278"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998279"));
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998277"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998276"));
		
		
	КоэфПодарка = 1;
	ИдентификаторМА = "41.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//28082018 43.0 Power Pro Подарок при покупке
Процедура ID43_0_PowerProПодарокприпокупке (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20181001000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999926"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999927"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999928"));
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101070"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101071"));
		
		
	КоэфПодарка = 1;
	ИдентификаторМА = "43.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//28082018 45.0 Power Pro 1+1
Процедура ID45_0_PowerPro1_1 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20181101000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997457"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997458"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997459"));
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100419"));
			
		
	КоэфПодарка = 1;
	ИдентификаторМА = "45.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры


//16082018 37.0 Stl>2000
Процедура ID37_0_Stl_2000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Флагман = Справочники.КатегорииОбъектов.НайтиПоНаименованию("Флагман",Истина);
	Если Флагман.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Флагман";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Флагман", Флагман);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	
	Если (Объект.Дата >='20181001000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	ТекРод = Справочники.Номенклатура.НайтиПоКоду("11111101596");
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101827"));
						
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	//Если ТабОстатковПодарки.Количество()= 0 Тогда
	//	Возврат;
	//КонецЕсли;
		
	ИдентификаторМА = "37.0";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
				
		Если ст.Номенклатура.Родитель = ТекРод Тогда
			СуммаВхождений = СуммаВхождений+ст.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СуммаВхождений < 2000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
		
КонецПроцедуры

//27092018 ID54_0_Quamtrax_25
Процедура  ID54_0_Quamtrax_25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	//Если (Объект.Дата >='20181101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
	//	Возврат;
	//КонецЕсли;

	//
	//Если ТабличнаяЧасть.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Glucosamine = Справочники.Номенклатура.НайтиПоКоду("11111100380");
	//Multi = Справочники.Номенклатура.НайтиПоКоду("11111100388");
	//
	//Ираз = Ложь;
	//Два = Ложь;

	//КолПодарков1 = 0;
	//КолПодарков2 = 0;
	//Для Каждого ст из ТабличнаяЧасть Цикл
	//	Если ст.Номенклатура = Glucosamine Тогда
	//		Ираз=Истина;
	//		КолПодарков1 = КолПодарков1 +ст.Количество;
	//	КонецЕсли;
	//	
	//	Если ст.Номенклатура = Multi Тогда
	//		Два = Истина;
	//		КолПодарков2 = КолПодарков2 +ст.Количество;
	//	КонецЕсли;
	//	
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	//КонецЦикла;
	//
	//Если НЕ (Ираз И Два) Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//НеКоплект = Ложь;
	//Если КолПодарков1<>КолПодарков2 Тогда
	//	НеКоплект = Истина;
	//КонецЕсли;
	//
	//Табб = ТабличнаяЧасть.Выгрузить();
	//Для Каждого стт из Табб Цикл
	//	стт.КлючСтроки = Табб.Индекс(стт);
	//КонецЦикла;
	//
	//Если Удаление Тогда Возврат КонецЕсли;
	//		
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Табл.Количество КАК КолПодарков
	//               |ПОМЕСТИТЬ ТЗКолПод
	//               |ИЗ
	//               |	&Таб КАК Табл
	//               |ГДЕ
	//               |	Табл.Номенклатура =&Ном
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Табл.КлючСтроки,
	//               |	Табл.Номенклатура,
	//               |	Табл.Цена,
	//               |	Табл.Количество
	//               |ПОМЕСТИТЬ ТЗхЗ
	//               |ИЗ
	//               |	&Таб КАК Табл
	//               |ГДЕ
	//               |	Табл.Номенклатура = &Ном
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ТЗхЗ.КлючСтроки,
	//               |	ТЗхЗ.Номенклатура,
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество,
	//               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	//               |ИЗ
	//               |	ТЗхЗ КАК ТЗхЗ,
	//               |	ТЗКолПод КАК ТзКолПод
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ТЗхЗ.КлючСтроки,
	//               |	ТЗхЗ.Номенклатура,
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество";
	//			   
	//               	
	//Запрос.УстановитьПараметр("Таб",Табб);
	//Запрос.УстановитьПараметр("Ном",Glucosamine);
	//			
	//ТМПТаб = Запрос.Выполнить().Выгрузить();
	//	
	//Если ТМПТаб.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если НеКоплект Тогда
	//	Если ТМПТаб[0].СколькоПод = 1 Тогда
	//		КолПодарков = ТМПТаб[0].СколькоПод;
	//	Иначе
	//		КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
	//	КонецЕсли;
	//Иначе
	//	КолПодарков = ТМПТаб[0].СколькоПод;
	//КонецЕсли;
	//Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	//
	//Для Каждого ст из ТМПТаб Цикл
	//	ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
	//	ТекСтр.ПроцентАвтоматическихСкидок = 0;
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	
	//	Если КолПодарков = 0 Тогда продолжить КонецЕсли;
	//	
	//	
	//	Если ТекСтр.Количество = КолПодарков Тогда
	//		КолПодарков = 0;
	//		ТекСтр.ПроцентАвтоматическихСкидок = 25;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
	//		ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		
	//		НовСтр = ТабличнаяЧасть.Добавить();
	//		НовСтр.Номенклатура = ТекСтр.Номенклатура;
	//		НовСтр.Количество = КолПодарков;
	//		НовСтр.ПроцентАвтоматическихСкидок = 25;
	//		ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
	//		ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
	//		НовСтр.Качество = ТекСтр.Качество;
	//		
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
	//		
	//		КолПодарков = 0;
	//	ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
	//		КолПодарков = КолПодарков - ТекСтр.Количество;
	//		ТекСтр.ПроцентАвтоматическихСкидок = 25;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	////////////////////
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Табл.Количество КАК КолПодарков
	//               |ПОМЕСТИТЬ ТЗКолПод
	//               |ИЗ
	//               |	&Таб КАК Табл
	//               |ГДЕ
	//               |	Табл.Номенклатура =&Ном
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Табл.КлючСтроки,
	//               |	Табл.Номенклатура,
	//               |	Табл.Цена,
	//               |	Табл.Количество
	//               |ПОМЕСТИТЬ ТЗхЗ
	//               |ИЗ
	//               |	&Таб КАК Табл
	//               |ГДЕ
	//               |	Табл.Номенклатура = &Ном
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ТЗхЗ.КлючСтроки,
	//               |	ТЗхЗ.Номенклатура,
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество,
	//               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	//               |ИЗ
	//               |	ТЗхЗ КАК ТЗхЗ,
	//               |	ТЗКолПод КАК ТзКолПод
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ТЗхЗ.КлючСтроки,
	//               |	ТЗхЗ.Номенклатура,
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ТЗхЗ.Цена,
	//               |	ТЗхЗ.Количество";
	//			   
	//               	
	//Запрос.УстановитьПараметр("Таб",Табб);
	//Запрос.УстановитьПараметр("Ном",Multi);
	//			
	//ТМПТаб = Запрос.Выполнить().Выгрузить();
	//	
	//Если ТМПТаб.Количество()=0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если НеКоплект Тогда
	//	Если ТМПТаб[0].СколькоПод = 1 Тогда
	//		КолПодарков = ТМПТаб[0].СколькоПод;
	//	Иначе
	//		КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
	//	КонецЕсли;
	//Иначе
	//	КолПодарков = ТМПТаб[0].СколькоПод;
	//КонецЕсли;

	//Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	//
	//Для Каждого ст из ТМПТаб Цикл
	//	ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
	//	ТекСтр.ПроцентАвтоматическихСкидок = 0;
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	
	//	Если КолПодарков = 0 Тогда продолжить КонецЕсли;
	//	
	//	
	//	Если ТекСтр.Количество = КолПодарков Тогда
	//		КолПодарков = 0;
	//		ТекСтр.ПроцентАвтоматическихСкидок = 25;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
	//		ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//		
	//		НовСтр = ТабличнаяЧасть.Добавить();
	//		НовСтр.Номенклатура = ТекСтр.Номенклатура;
	//		НовСтр.Количество = КолПодарков;
	//		НовСтр.ПроцентАвтоматическихСкидок = 25;
	//		ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
	//		ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
	//		НовСтр.Качество = ТекСтр.Качество;
	//		
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
	//		
	//		КолПодарков = 0;
	//	ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
	//		КолПодарков = КолПодарков - ТекСтр.Количество;
	//		ТекСтр.ПроцентАвтоматическихСкидок = 25;
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
	//		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
	//	КонецЕсли;
	//	
	//КонецЦикла;

		
КонецПроцедуры

//27092018 ID55_0_Hardlabz_25
Процедура  ID55_0_Hardlabz_25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20181101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	BCAA = Справочники.Номенклатура.НайтиПоКоду("181801");
	Mag = Справочники.Номенклатура.НайтиПоКоду("957705");
	
	Ираз = Ложь;
	Два = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Номенклатура = BCAA Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если ст.Номенклатура = Mag Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если НЕ (Ираз И Два) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Если КолПодарков1<>КолПодарков2 Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура =&Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура = &Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Ном",BCAA);
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;
	
	//////////////////
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура =&Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура = &Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Ном",Mag);
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;

	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

//27092018 ID56_0_Trec
Процедура ID56_0_Trec (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20190201000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999991147"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997925"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21508"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("659233"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("582368"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("21509"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997606"));
	
			
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997925"));
			
		
	КоэфПодарка = 1;
	ИдентификаторМА = "56.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//17102018 ID65_0_Quamtrax_25 (исчо одна)
Процедура  ID65_0_Quamtrax_25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20181101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Glucosamine = Справочники.Номенклатура.НайтиПоКоду("11111100380");
	Multi = Справочники.Номенклатура.НайтиПоКоду("11111100381");
	
	Ираз = Ложь;
	Два = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Номенклатура = Glucosamine Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если ст.Номенклатура = Multi Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если НЕ (Ираз И Два) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Если КолПодарков1<>КолПодарков2 Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура =&Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура = &Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Ном",Glucosamine);
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;
	
	//////////////////
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура =&Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура = &Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Ном",Multi);
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;

	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

		
КонецПроцедуры

//30102018 ID66_0_MolokoIngredients+Food
Процедура ID66_0_MolokoIngredientsFood (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	Флагман = Справочники.КатегорииОбъектов.НайтиПоНаименованию("Флагман",Истина);
	Если Флагман.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Флагман";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Флагман", Флагман);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	
	Если (Объект.Дата >='20190101000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101427"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101425"));
				
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101424"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102152"));
			
		
	КоэфПодарка = 2;
	ИдентификаторМА = "66.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//30102018 ID67_0_Sporty
Процедура ID67_0_Sporty (ТабличнаяЧасть, Объект,УжеМА) Экспорт
		
	Если (Объект.Дата >='20190101000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998869"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101305"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101016"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996203"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101898"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997680"));
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101306"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101304"));
				
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998869"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101305"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101016"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999996203"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101898"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997680"));
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101306"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101304"));
			
		
	КоэфПодарка = 3;
	ИдентификаторМА = "67.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//30102018 ID68_0_Hardlabz_25
Процедура  ID68_0_Hardlabz_25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20181201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Нерго = Новый СписокЗначений;
	Нерго.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990124"));
	Нерго.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990125"));
	
	Амино = Новый СписокЗначений;
	Амино.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990117"));
	Амино.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990118"));
			
	Ираз = Ложь;
	Два = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если Нерго.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
				
		Если Амино.НайтиПоЗначению(ст.Номенклатура) <> Неопределено Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если НЕ (Ираз И Два) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Если КолПодарков1<>КолПодарков2 Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В (&Ном)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В (&Ном)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Ном",Нерго.ВыгрузитьЗначения());
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;
	
	//////////////////
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В (&Ном)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура В (&Ном)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Ном",Амино.ВыгрузитьЗначения());
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;

	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 25;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

		
КонецПроцедуры

//30102018 ID69_0_RedStarLabs_25
Процедура  ID69_0_RedStarLabs_25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Если (Объект.Дата >='20190101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//Glucosamine = Справочники.Номенклатура.НайтиПоКоду("11111100656");
	Glucosamine = Справочники.Номенклатура.НайтиПоКоду("99999997497");
	Multi = Справочники.Номенклатура.НайтиПоКоду("99999990403");
	
	Ираз = Ложь;
	Два = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Номенклатура = Glucosamine Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если ст.Номенклатура = Multi Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если НЕ (Ираз И Два) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Если КолПодарков1<>КолПодарков2 Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура =&Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура = &Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Ном",Glucosamine);
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 20;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 20;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 20;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;
	
	//////////////////
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура =&Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура = &Ном
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Ном",Multi);
				
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;

	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда Возврат КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = 20;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = 20;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = 20;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

		
КонецПроцедуры

//07112018 SNPRO - 30%
Процедура  SNPRO_30 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20181112000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	СкладыВыставки = Новый СписокЗначений;
	СкладыВыставки.Добавить(Справочники.Склады.НайтиПоКоду("912"));
	СкладыВыставки.Добавить(Справочники.Склады.НайтиПоКоду("914"));
	
	Если СкладыВыставки.НайтиПоЗначению(Объект.Склад) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТипЦенЛБ = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");
	ТипЦенСЦЗ = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000021");
	
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ЗначениеЗаполнено(ст.ПримененнаяАкцияSailPlay) Тогда 
			Продолжить;
		КонецЕсли;

		ЦенаЛБ = ПолучитьЦену(ст.Номенклатура,ТипЦенЛБ,ст.ЕдиницаИзмерения);
		ЦенаСЦЗ = ПолучитьЦену(ст.Номенклатура,ТипЦенСЦЗ,ст.ЕдиницаИзмерения);
		ЦенаСЦЗ_12 = ЦенаСЦЗ + (ЦенаСЦЗ*0.12);
		
		ТекЦена = ЦенаЛБ - (ЦенаЛБ*0.3);
		Если ТекЦена<ЦенаСЦЗ_12 Тогда
			ТекЦена = ЦенаСЦЗ_12;
		КонецЕсли;
		
		ст.Цена = Окр(ТекЦена,-1,1);
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
		
	КонецЦикла;	
		
КонецПроцедуры

//08112018 SNPRO Акция №1>500
Процедура SNPRO_Акция_1 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
		
	Если (Объект.Дата >='20181112000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
	
	СкладыВыставки = Новый СписокЗначений;
	СкладыВыставки.Добавить(Справочники.Склады.НайтиПоКоду("912"));
	СкладыВыставки.Добавить(Справочники.Склады.НайтиПоКоду("914"));
	
	Если СкладыВыставки.НайтиПоЗначению(Объект.Склад) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

						
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102032"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102031"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102029"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102030"));
		
	ВодаЛБ = Справочники.Номенклатура.НайтиПоКоду("11111101860");
							
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
			
	ИдентификаторМА = "SNPRO_Акция_1";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		СуммаВхождений = СуммаВхождений+ст.Сумма;
	КонецЦикла;
	
	Если СуммаВхождений < 500 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	Если НЕ ВодаЛБ.Пустая() Тогда
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = ВодаЛБ;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Справочники.Качество.Новый;
		НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	КонецЕсли;


	УжеМА = Истина;
	
		
КонецПроцедуры

//08112018 SNPRO Акция №2>1000
Процедура SNPRO_Акция_2 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
		
	Если (Объект.Дата >='20181112000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
	
	СкладыВыставки = Новый СписокЗначений;
	СкладыВыставки.Добавить(Справочники.Склады.НайтиПоКоду("912"));
	СкладыВыставки.Добавить(Справочники.Склады.НайтиПоКоду("914"));
	
	Если СкладыВыставки.НайтиПоЗначению(Объект.Склад) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

						
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102032"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102031"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102029"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102030"));
		
	ВодаЛБ = Справочники.Номенклатура.НайтиПоКоду("11111101860");
							
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
			
	ИдентификаторМА = "SNPRO_Акция_2";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		СуммаВхождений = СуммаВхождений+ст.Сумма;
	КонецЦикла;
	
	Если СуммаВхождений < 1000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	п = 0;
	Пока п<2 Цикл
		Выбор = Неопределено;
		Пока Выбор=Неопределено Цикл
			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
			
		КонецЦикла;
		
		Выбор.Свободный = Выбор.Свободный-1;
		
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = Выбор.Номенклатура;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Выбор.Качество;
		НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
		
		к=0;
		Пока к<ТабОстатковПодарки.Количество() Цикл
			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
				ТабОстатковПодарки.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		
		п = п+1;
	КонецЦикла;
	
	Если НЕ ВодаЛБ.Пустая() Тогда
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = ВодаЛБ;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Справочники.Качество.Новый;
		НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	КонецЕсли;


	УжеМА = Истина;
	
		
КонецПроцедуры

//08112018 SNPRO Акция №3>1500
Процедура SNPRO_Акция_3 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
		
	Если (Объект.Дата >='20181112000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
	
	СкладыВыставки = Новый СписокЗначений;
	СкладыВыставки.Добавить(Справочники.Склады.НайтиПоКоду("912"));
	СкладыВыставки.Добавить(Справочники.Склады.НайтиПоКоду("914"));
	
	Если СкладыВыставки.НайтиПоЗначению(Объект.Склад) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

						
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102032"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102031"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102029"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102030"));
			
	ВодаЛБ = Справочники.Номенклатура.НайтиПоКоду("11111101860");
	Шейкер = Справочники.Номенклатура.НайтиПоКоду("11111102028");
	Пробник = Справочники.Номенклатура.НайтиПоКоду("11111102145");
							
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
			
	ИдентификаторМА = "SNPRO_Акция_3";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		СуммаВхождений = СуммаВхождений+ст.Сумма;
	КонецЦикла;
	
	Если СуммаВхождений < 1500 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	п = 0;
	Пока п<2 Цикл
		Выбор = Неопределено;
		Пока Выбор=Неопределено Цикл
			Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
			Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
			
		КонецЦикла;
		
		Выбор.Свободный = Выбор.Свободный-1;
		
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = Выбор.Номенклатура;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Выбор.Качество;
		НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
		
		к=0;
		Пока к<ТабОстатковПодарки.Количество() Цикл
			Если ТабОстатковПодарки[к].Свободный = 0 Тогда
				ТабОстатковПодарки.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		
		п = п+1;
	КонецЦикла;
	
	Если НЕ ВодаЛБ.Пустая() Тогда
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = ВодаЛБ;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Справочники.Качество.Новый;
		НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	КонецЕсли;
	
	Если НЕ Шейкер.Пустая() Тогда
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = Шейкер;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Справочники.Качество.Новый;
		НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	КонецЕсли;
	
	Если НЕ Пробник.Пустая() Тогда
		НовСтр = ТабличнаяЧасть.Добавить();
		НовСтр.Номенклатура = Пробник;
		НовСтр.Количество = 1;
		НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
		НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
		НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		НовСтр.СуммаНДС = 0;
		НовСтр.Сумма = 0.01;
		НовСтр.Цена = 0.01;
		НовСтр.Качество = Справочники.Качество.Новый;
		НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	КонецЕсли;

	УжеМА = Истина;
	
		
КонецПроцедуры

//26112018 ID76_0_ON 2+1
Процедура ID76_0_ON_2_1 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
		
	Если (Объект.Дата >='20190201000000') ИЛИ (Объект.Дата <'20180715000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101640"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101642"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101641"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101756"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101758"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101757"));
					
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101640"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101642"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101641"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101756"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101758"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101757"));
			
		
	КоэфПодарка = 2;
	ИдентификаторМА = "76.0";
	
	
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
	
		
КонецПроцедуры

//30112018 ID77_0_BestJoy  Акция 1+1
Процедура ID77_0_BestJoyАкция1_1_new  (ТабличнаяЧасть, Объект,УжеМА) Экспорт
			
	Если (Объект.Дата >='20190101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
		
	СписокНом = Новый СписокЗначений;
	//СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100796"));
	СписокНом.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100477"));
			
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100476"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102484"));
		
	
	КоэфПодарка = 1;
	ИдентификаторМА = "77.0";
		
	ПрименитьАкцию(СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект);
			
КонецПроцедуры

//30112018 ID78_0_SVN Подарок при покупке>2000
Процедура ID78_0_SVNПодарокприпокупке_2000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20190101000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	ТекРод = Справочники.Номенклатура.НайтиПоКоду("11111100481");
	
	СписокДляВыбора = Новый СписокЗначений;
	//СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100476"));
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102484"));
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторМА = "78.0";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		
		Если ст.Номенклатура.Родитель = ТекРод Тогда
			СуммаВхождений = СуммаВхождений+ст.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СуммаВхождений < 2000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры

//04122018 ID79_0_QNT Подарок при покупке>2000
Процедура ID79_0_QNTПодарокприпокупке_2000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если Объект.Склад <>Справочники.Склады.НайтиПоКоду("603") Тогда //только Авиапарк
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20190201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	ТекРод = Справочники.Номенклатура.НайтиПоКоду("392");
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111102418"));
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторМА = "79.0";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		
		Если ст.Номенклатура.Родитель = ТекРод Тогда
			СуммаВхождений = СуммаВхождений+ст.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СуммаВхождений < 2000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры

//04122018 ID80_0_5ЛБ Подарок при покупке>500
Процедура ID80_0_5ЛБПодарокприпокупке_500 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20190201000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("987006"));
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторМА = "80.0";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		СуммаВхождений = СуммаВхождений+ст.Сумма;
	КонецЦикла;
	
	Если СуммаВхождений < 500 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры

//19122018 ID81_0_Natrol_25
Процедура  ID81_0_Natrol_25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("21541");
	Glucosamine = Справочники.Номенклатура.НайтиПоКоду("21990");
	Multi = Справочники.Номенклатура.НайтиПоКоду("346632");
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Multi) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;

	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//19122018 ID82_0_Natrol_25
Процедура  ID82_0_Natrol_25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("21986");
	Glucosamine = Справочники.Номенклатура.НайтиПоКоду("222160");
	Multi = Справочники.Номенклатура.НайтиПоКоду("219130");
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Multi) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;

	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//19122018 ID83_0_Natrol_25
Процедура  ID83_0_Natrol_25 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("11111101858");
	Glucosamine = Справочники.Номенклатура.НайтиПоКоду("220157");
	Multi = Справочники.Номенклатура.НайтиПоКоду("502019");
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Multi) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;

	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//19122018 ID84_0_Fit-Rx_20
Процедура  ID84_0_FitRx_20 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("11111102175");
	Glucosamine = Справочники.Номенклатура.НайтиПоКоду("11111100697");
	Multi = Справочники.Номенклатура.НайтиПоКоду("11111100343");
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Multi) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;

	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//19122018 ID85_0_Fit-Rx_20
Процедура  ID85_0_FitRx_20 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	Если ПерваяКатегория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Первая";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("11111100696");
	Glucosamine = Справочники.Номенклатура.НайтиПоКоду("11111101696");
	Multi = Справочники.Номенклатура.НайтиПоКоду("11111101574");
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Multi) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;

	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//20122018 ID86_0_Quamtrax_Blackline_20
//В составляющем комплекта несколько вкусов
Процедура  ID86_0_Quamtrax_Blackline_20 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	//ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	//Если ПерваяКатегория.Пустая() Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Рег.Объект
	//|ИЗ
	//|	РегистрСведений.КатегорииОбъектов КАК Рег
	//|ГДЕ
	//|	Рег.Объект = &Склад
	//|	И Рег.Категория = &Первая";
	//Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	//
	//Если Запрос.Выполнить().Пустой() Тогда
	//	Возврат;
	//КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("11111100386");
	
	Glucosamine = Новый СписокЗначений;
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998924"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998925"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998923"));
	
	Multi = Новый СписокЗначений;
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999990726"));
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998385"));
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999992121"));
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999998384"));
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (Glucosamine.НайтиПоЗначению(ст.Номенклатура)<>Неопределено) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если (Multi.НайтиПоЗначению(ст.Номенклатура)<>Неопределено) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;

	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//20122018 ID87_0_RedStarLabsSculptNutrex_20
//В составляющем комплекта несколько вкусов и разные товары
Процедура  ID87_0_RedStarLabsSculptNutrex_20 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	//ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	//Если ПерваяКатегория.Пустая() Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Рег.Объект
	//|ИЗ
	//|	РегистрСведений.КатегорииОбъектов КАК Рег
	//|ГДЕ
	//|	Рег.Объект = &Склад
	//|	И Рег.Категория = &Первая";
	//Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	//
	//Если Запрос.Выполнить().Пустой() Тогда
	//	Возврат;
	//КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("455322");
	
	Glucosamine = Новый СписокЗначений;
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("255256"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("255255"));
		
	Multi = Новый СписокЗначений;
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997495"));
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997494"));
	//Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997496"));
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999997496"));
	
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (Glucosamine.НайтиПоЗначению(ст.Номенклатура)<>Неопределено) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если (Multi.НайтиПоЗначению(ст.Номенклатура)<>Неопределено) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;

	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//20122018 ID88_0_TrecNutrition_20
Процедура  ID88_0_TrecNutrition_20 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	//ПерваяКатегория = Справочники.КатегорииОбъектов.НайтиПоНаименованию("1 категория",Истина);
	//Если ПерваяКатегория.Пустая() Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Рег.Объект
	//|ИЗ
	//|	РегистрСведений.КатегорииОбъектов КАК Рег
	//|ГДЕ
	//|	Рег.Объект = &Склад
	//|	И Рег.Категория = &Первая";
	//Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//Запрос.УстановитьПараметр("Первая", ПерваяКатегория);
	//
	//Если Запрос.Выполнить().Пустой() Тогда
	//	Возврат;
	//КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("5023");
	Glucosamine = Справочники.Номенклатура.НайтиПоКоду("22767");
	Multi = Справочники.Номенклатура.НайтиПоКоду("99999990751");
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Multi) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;

	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//20122018 ID89_0_BOMBBARGranolaHousePrebioSweetFitnessSlimFruitfamily_20
//В составляющем комплекта несколько вкусов
Процедура  ID89_0_BOMBBARGranolaHousePrebioSweetFitnessSlimFruitfamily_20 (ТабличнаяЧасть, Объект,УжеМА,Удаление=Ложь) Экспорт
	
	Флагман = Справочники.КатегорииОбъектов.НайтиПоНаименованию("Флагман",Истина);
	Если Флагман.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК Рег
	|ГДЕ
	|	Рег.Объект = &Склад
	|	И Рег.Категория = &Флагман";
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Флагман", Флагман);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;

	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	лСкидка = 20;
	
	Glucosamine1 = Справочники.Номенклатура.НайтиПоКоду("11111100267");
	Glucosamine2 = Справочники.Номенклатура.НайтиПоКоду("11111101438");
	Glucosamine3 = Справочники.Номенклатура.НайтиПоКоду("11111101374");
	
	Glucosamine = Новый СписокЗначений;
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101567"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101565"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101569"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101564"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101570"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101566"));
	Glucosamine.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101568"));
	
	Multi = Новый СписокЗначений;
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100263"));
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100264"));
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100265"));
	Multi.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111100266"));
	
	Multi1 = Новый СписокЗначений;
	Multi1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999138"));
	Multi1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999136"));
	Multi1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999139"));
	Multi1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999140"));
	Multi1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999137"));
	Multi1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999141"));
	Multi1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999142"));
	Multi1.Добавить(Справочники.Номенклатура.НайтиПоКоду("99999999143"));
	
	
	Ираз = Ложь;
	Два = Ложь;
	Три = Ложь;
	Четыре = Ложь;
	Пять = Ложь;
	Шесть = Ложь;

	КолПодарков1 = 0;
	КолПодарков2 = 0;
	КолПодарков3 = 0;
	КолПодарков4 = 0;
	КолПодарков5 = 0;
	КолПодарков6 = 0;
	ЕстьНолик = Ложь;
	Для Каждого ст из ТабличнаяЧасть Цикл
		Если ст.Количество = 0 Тогда
			ЕстьНолик = Истина;
		КонецЕсли;
		
		Если (Glucosamine.НайтиПоЗначению(ст.Номенклатура)<>Неопределено) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Ираз=Истина;
			КолПодарков1 = КолПодарков1 +ст.Количество;
		КонецЕсли;
		 			
		Если (Multi.НайтиПоЗначению(ст.Номенклатура)<>Неопределено) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Два = Истина;
			КолПодарков2 = КолПодарков2 +ст.Количество;
		КонецЕсли;
				
		Если (ст.Номенклатура = Glucosamine1) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Три=Истина;
			КолПодарков3 = КолПодарков3 +ст.Количество;
		КонецЕсли;
		
		Если (Multi1.НайтиПоЗначению(ст.Номенклатура)<>Неопределено) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Четыре = Истина;
			КолПодарков4 = КолПодарков4 +ст.Количество;
		КонецЕсли;

		Если (ст.Номенклатура = Glucosamine2) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Пять=Истина;
			КолПодарков5 = КолПодарков5 +ст.Количество;
		КонецЕсли;
		
		Если (ст.Номенклатура = Glucosamine3) И (ст.Качество = Справочники.Качество.Новый) Тогда
			Шесть=Истина;
			КолПодарков6 = КолПодарков6 +ст.Количество;
		КонецЕсли;
		
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ст, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ст, Объект);
	КонецЦикла;
	
	Если ЕстьНолик Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ираз И Два И Три И Четыре И Пять И Шесть) Тогда
		Возврат;
	КонецЕсли;
	
	НеКоплект = Ложь;
	Проверка = Макс(КолПодарков1,КолПодарков2,КолПодарков3,КолПодарков4,КолПодарков5,КолПодарков6);
	Если (КолПодарков1<>Проверка) ИЛИ (КолПодарков2<>Проверка) ИЛИ (КолПодарков3<>Проверка) 
		ИЛИ (КолПодарков4<>Проверка) 
		ИЛИ (КолПодарков5<>Проверка)
		ИЛИ (КолПодарков6<>Проверка) Тогда
		НеКоплект = Истина;
	КонецЕсли;
	
	Табб = ТабличнаяЧасть.Выгрузить();
	Для Каждого стт из Табб Цикл
		стт.КлючСтроки = Табб.Индекс(стт);
	КонецЦикла;
	
	Если Удаление Тогда Возврат КонецЕсли;
	
	лВозврат = Ложь;
	ПрименитьСкидкуНаКомплект(Табб,Multi,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Multi1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine1,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine2,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
	Если лВозврат Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСкидкуНаКомплект(Табб,Glucosamine3,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат);
			
КонецПроцедуры

//20122018 ID90_0_5ЛБ Подарок при покупке>1000
Процедура ID90_0_5ЛБ_Подарокприпокупке_1000 (ТабличнаяЧасть, Объект,УжеМА) Экспорт
	
	Если (Объект.Дата >='20190111000000') ИЛИ (Объект.Дата <'20170802000000') Тогда
		Возврат;
	КонецЕсли;
	
	
	СписокДляВыбора = Новый СписокЗначений;
	СписокДляВыбора.Добавить(Справочники.Номенклатура.НайтиПоКоду("11111101860"));
	
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторМА = "90.0";
	
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС","Сумма");
	
	СуммаВхождений = 0;
	Для Каждого ст из ТМПТаб Цикл
		СуммаВхождений = СуммаВхождений+ст.Сумма;
	КонецЦикла;
	
	Если СуммаВхождений < 1000 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеПодарки.Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выбор = Неопределено;
	Пока Выбор=Неопределено Цикл
		Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
		Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
		
	КонецЦикла;
	
	Выбор.Свободный = Выбор.Свободный-1;
	
	НовСтр = ТабличнаяЧасть.Добавить();
	НовСтр.Номенклатура = Выбор.Номенклатура;
	НовСтр.Количество = 1;
	НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
	НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
	НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	НовСтр.СуммаНДС = 0;
	НовСтр.Сумма = 0.01;
	НовСтр.Цена = 0.01;
	НовСтр.Качество = Выбор.Качество;
	НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
	
	к=0;
	Пока к<ТабОстатковПодарки.Количество() Цикл
		Если ТабОстатковПодарки[к].Свободный = 0 Тогда
			ТабОстатковПодарки.Удалить(к);
			продолжить;
		КонецЕсли;
		к=к+1;
	КонецЦикла;
	
	УжеМА=Истина;

	
КонецПроцедуры




//////////////////////
Функция ПолучитьСвободныйОстаток (СписокПодарков,Объект,ТабличнаяЧасть)
	
	//Если ТипЗнч(СписокПодарков)=Тип("СписокЗначений") Тогда
	//19122016
	Если ТипЗнч(СписокПодарков)=Тип("Массив") Тогда
	//19122016	
		ЛокСписок = СписокПодарков;
	Иначе
		ЛокСписок = Новый СписокЗначений;
		ЛокСписок.Добавить(СписокПодарков);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.Номенклатура,
	               |	Таб.Качество,
	               |	Таб.Количество
	               |ПОМЕСТИТЬ ТаблицаТоваровИзДока
	               |ИЗ
	               |	&Таблица КАК Таб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Качество,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток - ВЫБОР
	               |		КОГДА ЕСТЬNULL(ТоварыВРезерве.КоличествоОстаток, 0) = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ТоварыВРезерве.КоличествоОстаток
	               |	КОНЕЦ - ВЫБОР
	               |		КОГДА ЕСТЬNULL(ТаблицаТоваровИзДока.Количество, 0) = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ТаблицаТоваровИзДока.Количество
	               |	КОНЕЦ КАК Свободный
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(&КонДата, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&КонДата, Склад = &Склад) КАК ТоварыВРезерве
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ТоварыВРезерве.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваровИзДока КАК ТаблицаТоваровИзДока
	               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ТаблицаТоваровИзДока.Номенклатура
	               |			И ТоварыНаСкладахОстатки.Качество = ТаблицаТоваровИзДока.Качество
	               |ГДЕ
	               |	ТоварыНаСкладахОстатки.Номенклатура В(&Список)
	               |	И ТоварыНаСкладахОстатки.КоличествоОстаток - ВЫБОР
	               |			КОГДА ЕСТЬNULL(ТоварыВРезерве.КоличествоОстаток, 0) = 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ТоварыВРезерве.КоличествоОстаток
	               |		КОНЕЦ - ВЫБОР
	               |			КОГДА ЕСТЬNULL(ТаблицаТоваровИзДока.Количество, 0) = 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ТаблицаТоваровИзДока.Количество
	               |		КОНЕЦ > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаТоваровИзДока";
	
	Запрос.УстановитьПараметр("КонДата",ТекущаяДата());
	Запрос.УстановитьПараметр("Склад",?(ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг"),Объект.Склад.Ссылка,Объект.СкладГруппа.Ссылка));
	Запрос.УстановитьПараметр("Список",ЛокСписок);
	Запрос.УстановитьПараметр("Таблица",ТабличнаяЧасть);
	
	возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//19122016
Функция ПолучитьБазовуюЕдИзм (ЛНоменклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Ед.Ссылка
	               |ИЗ
	               |	Справочник.ЕдиницыИзмерения КАК Ед
	               |ГДЕ
	               |	Ед.Владелец = &Ном
	               |	И Ед.ЕдиницаПоКлассификатору = &Упак
	               |	И НЕ Ед.ПометкаУдаления";
	Запрос.УстановитьПараметр("Ном",ЛНоменклатура);
	Запрос.УстановитьПараметр("Упак",Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778"));
	
	Выб = Запрос.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ПолучитьЦену (Ном,ТипЦен,Ед) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА &Ед <> Цены.ЕдиницаИзмерения
	               |			ТОГДА Цены.Цена / ВЫБОР
	               |					КОГДА Цены.ЕдиницаИзмерения.Коэффициент = 0
	               |						ТОГДА 1
	               |					ИНАЧЕ Цены.ЕдиницаИзмерения.Коэффициент
	               |				КОНЕЦ
	               |		ИНАЧЕ Цены.Цена
	               |	КОНЕЦ КАК Цена
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |			&Дата,
	               |			ТипЦен = &Тип
	               |				И Номенклатура = &Ном) КАК Цены";
	Запрос.УстановитьПараметр("Дата",ТекущаяДата());
	Запрос.УстановитьПараметр("Тип",ТипЦен);
	Запрос.УстановитьПараметр("Ном",Ном);
	Запрос.УстановитьПараметр("Ед",Ед);
	
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выб = Рез.Выбрать();
	Выб.Следующий();
	
	Возврат Выб.Цена;

	
КонецФункции

Процедура ДобавитьДополнительныйТоварВАкцию (ТабОстатковПодарки,ТабличнаяЧасть) 
	
	Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если ТекСтр.Цена = 0.01 Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.Коэффициент = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
					НовСтр.Качество = Выбор.Качество;
					//КонецЕсли;
					
				КонецЕсли;	
				// ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
				//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			Иначе
				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				//Если (ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваровУслуг")) И (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Брак) Тогда
				НовСтр.Качество = Выбор.Качество;
				//КонецЕсли;
			КонецЕсли;
							
КонецПроцедуры
//19122016

//20122016
Функция ПоискВРегистреМА (ЛНом)
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	Группа.Ссылка КАК Номенклатура
	              |ПОМЕСТИТЬ ТЗГруппы
	              |ИЗ
	              |	Справочник._5LB_ГруппыНоменклатуры.СоставГруппы КАК Группа
	              |ГДЕ
	              |	Группа.Номенклатура = &Ном
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Рег.Номенклатура
	              |ИЗ
	              |	РегистрСведений.АвтоДобавлениеВМагазинСопутствующиеТовары КАК Рег
	              |ГДЕ
	              |	(Рег.НоменклатураДобавления = &Ном
	              |			ИЛИ Рег.НоменклатураДобавления В
	              |				(ВЫБРАТЬ
	              |					Группа.Номенклатура
	              |				ИЗ
	              |					ТЗГруппы КАК Группа))
	              |	И Рег.ДатаПо > &ТекДата";
	Запрос.УстановитьПараметр("Ном",ЛНом);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции
//20122016

Процедура ПриИзмененииНоменклатурыТоваров(СтрокаТабличнойЧасти,Объект)

	// Заполняем реквизиты табличной части.
	ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрокаТабличнойЧасти, Объект, "Реализация");
	ОбработкаТабличныхЧастей.ЗаполнитьСпособСписанияОстаткаТоваровТабЧасти(СтрокаТабличнойЧасти, Объект);

	// Заполнение цены зависит от розничности операции.
	ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуЦенуПродажиТабЧасти(СтрокаТабличнойЧасти, Объект, глЗначениеПеременной("ВалютаРегламентированногоУчета")); 

	
КонецПроцедуры



///////////////////////////////////////////////////////
// Акция 2+1 в подарок с 21.03.2016 по 27.03.2016 (L-Carnitine Liquid Metal 5000 20 амп) 

//++ Кузнецов С.А. - 16.03.2016
Процедура LCarnitineLiquidMetal5000_2_1(ТабличнаяЧасть, Объект, УжеМА) Экспорт 
	
	// Проверка дат акции
	датаНачалаАкции = Дата(2016, 03, 21);
	датаОкончанияАкции = КонецДня(Дата(2016, 03, 27));
	Если Объект.Дата < датаНачалаАкции 
		ИЛИ Объект.Дата > датаОкончанияАкции Тогда
		Возврат;
	КонецЕсли;	
		
	// массив товаров, участвующих в акции 
	массивТоваровУчаствующихВАкции = Новый Массив;
	массивТоваровУчаствующихВАкции.Добавить(Справочники.Номенклатура.НайтиПоКоду("645702")); // L-Carnitine Liquid Metal 5000 20 амп - апельсин
	массивТоваровУчаствующихВАкции.Добавить(Справочники.Номенклатура.НайтиПоКоду("645801")); // L-Carnitine Liquid Metal 5000 20 амп - вишня
	массивТоваровУчаствующихВАкции.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265")); // L-Carnitine Liquid Metal 5000 20 амп - малина
		
	// массив подарков
	массивПодарочныхТоваров = Новый Массив;
	массивПодарочныхТоваров.Добавить(Справочники.Номенклатура.НайтиПоКоду("645702")); // L-Carnitine Liquid Metal 5000 20 амп - апельсин
	массивПодарочныхТоваров.Добавить(Справочники.Номенклатура.НайтиПоКоду("645801")); // L-Carnitine Liquid Metal 5000 20 амп - вишня
	массивПодарочныхТоваров.Добавить(Справочники.Номенклатура.НайтиПоКоду("255265")); // L-Carnitine Liquid Metal 5000 20 амп - малина
	
	// Определим, что работаем только с базовой единицей (В нашем случае - "упак") !!!!!!!!!!!!!
	базоваяЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778"); // Упаковка	
	
	// Сколько товаров в документе, участвующих в акции - Перезаполняем цены и делаем количество по 1 у номенклатур массива товаров участвующих в акции  
	количествоТоваровУчаствующихВАкцииВДокументе = 0;
	максимальныйИндексПроверки = ТабличнаяЧасть.Количество() - 1;
	Для iСтрокиПервоначальнойТЧ = 0 По максимальныйИндексПроверки Цикл 
		стрТЧ = ТабличнаяЧасть[iСтрокиПервоначальнойТЧ];
		Если стрТЧ.Цена <> 0.01 
			И массивТоваровУчаствующихВАкции.Найти(стрТЧ.Номенклатура) <> Неопределено 
			И стрТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = базоваяЕдиницаПоКлассификатору Тогда
			количествоТоваровУчаствующихВАкцииВДокументе = стрТЧ.Количество + количествоТоваровУчаствующихВАкцииВДокументе;
			
			// Для всех (не подарочных) товаров обновляем цены, т.к. потом вычитаются копейки
			стрТЧ.Цена = Ценообразование.ПолучитьЦенуНоменклатуры(стрТЧ.Номенклатура, ,
			Объект.ТипЦен, Объект.Дата, стрТЧ.ЕдиницаИзмерения,
			Объект.ВалютаДокумента, Объект.КурсВзаиморасчетов, Объект.КратностьВзаиморасчетов);
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, Объект);
			
			// Разбивваем строку по 1 шт. 
			Если стрТЧ.Количество > 1 Тогда				
				количествоНеобходимыхДопСтрок = стрТЧ.Количество - 1;
				стрТЧ.Количество = 1;
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, Объект);
				
				Для iНовСтрок = 1 по количествоНеобходимыхДопСтрок Цикл
					новСтрокаДока = ТабличнаяЧасть.Добавить();
					ЗаполнитьЗначенияСвойств(новСтрокаДока,стрТЧ);	
				КонецЦикла;	
			КонецЕсли;				
		КонецЕсли;	
	КонецЦикла;
	
	// Сколько товаров по 1 копейки - это акционный товар
	массивСтрокСАкционнымТоваром = Новый Массив;
	количествоАкционныхТоваровВДокументе = 0;
	Для Каждого стрТЧ Из ТабличнаяЧасть Цикл 
		Если стрТЧ.Цена = 0.01 
			И массивПодарочныхТоваров.Найти(стрТЧ.Номенклатура) <> Неопределено 
			И стрТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = базоваяЕдиницаПоКлассификатору Тогда
			массивСтрокСАкционнымТоваром.Добавить(стрТЧ);
			количествоАкционныхТоваровВДокументе = количествоАкционныхТоваровВДокументе + стрТЧ.Количество;
		КонецЕсли;	
	КонецЦикла;	
	
	// Проверка выполнения условия, что в документе есть необходимые товары для применения акции (2 шт. не по 0.01)
	Если количествоТоваровУчаствующихВАкцииВДокументе < 2 Тогда
		// условия не выполняется - проверям/удаляем акционный товар
		количествоПоИндексу = ТабличнаяЧасть.Количество() - 1;
		Для iстрТЧ = 0 По количествоПоИндексу Цикл
			строкаТЧ = ТабличнаяЧасть.Получить(количествоПоИндексу - iстрТЧ);
			Если строкаТЧ.Цена = 0.01 И массивПодарочныхТоваров.Найти(строкаТЧ.Номенклатура) <> Неопределено Тогда
				ТабличнаяЧасть.Удалить(строкаТЧ);
			КонецЕсли;	
		КонецЦикла;				
		
		//++ Кузнецов С.А. - Проверим есть ли хотя бы один товар участвующий в акции -> Выведем сообщение, что существует акция - 21.03.2016
		Если количествоТоваровУчаствующихВАкцииВДокументе = 1 Тогда
			#Если Клиент  Тогда
				Сообщить("Предложите второй L-carnitine для срабатывания акции «При покупке 2-х упаковок L-carnitine от компании Red Star Labs вы получаете третью в подарок!»", СтатусСообщения.Важное);
			#ИначеЕсли Сервер Тогда
				Сообщить("Предложите второй L-carnitine для срабатывания акции «При покупке 2-х упаковок L-carnitine от компании Red Star Labs вы получаете третью в подарок!»", СтатусСообщения.Важное);
			#КонецЕсли	
		КонецЕсли;	
		//-- Кузнецов С.А. - 21.03.2016
				
		// Выходим из обработки т.к. не хватает количества для акции 
		Возврат;
	КонецЕсли;	
		
	// Условия выполнилось -> Обрабатываем подарки	
	
	// Зануляем автоматические скидки от объема
	Для Каждого стрТЧ Из ТабличнаяЧасть Цикл
		стрТЧ.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, Объект);
	КонецЦикла;		
	
	// Количество целых подарков (В нашем случае, по подарку на 2)
	количествоЦелыхПодарков = Цел(количествоТоваровУчаствующихВАкцииВДокументе/2);	
	
	// Удаляем лишнии подарки
	Если количествоЦелыхПодарков < количествоАкционныхТоваровВДокументе Тогда
		Пока количествоЦелыхПодарков <> количествоАкционныхТоваровВДокументе Цикл
			Если массивСтрокСАкционнымТоваром.Количество() > 0 Тогда
				Если массивСтрокСАкционнымТоваром[0].Количество = 1 Тогда
					ТабличнаяЧасть.Удалить(массивСтрокСАкционнымТоваром[0]);
				Иначе
					массивСтрокСАкционнымТоваром[0].Количество = массивСтрокСАкционнымТоваром[0].Количество - 1;
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(массивСтрокСАкционнымТоваром[0], Объект);
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(массивСтрокСАкционнымТоваром[0], Объект);					
				КонецЕсли;	
				количествоАкционныхТоваровВДокументе = количествоАкционныхТоваровВДокументе - 1;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
		
	// Определим сколько подарков еще возможно добавить в документ
	количествоОсталосьПредоставитьВПодарок = количествоЦелыхПодарков - количествоАкционныхТоваровВДокументе;
	
	// Выбор в подарок
	Если количествоОсталосьПредоставитьВПодарок > 0 Тогда
		
		// Подготавливаем таблицу с подарками 
		таблицаПодаров = Новый ТаблицаЗначений;
		таблицаПодаров.Колонки.Добавить("Номенклатура");
		таблицаПодаров.Колонки.Добавить("Качество");
		таблицаПодаров.Колонки.Добавить("ЕдиницыИзмерения");
		таблицаПодаров.Колонки.Добавить("Коэффициент");
		
		Для Каждого стрМассиваТоваровУчаствующихВАкции Из массивТоваровУчаствующихВАкции Цикл			
			// Получим единицу измерения
			единицыИзмерения_БЕпоКл = Справочники.ЕдиницыИзмерения.НайтиПоРеквизиту("ЕдиницаПоКлассификатору" , базоваяЕдиницаПоКлассификатору, , стрМассиваТоваровУчаствующихВАкции);
			Если Не единицыИзмерения_БЕпоКл.Пустая() Тогда
				новСтрТаблицыПодаров = таблицаПодаров.Добавить();
				новСтрТаблицыПодаров.Номенклатура = стрМассиваТоваровУчаствующихВАкции; 
				новСтрТаблицыПодаров.Качество = Справочники.Качество.Новый;				
				новСтрТаблицыПодаров.ЕдиницыИзмерения = единицыИзмерения_БЕпоКл;
				новСтрТаблицыПодаров.Коэффициент = единицыИзмерения_БЕпоКл.Коэффициент;
			КонецЕсли;
		КонецЦикла;
		
		Пока количествоОсталосьПредоставитьВПодарок <> 0 Цикл
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = таблицаПодаров.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;			
			КонецЦикла;
			
			// Попробуем найти строки в документе
			СтруктураОтбора = Новый Структура();
			СтруктураОтбора.Вставить("Номенклатура", Выбор.Номенклатура);
			СтруктураОтбора.Вставить("ЕдиницаИзмерения", Выбор.ЕдиницыИзмерения);
			СтруктураОтбора.Вставить("Качество", Выбор.Качество);
			СтруктураОтбора.Вставить("Цена", 0.01);
			
			массивАкционныхСтрокПоОтбору = ТабличнаяЧасть.НайтиСтроки(СтруктураОтбора);
			
			// Добавляем или увеличиваем количество в строках с акционным товаром
			Если массивАкционныхСтрокПоОтбору.Количество() <> 0 Тогда
				НовСтр = массивАкционныхСтрокПоОтбору[0];
				НовСтр.Количество = массивАкционныхСтрокПоОтбору[0].Количество + 1;				
			Иначе				
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.Коэффициент = Выбор.Коэффициент;
				НовСтр.ЕдиницаИзмерения = Выбор.ЕдиницыИзмерения;
				НовСтр.СтавкаНДС = НовСтр.Номенклатура.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
			КонецЕсли;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			количествоОсталосьПредоставитьВПодарок = количествоОсталосьПредоставитьВПодарок - 1;
		КонецЦикла;	
		
	КонецЕсли;	
	
	ПереносаПродажнойСтоимостиНаДругиеТоварыЧека(ТабличнаяЧасть, Объект, массивТоваровУчаствующихВАкции, массивПодарочныхТоваров, базоваяЕдиницаПоКлассификатору);
	
КонецПроцедуры	

Процедура ПереносаПродажнойСтоимостиНаДругиеТоварыЧека(ТабличнаяЧасть, Объект, массивТоваровУчаствующихВАкции, массивПодарочныхТоваров, базоваяЕдиницаПоКлассификатору)
	
	// Определим общую сумму скидки 
	общаяСуммаСкидки = 0;
	Для Каждого стрТЧ Из ТабличнаяЧасть Цикл 
		Если стрТЧ.Цена = 0.01 
			И массивПодарочныхТоваров.Найти(стрТЧ.Номенклатура) <> Неопределено 
			И стрТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = базоваяЕдиницаПоКлассификатору Тогда
			общаяСуммаСкидки = общаяСуммаСкидки + стрТЧ.Сумма;
		КонецЕсли;	
	КонецЦикла;	
	
	// Вычтем из максимальной строки по сумме товара сумму общей скидки (Чтобы не было копеек)
	Если общаяСуммаСкидки > 0 Тогда
		
		// Сортируем по убыванию
		ТабличнаяЧасть.Сортировать("Сумма Убыв");
		
		// уменьшаем на общую сумму скидки из сумм товаров участвующих в акции
		Для Каждого стрТЧ Из ТабличнаяЧасть Цикл
			
			Если стрТЧ.Цена <> 0.01 
				И массивТоваровУчаствующихВАкции.Найти(стрТЧ.Номенклатура) <> Неопределено 
				И стрТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = базоваяЕдиницаПоКлассификатору Тогда
				
				Если стрТЧ.Сумма > общаяСуммаСкидки Тогда
					стрТЧ.Цена	= стрТЧ.Цена - общаяСуммаСкидки;
					общаяСуммаСкидки = 0; 
				ИначеЕсли стрТЧ.Сумма = общаяСуммаСкидки Тогда
					стрТЧ.Цена =  0.01;
					общаяСуммаСкидки = 0.01;						
				Иначе	
					стрТЧ.Цена = 0.01;
					общаяСуммаСкидки = общаяСуммаСкидки - стрТЧ.Цена + 0.01;						
				КонецЕсли;						
				
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, Объект);				
				
				Если общаяСуммаСкидки = 0 Тогда
					Прервать;	
				КонецЕсли;				
			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры	
//-- Кузнецов С.А. - 16.03.2016


///////////////////////////////////////////////////////
// Проверка и применения акций из справочника "Акции" 

//++ Кузнецов С.А. - Добавление типа акции "ФИКСИРОВАННАЯ ЦЕНА" - 26.04.2016
//++ Кузнецов С.А. - Добавление типа акции "ПОДАРОК" - 17.05.2016
Процедура ПроверкаПримененияАкций(ТабличнаяЧасть, Объект) Экспорт
	
	// Отбираем акцию по дате
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Акции.Ссылка КАК Акция
	|ИЗ
	|	Справочник.Акции КАК Акции
	|ГДЕ
	|	НЕ Акции.ПометкаУдаления
	|	И Акции.ДатаНачала <= &ДатаПроверки
	|	И (Акции.ДатаОкончания >= &ДатаПроверки
	|			ИЛИ Акции.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Акции.ПриоритетАкции");
	
	Запрос.УстановитьПараметр("ДатаПроверки", Объект.Дата);						 	
	выгрузкаАкцийПодходящихПоДате = Запрос.Выполнить().Выгрузить();
	
	// Удалим те, у которых не выполняются условия применения акции 
	количествоАкцийПодходящихПоДате = выгрузкаАкцийПодходящихПоДате.Количество(); 
	Для i = 1 по количествоАкцийПодходящихПоДате Цикл
		стрАкцииВТаблице = выгрузкаАкцийПодходящихПоДате[количествоАкцийПодходящихПоДате-1];
		
		Если стрАкцииВТаблице.Акция.УсловияПримененияАкции.Количество() > 0 Тогда		
			
			// Проверяем выполнениие условий 
			результатПроверкиПрименения = ПроверитьВыполнениеУсловийПримененияАкции(стрАкцииВТаблице.Акция.УсловияПримененияАкции.ВыгрузитьКолонку("УсловиеПримененияАкции"), ТабличнаяЧасть);
					
			Если Не результатПроверкиПрименения Тогда				
				// Проверим нет ли в чеке подарков и удалим их
				ПроверитьИУдалитьПодарки(стрАкцииВТаблице.Акция, ТабличнаяЧасть);
				
				выгрузкаАкцийПодходящихПоДате.Удалить(стрАкцииВТаблице);
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		// Проверим корректность настройки акций		
		Если стрАкцииВТаблице.Акция.ТипАкции = ПредопределенноеЗначение("Перечисление.ТипыАкций.ФиксированнаяЦена") Тогда
			вДокументеЕстьАкционныеТовары = Ложь;
			Для Каждого стрАТ Из стрАкцииВТаблице.Акция.АкционныеТовары Цикл
				Если ТабличнаяЧасть.Найти(стрАТ.Номенклатура, "Номенклатура") <> Неопределено Тогда
					вДокументеЕстьАкционныеТовары = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;			
			Если Не вДокументеЕстьАкционныеТовары Тогда
				выгрузкаАкцийПодходящихПоДате.Удалить(стрАкцииВТаблице);
			КонецЕсли;	
		КонецЕсли;		
	КонецЦикла;	
	
	
	// Если есть акции к применению -> применяем в документе 
	Если выгрузкаАкцийПодходящихПоДате.Количество() > 0 Тогда
		// акции для применения есть, обрабатываем самую приоритетную
		акцияДляПрименения = выгрузкаАкцийПодходящихПоДате[0].Акция; 
		
		Если акцияДляПрименения.ТипАкции = ПредопределенноеЗначение("Перечисление.ТипыАкций.ФиксированнаяЦена") Тогда
			// Тип акции = "ФИКСИРОВАННАЯ ЦЕНА"
			
			АкционныеТоварыТекАкции = акцияДляПрименения.АкционныеТовары;
			
			// Определим сумму без скидок до изменения данных по акционным товарам
			суммаДокументаБезСкидокДо = Ценообразование.ПолучитьСуммуДокументаБезСкидки(ТабличнаяЧасть);
			
			// Проходим по ТЧ документа и проверяем/применяем акцию для акционного товара
			Для Каждого стрТЧ_Товары Из ТабличнаяЧасть Цикл
				
				стрТовараУчаствующегоВАкции = АкционныеТоварыТекАкции.Найти(стрТЧ_Товары.Номенклатура, "Номенклатура");
				Если стрТовараУчаствующегоВАкции <> Неопределено Тогда
					// Товар является акционным				
					стрТЧ_Товары.Цена = стрТовараУчаствующегоВАкции.Цена;
					стрТЧ_Товары.ПроцентАвтоматическихСкидок = 0;					
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ_Товары, Объект);
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ_Товары, Объект);
				КонецЕсли;				
			КонецЦикла;	
			
			// Определим сумму без скидок после изменения данных по акционным товарам
			суммаДокументаБезСкидокПосле = Ценообразование.ПолучитьСуммуДокументаБезСкидки(ТабличнаяЧасть);
			
			// Необходимо еще раз пересчитать автоматические скидки (Изменилась общая сумма) 
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ВидРеализации"                      , Перечисления.ВидыСкидок.Оптовая);
			СтруктураПараметров.Вставить("СуммаДокумента"                     , суммаДокументаБезСкидокПосле);
			СтруктураПараметров.Вставить("Карта"                              , Объект.ДисконтнаяКарта);
			СтруктураПараметров.Вставить("УчитыватьНДС"                       , Объект.УчитыватьНДС);
			СтруктураПараметров.Вставить("СуммаВключаетНДС"                   , Объект.СуммаВключаетНДС);
			СтруктураПараметров.Вставить("ВалютаРегламентированногоУчета"     , Константы.ВалютаРегламентированногоУчета);
			мУчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(Объект.Ссылка.Пустая(), ТекущаяДата(), Объект.Дата), Ложь);
			СтруктураПараметров.Вставить("УчетнаяПолитика"                    , мУчетнаяПолитика);
			
			мСписокФильтров = УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(
			ПланыВидовХарактеристик.ПраваПользователей.НеОтпускатьТоварСЦенойНижеОпределенногоТипа,
			Неопределено);
			
			мМинимальныеЦены = Неопределено;
			
			ОбработкаТабличныхЧастей.РассчитатьСкидкиПриПродаже(Объект, ТабличнаяЧасть, СтруктураПараметров, мМинимальныеЦены, мСписокФильтров);
			
			// Необходимо для акционных товаров убрать скидку автоматическую
			Для Каждого стрТЧ_Товары Из ТабличнаяЧасть Цикл			
				стрТовараУчаствующегоВАкции = АкционныеТоварыТекАкции.Найти(стрТЧ_Товары.Номенклатура, "Номенклатура");
				Если стрТовараУчаствующегоВАкции <> Неопределено Тогда
					// Товар является акционным				
					стрТЧ_Товары.Цена = стрТовараУчаствующегоВАкции.Цена;
					стрТЧ_Товары.ПроцентАвтоматическихСкидок = 0;
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ_Товары, Объект);
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ_Товары, Объект);
				КонецЕсли;				
			КонецЦикла;	
			
		ИначеЕсли акцияДляПрименения.ТипАкции = ПредопределенноеЗначение("Перечисление.ТипыАкций.Подарок") Тогда
			// Тип акции = "ПОДАРОК"
			
			Если акцияДляПрименения.КоличествоПодарковКратноКомплектамПокупки тогда
				// ПРИ НЕОГРАНИЧЕННОМ КОЛИЧЕСТВЕ ПОДАРКОВ
				
				// Технические массивы для обработки
				массивТоваровКомплектаПокупки = Новый Массив;
				массивПодарочныхТоваров = Новый Массив;
						
				// считаем кратность полных комплектов для предоставления подарков (Сколько целых комплектов - столько подарков дарим)
				количествоПолныхКомплектовПокупкиДляПредоставленияПодарка = Неопределено;
				Для Каждого стрКП Из акцияДляПрименения.КомплектПокупки Цикл
					
					количествоНоменклатурыВДокументе = 0;
					строкиДокументаСНоменклатурой = ТабличнаяЧасть.НайтиСтроки(Новый Структура("Номенклатура", стрКП.Номенклатура));
					Для Каждого стрНомДокумента Из строкиДокументаСНоменклатурой Цикл
						Если стрНомДокумента.Цена <> 0.01 Тогда // (Считаем, что 0.01 - это подарок)
							количествоНоменклатурыВДокументе = количествоНоменклатурыВДокументе + стрНомДокумента.Количество*стрНомДокумента.Коэффициент;
							Если массивТоваровКомплектаПокупки.Найти(стрНомДокумента.Номенклатура) = Неопределено Тогда 
								массивТоваровКомплектаПокупки.Добавить(стрНомДокумента.Номенклатура);
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;	
					
					Если количествоПолныхКомплектовПокупкиДляПредоставленияПодарка = Неопределено Тогда
						количествоПолныхКомплектовПокупкиДляПредоставленияПодарка = количествоНоменклатурыВДокументе/стрКП.Количество;
					Иначе	
						количествоПолныхКомплектовПокупкиДляПредоставленияПодарка = Мин(количествоНоменклатурыВДокументе/стрКП.Количество, количествоПолныхКомплектовПокупкиДляПредоставленияПодарка);
					КонецЕсли;
					
				КонецЦикла;	
				
			    // Перезаполняем цены и делаем количество по 1 у номенклатур массива товаров комплекта покупки акции  
				максимальныйИндексПроверки = ТабличнаяЧасть.Количество() - 1;
				Для iСтрокиПервоначальнойТЧ = 0 По максимальныйИндексПроверки Цикл 
					стрТЧ = ТабличнаяЧасть[iСтрокиПервоначальнойТЧ];
					Если стрТЧ.Цена <> 0.01 И массивТоваровКомплектаПокупки.Найти(стрТЧ.Номенклатура) <> Неопределено Тогда
						
						// Для всех (не подарочных) товаров обновляем цены, т.к. потом вычитаются копейки
						стрТЧ.Цена = Ценообразование.ПолучитьЦенуНоменклатуры(стрТЧ.Номенклатура, ,
						Объект.ТипЦен, Объект.Дата, стрТЧ.ЕдиницаИзмерения,
						Объект.ВалютаДокумента, Объект.КурсВзаиморасчетов, Объект.КратностьВзаиморасчетов);
						
						ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ, Объект);
						ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, Объект);
						
						// Разбивваем строку по 1 шт. 
						Если стрТЧ.Количество > 1 Тогда				
							количествоНеобходимыхДопСтрок = стрТЧ.Количество - 1;
							стрТЧ.Количество = 1;
							ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ, Объект);
							ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, Объект);
							
							Для iНовСтрок = 1 по количествоНеобходимыхДопСтрок Цикл
								новСтрокаДока = ТабличнаяЧасть.Добавить();
								ЗаполнитьЗначенияСвойств(новСтрокаДока,стрТЧ);	
							КонецЦикла;	
						КонецЕсли;				
					КонецЕсли;	
				КонецЦикла;					
				
				// Определим сколько необходимо подарков  				
				тзПодарки = акцияДляПрименения.АкционныеТовары.Выгрузить();
				Для Каждого стрПодарка Из тзПодарки Цикл
					стрПодарка.Количество = стрПодарка.Количество*количествоПолныхКомплектовПокупкиДляПредоставленияПодарка;
					Если массивПодарочныхТоваров.Найти(стрПодарка.Номенклатура) = Неопределено Тогда
						массивПодарочныхТоваров.Добавить(стрПодарка.Номенклатура);
					КонецЕсли;
				КонецЦикла;	
				
				// Определим сколько сейчас подарков в документе  
				тзПодарки.Колонки.Добавить("КоличествоВДокументе", Новый ОписаниеТипов("Число"));
				тзПодарки.Колонки.Добавить("Коэффициент");
				Для Каждого стрПодаркиВДокументе Из акцияДляПрименения.АкционныеТовары Цикл 
					строкиВДокументеСАкционнымТоваром = ТабличнаяЧасть.НайтиСтроки(Новый Структура("Номенклатура, Цена", стрПодаркиВДокументе.Номенклатура, 0.01));
					Для Каждого стрПодаркаВДокументе Из строкиВДокументеСАкционнымТоваром Цикл
						строкаТЗПодарковВДокументе = тзПодарки.Найти(стрПодаркаВДокументе.Номенклатура, "Номенклатура");
						Если строкаТЗПодарковВДокументе = Неопределено Тогда
							строкаТЗПодарковВДокументе = тзПодарки.Добавить();
							строкаТЗПодарковВДокументе.Номенклатура = стрПодаркаВДокументе.Номенклатура;
							строкаТЗПодарковВДокументе.КоличествоВДокументе = строкаТЗПодарковВДокументе.КоличествоВДокументе + стрПодаркаВДокументе.Количество*строкаТЗПодарковВДокументе.ЕдиницаИзмерения.Коэффициент;
							строкаТЗПодарковВДокументе.Коэффициент = строкаТЗПодарковВДокументе.ЕдиницаИзмерения.Коэффициент;
						Иначе 
							строкаТЗПодарковВДокументе.КоличествоВДокументе = строкаТЗПодарковВДокументе.КоличествоВДокументе + стрПодаркаВДокументе.Количество*строкаТЗПодарковВДокументе.ЕдиницаИзмерения.Коэффициент;
							строкаТЗПодарковВДокументе.Коэффициент = строкаТЗПодарковВДокументе.ЕдиницаИзмерения.Коэффициент;
						КонецЕсли;	
					КонецЦикла;	
				КонецЦикла;	
				
				// Удалим лишнии подарки
				Для Каждого стрПодарки Из тзПодарки Цикл
					Если стрПодарки.КоличествоВДокументе > стрПодарки.Количество Тогда
						Пока стрПодарки.КоличествоВДокументе > стрПодарки.Количество Цикл
							строкаСПодаркомВДокументе = ТабличнаяЧасть.НайтиСтроки(Новый Структура("Номенклатура, Цена", стрПодарки.Номенклатура, 0.01));
							Если строкаСПодаркомВДокументе[0].Количество = 1 Тогда
								ТабличнаяЧасть.Удалить(строкаСПодаркомВДокументе[0]);
							Иначе
								строкаСПодаркомВДокументе[0].Количество = строкаСПодаркомВДокументе[0].Количество - 1;
							КонецЕсли;	
							стрПодарки.КоличествоВДокументе = стрПодарки.КоличествоВДокументе - 1;
						КонецЦикла;							
					КонецЕсли;	
				КонецЦикла;	
				
				// Выбираем подарки
				Для Каждого стрПодарки Из тзПодарки Цикл
					Если стрПодарки.КоличествоВДокументе < стрПодарки.Количество Тогда
						
						количествоОсталосьПредоставитьВПодарок = стрПодарки.Количество - стрПодарки.КоличествоВДокументе;	
						
						Пока количествоОсталосьПредоставитьВПодарок <> 0 Цикл
							Выбор = Неопределено;
							Пока Выбор=Неопределено Цикл
								Выбор = тзПодарки.ВыбратьСтроку("Выберите товар в подарок");
								Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;			
							КонецЦикла;
							
							// Попробуем найти строки в документе
							СтруктураОтбора = Новый Структура();
							СтруктураОтбора.Вставить("Номенклатура", Выбор.Номенклатура);
							СтруктураОтбора.Вставить("ЕдиницаИзмерения", Выбор.ЕдиницаИзмерения);
							СтруктураОтбора.Вставить("Качество", Выбор.Качество);
							СтруктураОтбора.Вставить("Цена", 0.01);
							
							массивАкционныхСтрокПоОтбору = ТабличнаяЧасть.НайтиСтроки(СтруктураОтбора);
							
							// Добавляем или увеличиваем количество в строках с акционным товаром
							Если массивАкционныхСтрокПоОтбору.Количество() <> 0 Тогда
								НовСтр = массивАкционныхСтрокПоОтбору[0];
								НовСтр.Количество = массивАкционныхСтрокПоОтбору[0].Количество + 1;				
							Иначе				
								НовСтр = ТабличнаяЧасть.Добавить();
								НовСтр.Номенклатура = Выбор.Номенклатура;
								НовСтр.Количество = 1;
								НовСтр.Коэффициент = Выбор.ЕдиницаИзмерения.Коэффициент;
								НовСтр.ЕдиницаИзмерения = Выбор.ЕдиницаИзмерения;
								НовСтр.СтавкаНДС = НовСтр.Номенклатура.СтавкаНДС;
								НовСтр.СуммаНДС = 0;
								НовСтр.Сумма = 0.01;
								НовСтр.Цена = 0.01;
								НовСтр.Качество = Выбор.Качество;
							КонецЕсли;
							
							ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
							ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
							
							количествоОсталосьПредоставитьВПодарок = количествоОсталосьПредоставитьВПодарок - 1;
						КонецЦикла;
						
					КонецЕсли;	
				КонецЦикла;					
				
				// Переносим акционные цены на другие товары 
				РаспределениеСуммыПодарков(ТабличнаяЧасть, Объект, массивТоваровКомплектаПокупки, массивПодарочныхТоваров);

				// Определим сумму без скидок после изменения данных по акционным товарам
				суммаДокументаБезСкидокПосле = Ценообразование.ПолучитьСуммуДокументаБезСкидки(ТабличнаяЧасть);
				
				// Необходимо еще раз пересчитать автоматические скидки (Изменилась общая сумма) 
				СтруктураПараметров = Новый Структура;
				СтруктураПараметров.Вставить("ВидРеализации"                      , Перечисления.ВидыСкидок.Оптовая);
				СтруктураПараметров.Вставить("СуммаДокумента"                     , суммаДокументаБезСкидокПосле);
				СтруктураПараметров.Вставить("Карта"                              , Объект.ДисконтнаяКарта);
				СтруктураПараметров.Вставить("УчитыватьНДС"                       , Объект.УчитыватьНДС);
				СтруктураПараметров.Вставить("СуммаВключаетНДС"                   , Объект.СуммаВключаетНДС);
				СтруктураПараметров.Вставить("ВалютаРегламентированногоУчета"     , Константы.ВалютаРегламентированногоУчета);
				мУчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(?(Объект.Ссылка.Пустая(), ТекущаяДата(), Объект.Дата), Ложь);
				СтруктураПараметров.Вставить("УчетнаяПолитика"                    , мУчетнаяПолитика);
				
				мСписокФильтров = УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(
				ПланыВидовХарактеристик.ПраваПользователей.НеОтпускатьТоварСЦенойНижеОпределенногоТипа,
				Неопределено);
				
				мМинимальныеЦены = Неопределено;
				
				ОбработкаТабличныхЧастей.РассчитатьСкидкиПриПродаже(Объект, ТабличнаяЧасть, СтруктураПараметров, мМинимальныеЦены, мСписокФильтров);
				
				// Необходимо для акционных товаров убрать скидку автоматическую
				Для Каждого стрТЧ_Товары Из ТабличнаяЧасть Цикл			
					стрТовараКомплектаПокупки = массивТоваровКомплектаПокупки.Найти(стрТЧ_Товары.Номенклатура);
					стрПодарков = массивПодарочныхТоваров.Найти(стрТЧ_Товары.Номенклатура);
					Если стрТовараКомплектаПокупки <> Неопределено 
						ИЛИ стрПодарков <> Неопределено Тогда
						стрТЧ_Товары.ПроцентАвтоматическихСкидок = 0;
						ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ_Товары, Объект);
						ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ_Товары, Объект);
					КонецЕсли;				
				КонецЦикла;	
				
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

Функция ПроверитьВыполнениеУсловийПримененияАкции(МассивУсловийПримененияАкции, ТабличнаяЧастьДокумента)
	
	результатПроверки = Истина;	
	
	Для Каждого условиеПА Из МассивУсловийПримененияАкции Цикл
		Если условиеПА.Тип = ПредопределенноеЗначение("Перечисление.ТипыУсловийПримененияАкций.КоличествоПозиций") Тогда
			// Условие с типом "КОЛИЧЕСТВО ПОЗИЦИЙ"	
			
			// Определим количество данной номенклатуры
			строкиДокументаСНоменклатурой = ТабличнаяЧастьДокумента.НайтиСтроки(Новый Структура("Номенклатура", условиеПА.Номенклатура));
			Если строкиДокументаСНоменклатурой.Количество() = 0 Тогда				
				// Номенклатура не найдена - условие не выполнено -> акция не применяется
				результатПроверки = Ложь;
				Прервать;
			КонецЕсли;
			
			количествоНоменклатурыВДокументе = 0;
			Для Каждого стрНомДокумента Из строкиДокументаСНоменклатурой Цикл
				Если стрНомДокумента.Цена <> 0.01 Тогда // (Считаем, что 0.01 - это подарок)
					количествоНоменклатурыВДокументе = количествоНоменклатурыВДокументе + стрНомДокумента.Количество*стрНомДокумента.Коэффициент;
				КонецЕсли;
			КонецЦикла;	
			
			Если условиеПА.ВидСравнения = ПредопределенноеЗначение("Перечисление.ВидыСравнения.Больше") Тогда
				результатПроверки = количествоНоменклатурыВДокументе > условиеПА.Количество
			ИначеЕсли условиеПА.ВидСравнения = ПредопределенноеЗначение("Перечисление.ВидыСравнения.Меньше") Тогда
				результатПроверки = количествоНоменклатурыВДокументе < условиеПА.Количество				
			КонецЕсли;					
			
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат результатПроверки;
	
КонецФункции		

Процедура РаспределениеСуммыПодарков(ТабличнаяЧасть, Объект, массивТоваровУчаствующихВАкции, массивПодарочныхТоваров)
	
	// Определим общую сумму скидки 
	общаяСуммаСкидки = 0;
	Для Каждого стрТЧ Из ТабличнаяЧасть Цикл 
		Если стрТЧ.Цена = 0.01 
			И массивПодарочныхТоваров.Найти(стрТЧ.Номенклатура) <> Неопределено Тогда
			общаяСуммаСкидки = общаяСуммаСкидки + стрТЧ.Сумма;
		КонецЕсли;	
	КонецЦикла;	
	
	// Вычтем из максимальной строки по сумме товара сумму общей скидки (Чтобы не было копеек)
	Если общаяСуммаСкидки > 0 Тогда
		
		// Сортируем по убыванию
		ТабличнаяЧасть.Сортировать("Сумма Убыв");
		
		// уменьшаем на общую сумму скидки из сумм товаров участвующих в акции
		Для Каждого стрТЧ Из ТабличнаяЧасть Цикл
			
			Если стрТЧ.Цена <> 0.01 
				И массивТоваровУчаствующихВАкции.Найти(стрТЧ.Номенклатура) <> Неопределено Тогда
				
				Если стрТЧ.Сумма > общаяСуммаСкидки Тогда
					стрТЧ.Цена	= стрТЧ.Цена - общаяСуммаСкидки;
					общаяСуммаСкидки = 0; 
				ИначеЕсли стрТЧ.Сумма = общаяСуммаСкидки Тогда
					стрТЧ.Цена =  0.01;
					общаяСуммаСкидки = 0.01;						
				Иначе	
					стрТЧ.Цена = 0.01;
					общаяСуммаСкидки = общаяСуммаСкидки - стрТЧ.Цена + 0.01;						
				КонецЕсли;						
				
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(стрТЧ, Объект);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, Объект);				
				
				Если общаяСуммаСкидки = 0 Тогда
					Прервать;	
				КонецЕсли;				
			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьИУдалитьПодарки(Акция, ТабличнаяЧастьДокумента)
	
	Если Акция.ТипАкции = ПредопределенноеЗначение("Перечисление.ТипыАкций.Подарок")Тогда		
		Для Каждого стрПодарка Из Акция.АкционныеТовары Цикл
			строкиСПодаркомВДокументе = ТабличнаяЧастьДокумента.НайтиСтроки(Новый Структура("Номенклатура, Цена", стрПодарка.Номенклатура, 0.01));
			Для Каждого стрПодаркаВДокументе Из строкиСПодаркомВДокументе Цикл
				ТабличнаяЧастьДокумента.Удалить(стрПодаркаВДокументе);
			КонецЦикла;	
		КонецЦикла;			
	КонецЕсли;	
	
КонецПроцедуры	
//-- Кузнецов С.А. - 26.04.2016 / 17.05.2016

Процедура ПрименитьАкцию (СписокНом,СписокДляВыбора,ТабличнаяЧасть,ИдентификаторМА,КоэфПодарка,Объект)
	
	Если ТипЗнч(СписокНом)=Тип("СправочникСсылка.Номенклатура") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	Ном.Ссылка КАК Номенклатура
		             |ИЗ
		             |	Справочник.Номенклатура КАК Ном
		             |ГДЕ
		             |	НЕ Ном.ЭтоГруппа
		             |	И НЕ Ном.ПометкаУдаления
		             |	И Ном.Ссылка В ИЕРАРХИИ(&ТекГруппа)";
		Запрос.УстановитьПараметр("ТекГруппа",СписокНом);
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		СписокНом = Новый СписокЗначений;
		Выб = Рез.Выбрать();
		Пока Выб.Следующий() Цикл
			СписокНом.Добавить(Выб.Номенклатура);
		КонецЦикла;
	КонецЕсли;
	   
	ТабОстатковПодарки = ПолучитьСвободныйОстаток(СписокДляВыбора.ВыгрузитьЗначения(),Объект,ТабличнаяЧасть);
	Если ТабОстатковПодарки.Количество()= 0 Тогда
		Возврат;
	КонецЕсли;
		
	ТМПТаб = ТабличнаяЧасть.Выгрузить();
	ТМПТаб.Свернуть ("Номенклатура,Коэффициент,ЕдиницаИзмерения,СтавкаНДС,ПримененнаяАкцияSailPlay","Количество");

	упак = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778");
	СколькоВхождений=0;
	Для Каждого ст из ТМПТаб Цикл
		Если СписокНом.НайтиПоЗначению(ст.Номенклатура) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если ст.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = упак Тогда
			продолжить;
		КонецЕсли;
		
		//Если СокрЛП(ст.ПримененнаяАкцияSailPlay) = ИдентификаторМА  Тогда 
		//	Продолжить;
		//КонецЕсли;
		Если ЗначениеЗаполнено(ст.ПримененнаяАкцияSailPlay) Тогда 
			Продолжить;
		КонецЕсли;

						
		СколькоВхождений = СколькоВхождений+ст.Количество;
		
	КонецЦикла;
	
	СколькоПодарков = Цел(СколькоВхождений/КоэфПодарка);
	
	Если СколькоПодарков = 0 Тогда 
		к=0;
		Пока к<ТабличнаяЧасть.Количество() Цикл
			Если (СокрЛП(ТабличнаяЧасть[к].ПримененнаяАкцияSailPlay) = ИдентификаторМА) И (ПоискВРегистреМА(ТабличнаяЧасть[к].Номенклатура)=Ложь) Тогда
				ТабличнаяЧасть.Удалить(к);
				продолжить;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПримененнаяАкцияSailPlay", ИдентификаторМА);
	
	НайденныеПодарки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);  
	УжеПодарки = 0;
	Для Каждого под из НайденныеПодарки Цикл
		УжеПодарки = УжеПодарки+под.Количество;
	КонецЦикла;
	СколькоПодарков = СколькоПодарков - УжеПодарки;
	
	Если СколькоПодарков = 0 Тогда Возврат КонецЕсли;
	
	Если СколькоПодарков<0 Тогда
		СколькоПодарков = СколькоПодарков*-1;
		п=0;
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СокрЛП(стр.ПримененнаяАкцияSailPlay) = ИдентификаторМА Тогда 
				ТабличнаяЧасть.Удалить(стр);
				п=п+1;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	
	п=0;
	Пока п<>СколькоПодарков Цикл
		Если ТабОстатковПодарки.Количество()= 0 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого стр из ТабличнаяЧасть Цикл
			Если п=СколькоПодарков Тогда
				прервать;
			КонецЕсли;
			
			Если СписокНом.НайтиПоЗначению(стр.Номенклатура) = Неопределено Тогда
				продолжить;
			КонецЕсли;
			
			Если СокрЛП(стр.ПримененнаяАкцияSailPlay) = ИдентификаторМА Тогда продолжить КонецЕсли;
			
			Если ТабОстатковПодарки.Количество()= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Выбор = Неопределено;
			Пока Выбор=Неопределено Цикл
				Выбор = ТабОстатковПодарки.ВыбратьСтроку("Выберите товар в подарок");
				Если Выбор = Неопределено Тогда Предупреждение ("Вы не выбрали товар в подарок! Это обязательно!") КонецЕсли;
				
			КонецЦикла;
			
			Выбор.Свободный = Выбор.Свободный-1;
			
			
			ТекСтр = ТабличнаяЧасть.Найти(Выбор.Номенклатура,"Номенклатура");
			Если (ТекСтр<>Неопределено) И (Выбор.Качество = ТекСтр.Качество) Тогда
				Если СокрЛП(ТекСтр.ПримененнаяАкцияSailPlay) = ИдентификаторМА Тогда
					ТекСтр.Количество = ТекСтр.Количество+1;
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
				Иначе
					НовСтр = ТабличнаяЧасть.Добавить();
					НовСтр.Номенклатура = Выбор.Номенклатура;
					НовСтр.Количество = 1;
					НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
					НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
					НовСтр.СтавкаНДС = стр.СтавкаНДС;
					НовСтр.СуммаНДС = 0;
					НовСтр.Сумма = 0.01;
					НовСтр.Цена = 0.01;
					НовСтр.Качество = Выбор.Качество;
					НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
					
				КонецЕсли;	
			Иначе
				НовСтр = ТабличнаяЧасть.Добавить();
				НовСтр.Номенклатура = Выбор.Номенклатура;
				НовСтр.Количество = 1;
				НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
				НовСтр.Коэффициент = НовСтр.ЕдиницаИзмерения.Коэффициент;
				НовСтр.СтавкаНДС = стр.СтавкаНДС;
				НовСтр.СуммаНДС = 0;
				НовСтр.Сумма = 0.01;
				НовСтр.Цена = 0.01;
				НовСтр.Качество = Выбор.Качество;
				НовСтр.ПримененнаяАкцияSailPlay = ИдентификаторМА;
			КонецЕсли;
			п = п+1;
			
			к=0;
			Пока к<ТабОстатковПодарки.Количество() Цикл
				Если ТабОстатковПодарки[к].Свободный = 0 Тогда
					ТабОстатковПодарки.Удалить(к);
					продолжить;
				КонецЕсли;
				к=к+1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;

	
КонецПроцедуры

Процедура ПрименитьСкидкуНаКомплект (Табб,Ном,Объект,ТабличнаяЧасть,НеКоплект,лСкидка,лВозврат) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.Количество КАК КолПодарков
	               |ПОМЕСТИТЬ ТЗКолПод
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура = &Ном
				   |    И Табл.Качество = &Новый
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Табл.КлючСтроки,
	               |	Табл.Номенклатура,
	               |	Табл.Цена,
	               |	Табл.Количество
	               |ПОМЕСТИТЬ ТЗхЗ
	               |ИЗ
	               |	&Таб КАК Табл
	               |ГДЕ
	               |	Табл.Номенклатура = &Ном
				   |    И Табл.Качество = &Новый
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество,
	               |	СУММА(ТзКолПод.КолПодарков) КАК СколькоПод
	               |ИЗ
	               |	ТЗхЗ КАК ТЗхЗ,
	               |	ТЗКолПод КАК ТзКолПод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЗхЗ.КлючСтроки,
	               |	ТЗхЗ.Номенклатура,
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТЗхЗ.Цена,
	               |	ТЗхЗ.Количество";
				   
	               	
	Запрос.УстановитьПараметр("Таб",Табб);
	Запрос.УстановитьПараметр("Новый",Справочники.Качество.Новый);
	
	Если ТипЗнч(Ном)=Тип("СправочникСсылка.Номенклатура") Тогда
		Запрос.УстановитьПараметр("Ном",Ном);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Табл.Номенклатура = &Ном","Табл.Номенклатура В (&Ном)");
		Запрос.УстановитьПараметр("Ном",Ном.ВыгрузитьЗначения());
	КонецЕсли;	
	
	ТМПТаб = Запрос.Выполнить().Выгрузить();
		
	Если ТМПТаб.Количество()=0 Тогда
		лВозврат = Истина;
		Возврат;
	КонецЕсли;
	
	Если НеКоплект Тогда
		Если ТМПТаб[0].СколькоПод = 1 Тогда
			КолПодарков = ТМПТаб[0].СколькоПод;
		Иначе
			КолПодарков = Цел(ТМПТаб[0].СколькоПод/2);
		КонецЕсли;
	Иначе
		КолПодарков = ТМПТаб[0].СколькоПод;
	КонецЕсли;
	Если (КолПодарков<1) ИЛИ (КолПодарков=Null) Тогда 
		лВозврат = Истина;
		Возврат 
	КонецЕсли;
	
	Для Каждого ст из ТМПТаб Цикл
		ТекСтр = ТабличнаяЧасть[ст.КлючСтроки];
		ТекСтр.ПроцентАвтоматическихСкидок = 0;
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		
		Если КолПодарков = 0 Тогда продолжить КонецЕсли;
		
		
		Если ТекСтр.Количество = КолПодарков Тогда
			КолПодарков = 0;
			ТекСтр.ПроцентАвтоматическихСкидок = лСкидка;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		ИначеЕсли ТекСтр.Количество > КолПодарков Тогда
			ТекСтр.Количество = ТекСтр.Количество - КолПодарков;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
			
			НовСтр = ТабличнаяЧасть.Добавить();
			НовСтр.Номенклатура = ТекСтр.Номенклатура;
			НовСтр.Количество = КолПодарков;
			НовСтр.ПроцентАвтоматическихСкидок = лСкидка;
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(НовСтр, Объект);
			ПриИзмененииНоменклатурыТоваров(НовСтр,Объект);
			НовСтр.Качество = ТекСтр.Качество;
			
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, Объект);
			
			КолПодарков = 0;
		ИначеЕсли ТекСтр.Количество < КолПодарков Тогда
			КолПодарков = КолПодарков - ТекСтр.Количество;
			ТекСтр.ПроцентАвтоматическихСкидок = лСкидка;
			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(ТекСтр, Объект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(ТекСтр, Объект);
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры