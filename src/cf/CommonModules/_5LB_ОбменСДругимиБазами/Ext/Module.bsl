#Область ОсновнаяПрограмма

Процедура _5LB_ПриЗаписиДокументаРегистрацияДляОбменаСДругимиБазами(Источник, Отказ) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Если //ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеТоваров") ИЛИ
		//ТипЗнч(Источник) = Тип("ДокументОбъект.ОприходованиеТоваров") ИЛИ
		//ТипЗнч(Источник) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") ИЛИ //12.09.2017, Юра
		ТипЗнч(Источник) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") ИЛИ
		ТипЗнч(Источник) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") ИЛИ 
		ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") ИЛИ
		ТипЗнч(Источник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда 	
		//12.09.2017, Юра
		//Задача (Иванов Иван): не передавать в 1С:Бухгалтерию ОРП по складу "Павелецкая". //11.04.2017, Юра
		Если ТипЗнч(Источник) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") И ЗначениеЗаполнено(Источник.Склад) Тогда
			Если СОКРЛП(Источник.Склад.Код) = "570" Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		//Записываем факт изменения нашего документа:
		МенЗап = РегистрыСведений._5LB_РегистрацияПередачиДокументовВДругиеБазы.СоздатьМенеджерЗаписи();
		МенЗап.Документ = Источник.Ссылка;
		МенЗап.ДатаИзмененияДокумента = ТекущаяДата();
		МенЗап.Записать();
		
		//И сразу же асинхронно вызовем фоновое задание по передаче документов (если оно не работает на данный момент):
		КоличФЗ = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("ИмяМетода,Состояние","_5LB_ОбменСДругимиБазами._5LB_ПередачаДокументовВДругиеБазы",СостояниеФоновогоЗадания.Активно)).Количество();
		Если КоличФЗ = 0 Тогда
			ФоновыеЗадания.Выполнить("_5LB_ОбменСДругимиБазами._5LB_ПередачаДокументовВДругиеБазы",,Новый УникальныйИдентификатор,"Передача документов в другие базы");
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура _5LB_ПередачаДокументовВДругиеБазы() Экспорт
	Ошибка = Ложь;
	УстановитьПривилегированныйРежим(Истина);
	
	//Сначала проверим, что это рабочая база, а не копия. //13.09.2017, Юра
	//******************************************************************************************************
	Тест = Ложь; //Истина; //Ложь обязательно в рабочей базе *******************************************************
	//******************************************************************************************************
	Если НЕ Тест Тогда
		Если Найти(СтрокаСоединенияИнформационнойБазы(),"C81_UT") = 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//ПЛАН:
	//1. Просмотреть в регистре _5LB_РегистрацияПередачиДокументовВДругиеБазы документы, которые надо передавать
	//2. Передать данные в базы Бухгалтерии по COM-соединению (потому что не хотят менять конфигурации Бухгалтерии)
	//3. Записать в регистр дату передачи документа
	
	ЧтоДелаем = "Передача документов из УТ10 в другие базы";
	РТЗЖР = РежимТранзакцииЗаписиЖурналаРегистрации.Независимая;
	УЖР = УровеньЖурналаРегистрации.Ошибка;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.Документ,
	|	МАКСИМУМ(_5LB_РегистрацияПередачиДокументовВДругиеБазы.ДатаИзмененияДокумента) КАК ДатаИзмененияДокумента
	|ПОМЕСТИТЬ ПоследнееИзменениеДокумента
	|ИЗ
	|	РегистрСведений._5LB_РегистрацияПередачиДокументовВДругиеБазы КАК _5LB_РегистрацияПередачиДокументовВДругиеБазы
	//|ГДЕ
	//|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
	//|ГДЕ
	//|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.Документ.Дата > ДатаВремя(2017,10,1)
	//|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.ДатаИзмененияДокумента > ДатаВремя(2017,10,27)
	|
	|СГРУППИРОВАТЬ ПО
	|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследнееИзменениеДокумента.Документ КАК Документ,
	|	ПоследнееИзменениеДокумента.ДатаИзмененияДокумента КАК ДатаИзмененияДокумента,
	|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.ДатаПолученияВБазеПриемнике
	|ИЗ
	|	ПоследнееИзменениеДокумента КАК ПоследнееИзменениеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._5LB_РегистрацияПередачиДокументовВДругиеБазы КАК _5LB_РегистрацияПередачиДокументовВДругиеБазы
	|		ПО ПоследнееИзменениеДокумента.Документ = _5LB_РегистрацияПередачиДокументовВДругиеБазы.Документ
	|			И ПоследнееИзменениеДокумента.ДатаИзмененияДокумента = _5LB_РегистрацияПередачиДокументовВДругиеБазы.ДатаИзмененияДокумента
	|ГДЕ
	|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.ДатаПолученияВБазеПриемнике = ДАТАВРЕМЯ(1, 1, 1)";
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Бух5ЛБ  = Неопределено;
		БухНовЮЛ = Неопределено;
		БухТестИванов = Неопределено;
		Тест = Ложь;
		ПодключениеCOM(Бух5ЛБ,БухНовЮЛ,БухТестИванов,ЧтоДелаем,УЖР,РТЗЖР,Тест,Ошибка);
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КудаПередается = "";
		ТекДок = ВыборкаДетальныеЗаписи.Документ;
		Параметры = Новый Структура("Бух5ЛБ,БухНовЮЛ,БухТестИванов,КудаПередается,ТекДок,ЧтоДелаем,РТЗЖР,УЖР",Бух5ЛБ,БухНовЮЛ,БухТестИванов,КудаПередается,ТекДок,ЧтоДелаем,РТЗЖР,УЖР);
		ОпределитьТипПередать(Параметры,Ошибка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОпределитьТипПередать(Параметры,Ошибка) Экспорт
	
	Если ТипЗнч(Параметры.ТекДок.Ссылка)= Тип("ДокументСсылка.ОтчетОРозничныхПродажах") ИЛИ
		ТипЗнч(Параметры.ТекДок.Ссылка)= Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
		
		ПередатьОРП(Параметры,Ошибка);
		
	ИначеЕсли  ТипЗнч(Параметры.ТекДок.Ссылка)= Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ 
		ТипЗнч(Параметры.ТекДок.Ссылка)= Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
		
		ПередатьВозврат(Параметры,Ошибка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередатьОРП(Параметры,Ошибка)
	
	//#***+Добавления*** Тасмаджиев 28/11/2018// ->>
	Если Параметры.ТекДок.Склад.Код = "000000005" Тогда 
		V8 = Параметры.Бух5ЛБ;
	Иначе
		V8 = Параметры.БухНовЮЛ;
	КонецЕсли;
	//#***-Добавления*** Тасмаджиев 28/11/2018// <<-
	
	ТипОРП = V8.NewObject("ОписаниеТипов","ДокументСсылка.ОтчетОРозничныхПродажах").Типы().Получить(0);
	ТипВозврат = V8.NewObject("ОписаниеТипов","ДокументСсылка.ВозвратТоваровОтПокупателя").Типы().Получить(0);
	Сч = 1;
	ПредставлениеСсылки = XMLСтрока(Параметры.ТекДок);
	ДокументБП = V8.XMLЗначение(ТипОРП, ПредставлениеСсылки);
	ЭтоНовыйДокумент = Ложь;
	ДокОбъект = ДокументБП.ПолучитьОбъект();
	
	Если ДокОбъект = Неопределено Тогда
		
		ДокОбъект = V8.Документы.ОтчетОРозничныхПродажах.СоздатьДокумент();
		ДокОбъект.УстановитьСсылкуНового(ДокументБП);
		ДокОбъект.Комментарий = "Передан из УТ10 на основании документа "+Параметры.ТекДок;
		ЭтоНовыйДокумент = Истина;
		
	КонецЕсли;
	
	Если  ЭтоНовыйДокумент Тогда
		
		ДокОбъект.Дата = Параметры.ТекДок.Дата;
		ДокОбъект.Склад = V8.Справочники.Склады.НайтиПоКоду(Параметры.ТекДок.Склад.Код);
		
		Если Параметры.ТекДок.Склад.Код = "000000005" Тогда
			
			//***{+Добавления}*** Тасмаджиев 28/11/2018// ->>
			// Нужно АЛЛ СПОРТ в соответствии его нет, будем грузить по ИНН КПП.
			ИНН = "5402046325";
			КПП = "540201001";
			ИмяСправочника = "Организации";
			COMссылкаОрганизация = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,ИНН,КПП,ИмяСправочника); 
			
			Если  НЕ COMссылкаОрганизация.Ссылка.Пустая() Тогда
				
				ДокОбъект.Организация = COMссылкаОрганизация; 
				
			Иначе
				
				Сообщить("Организаци с ИНН "+Строка(ИНН)+" КПП "+Строка(КПП)+"не найдена .");
				
			КонецЕсли;
			
			ДокОбъект.СуммаВключаетНДС = Истина;
			ДокОбъект.ПодразделениеОрганизации = ДокОбъект.Склад.ПодразделениеОрганизации;
			
		Иначе
			//***{+Изменения}*** Тасмаджиев 28/08/2018// ->>
			//ДокОбъект.Организация = _5LB_ОбменСДругимиБазами.ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,Параметры.ТекДок.Организация.ИНН,Параметры.ТекДок.Организация.КПП,"Организации");
			СсылкаНаЮРлицо = ОпределитьЮрЛицоПоСкладу(Параметры.ТекДок.Дата,Параметры.ТекДок.Склад);
			ИмяСправочника = "Организации";
			
			Если  ЗначениеЗаполнено(СсылкаНаЮРлицо) Тогда
				
				COMссылкаОрганизация = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,СсылкаНаЮРлицо.ИНН,СсылкаНаЮРлицо.КПП,ИмяСправочника);
				
				Если  НЕ COMссылкаОрганизация.Ссылка.Пустая() Тогда
					
					ДокОбъект.Организация = COMссылкаОрганизация; 
					
				Иначе
					
					ДокОбъект.Организация = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,Параметры.ТекДок.Организация.ИНН,Параметры.ТекДок.Организация.КПП,"Организации");
					
				КонецЕсли;
				
			Иначе
				
				ДокОбъект.Организация = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,Параметры.ТекДок.Организация.ИНН,Параметры.ТекДок.Организация.КПП,"Организации"); 
				
			КонецЕсли;
			//***{-Изменения}*** Тасмаджиев 28/08/2018// <<-
			ДокОбъект.СуммаВключаетНДС = Истина;
			ДокОбъект.ПодразделениеОрганизации = ДокОбъект.Склад.ПодразделениеОрганизации;
			
		КонецЕсли;
		
		ДокОбъект.СчетКасса 		= V8.ПланыСчетов.Хозрасчетный.КассаОрганизации;
		ДокОбъект.ВидОперации 		= V8.Перечисления.ВидыОперацийОтчетОРозничныхПродажах.ОтчетККМОПродажах;
		ДокОбъект.ВалютаДокумента 	= V8.Справочники.Валюты.НайтиПоКоду("643");
		ДокОбъект.КурсДокумента		= 1;
		ДокОбъект.КратностьДокумента = 1;
		
		//#***+Добавления*** Тасмаджиев 05/12/2018// ->>
		Если Параметры.ТекДок.Склад.Код = "000000005" Тогда 
			
			Попытка
				ДокОбъект.СтатьяДвиженияДенежныхСредств = V8.Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Поступление от продаж");	
			Исключение
			КонецПопытки;
			
		Иначе
			
			Попытка 
				ДокОбъект.СтатьяДвиженияДенежныхСредств = V8.Справочники.СтатьиДвиженияДенежныхСредств.РозничнаяВыручка;
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		//#***-Добавления*** Тасмаджиев 05/12/2018// <<-
		
	КонецЕсли;
	
	ДокОбъект.СуммаДокумента	= Параметры.ТекДок.СуммаДокумента;
	
	ДокОбъект.Товары.Очистить();
	ДокОбъект.ПодарочныеСертификаты.Очистить();	
	ДокОбъект.Оплата.Очистить();
	
	Для Каждого СтрОплаты Из Параметры.ТекДок.ОплатаПлатежнымиКартами Цикл  //ТЧ Оплаты
		
		новСтрОплатыБП = ДокОбъект.Оплата.Добавить();
		ЗапросВПриёмнике = V8.NewObject("Запрос");
		ЗапросВПриёмнике.Текст = "    
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВидыОплатОрганизаций.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов.ДополнительныеРеквизиты КАК ДоговорыКонтрагентовДополнительныеРеквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыОплатОрганизаций КАК ВидыОплатОрганизаций
		|		ПО (ВидыОплатОрганизаций.ДоговорКонтрагента = ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка)
		|ГДЕ
		|	ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка.Организация = &Организация
		|	И ДоговорыКонтрагентовДополнительныеРеквизиты.Значение = &Значение
		|	И ВидыОплатОрганизаций.Организация = &Организация
		|	И ВидыОплатОрганизаций.ТипОплаты = &ТипОплаты
		|";
		
		
		ЗапросВПриёмнике.УстановитьПараметр("Значение", ДокОбъект.Склад.ПодразделениеОрганизации);
		ЗапросВПриёмнике.УстановитьПараметр("Организация", ДокОбъект.Организация);
		ЗапросВПриёмнике.УстановитьПараметр("ТипОплаты", V8.Перечисления.ТипыОплат.ПлатежнаяКарта);
		
		
		РезультатЗапроса = ЗапросВПриёмнике.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка =  РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				новСтрОплатыБП.ВидОплаты = Выборка.Ссылка;
			КонецЦикла;
			
		Иначе
			новСтрОплатыБП.ВидОплаты = V8.Справочники.ВидыОплатОрганизаций.НайтиПоНаименованию("оплата по платежным картам");
		КонецЕсли;
		новСтрОплатыБП.СуммаОплаты = СтрОплаты.Сумма;
	КонецЦикла;
	
	//#***+Добавления*** Тасмаджиев 27/11/2018// ->>
	// Тут начинается партянка связанная с подарочными сертификатами .
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КатегорииОбъектов.Объект КАК Подарочные
	|ПОМЕСТИТЬ ПодарочныеКарты
	|ИЗ
	|	РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов
	|ГДЕ
	|	КатегорииОбъектов.Категория = &Категория
	|	И КатегорииОбъектов.Объект В ИЕРАРХИИ(&ГруппаНоменклатурыСКартами)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК ПодарочнаяКарта,
	|	РеализацияТоваровУслугТовары.Цена
	|ПОМЕСТИТЬ ВТ_НоменклатураОтбора
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПодарочныеКарты КАК ПодарочныеКарты
	|		ПО РеализацияТоваровУслугТовары.Номенклатура = ПодарочныеКарты.Подарочные
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.Проведен = ИСТИНА
	|	И РеализацияТоваровУслугТовары.Ссылка.Склад В ИЕРАРХИИ(&ГруппаСкладовМагазинов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугПодарочныеКарты.Ссылка,
	|	РеализацияТоваровУслугПодарочныеКарты.Номер КАК Номер,
	|	РеализацияТоваровУслугПодарочныеКарты.Сумма,
	|	ПодарочныеКарты.Номинал,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугПодарочныеКарты.Сумма = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Оплата,
	|	ВТ_НоменклатураОтбора.ПодарочнаяКарта
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ПодарочныеКарты КАК РеализацияТоваровУслугПодарочныеКарты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЧекиККМ.СрезПоследних(&ДатаОкончания, Склад = &Склад) КАК ЧекиККМСрезПоследних
	|		ПО РеализацияТоваровУслугПодарочныеКарты.Ссылка = ЧекиККМСрезПоследних.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодарочныеКарты КАК ПодарочныеКарты
	|		ПО РеализацияТоваровУслугПодарочныеКарты.Номер = ПодарочныеКарты.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НоменклатураОтбора КАК ВТ_НоменклатураОтбора
	|		ПО (ПодарочныеКарты.Номинал = ВТ_НоменклатураОтбора.Цена)
	|ГДЕ
	|	РеализацияТоваровУслугПодарочныеКарты.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РеализацияТоваровУслугПодарочныеКарты.Ссылка.Склад = &Склад
	|	И РеализацияТоваровУслугПодарочныеКарты.Ссылка.Проведен = ИСТИНА
	|	И ЧекиККМСрезПоследних.Документ <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер";
	
	Запрос.УстановитьПараметр("Категория",Справочники.КатегорииОбъектов.НайтиПоНаименованию("Подарочные карты"));
	Запрос.УстановитьПараметр("ГруппаНоменклатурыСКартами",Справочники.Номенклатура.НайтиПоКоду("6217"));
	Запрос.УстановитьПараметр("ГруппаСкладовМагазинов",Справочники.Склады.НайтиПоКоду("000000008"));
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(Параметры.ТекДок.Дата));
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(Параметры.ТекДок.Дата));
	Запрос.УстановитьПараметр("Склад",Параметры.ТекДок.Склад);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда //В ОРП Есть подарочные сертификаты .
		
		ТЗ_СертификатыПроданныеПогашенные =  Результат.Выгрузить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	КатегорииОбъектов.Объект
		|ИЗ
		|	РегистрСведений.КатегорииОбъектов КАК КатегорииОбъектов
		|ГДЕ
		|	КатегорииОбъектов.Категория = &Категория
		|	И КатегорииОбъектов.Объект В ИЕРАРХИИ(&ГруппаНоменклатурыСКартами)";
		
		Запрос.УстановитьПараметр("Категория", Справочники.КатегорииОбъектов.НайтиПоНаименованию("Подарочные карты"));
		Запрос.УстановитьПараметр("ГруппаНоменклатурыСКартами",Справочники.Номенклатура.НайтиПоКоду("6217"));
		
		тзПодарочныеКарты = Запрос.Выполнить().Выгрузить();
		
		Товары_КопияДокИсточника = Параметры.ТекДок.Товары.Выгрузить().Скопировать();  //Копируем чтобы не трогать документ , далее  из нее будем удалять сертификаты.
		
		Для каждого Стр ИЗ тзПодарочныеКарты Цикл  //Перебирая все виды подарочных сертификатов которые содержатся в орп , будем их удалять так как в тч Товары нового документа  они нам не нужны.
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура",Стр.Объект);
			МассивСтрокУдаления = Товары_КопияДокИсточника.НайтиСтроки(СтруктураОтбора);
			
			Для каждого СтрокаУдаления Из МассивСтрокУдаления Цикл  //Удаляем найденные строки.Они у нас уже есть в ТЗ_СертификатыПроданныеПогашенные.
				
				Товары_КопияДокИсточника.Удалить(СтрокаУдаления);
				
			КонецЦикла;
			
		КонецЦикла;
		
		//Распределяем ранее отобранные подарочные сертификаты.
		
		Для каждого Стр ИЗ ТЗ_СертификатыПроданныеПогашенные Цикл
			
			Если Стр.Оплата Тогда    //Добавляем оплату подарочными сертификатами
				
				новСтрОплатыБП = ДокОбъект.Оплата.Добавить();	
				новСтрОплатыБП.ВидОплаты = V8.Справочники.ВидыОплатОрганизаций.НайтиПоНаименованию("оплата подарочными сертификатами");
				новСтрОплатыБП.СуммаОплаты = Стр.Номинал;
				
			Иначе   //Добавляем продажу подарочных сертификатов
				
				стПодарочныйСертификат = ДокОбъект.ПодарочныеСертификаты.Добавить();
				стПодарочныйСертификат.ВидОплаты = ПолучитьПодарочныйСертификат(V8, Стр.ПодарочнаяКарта, ДокОбъект.Организация);
				стПодарочныйСертификат.Сумма = Стр.Номинал;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Товары_КопияДокИсточника = Параметры.ТекДок.Товары.Выгрузить().Скопировать();  //В ОРП НЕТ подарочных сертификатов , ТЧ можно копировать полностью.
		
	КонецЕсли;
	
	Для Каждого СтрТовары из Товары_КопияДокИсточника Цикл  //Заполняем Товары , сертификатов в Товары_КопияДокИсточника уже нет.
		
		Товары = ДокОбъект.Товары.Добавить();
		Товары.Номенклатура = _5LB_ОбменСДругимиБазами.ПолучитьНоменклатуруВПриёмнике(V8,СтрТовары.Номенклатура);
		Товары.Количество = СтрТовары.Количество;
		
		СтавкаНДС = ?(_5LB_ОбменСДругимиБазами.ОрганизацияЯвляетсяПлательщикомНДСВ1СБухгалтерии(V8,ДокОбъект.Организация,ДокОбъект.Дата),V8.Перечисления.СтавкиНДС.НДС18,V8.Перечисления.СтавкиНДС.БезНДС);
		Товары.СтавкаНДС = СтавкаНДС;
		Товары.СуммаНДС = ?(СтавкаНДС=V8.Перечисления.СтавкиНДС.НДС18,СтрТовары.СуммаНДС,0);
		
		Товары.Сумма = СтрТовары.Сумма;
		Товары.Цена = СтрТовары.Цена;
		Товары.СчетУчета = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
		Товары.СчетДоходов = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
		Товары.Субконто = Товары.Номенклатура.НоменклатурнаяГруппа;
		Товары.СчетРасходов = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
		Товары.СчетУчетаНДСПоРеализации = ?(Параметры.ТекДок.Склад.Код = "000000005",V8.ПланыСчетов.Хозрасчетный.ПустаяСсылка(),V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03"));
		
	КонецЦикла;
	
	Попытка
		ДокОбъект.Записать(V8.РежимЗаписиДокумента.Проведение);
		//***{+Добавления}*** Тасмаджиев 28/08/2018// ->>
		//***=!{Регистрируем передачу документа в РС _5LB_РегистрацияПередачиДокументовВДругиеБазы}!=*** ->>
		РегистрацияПередачиДокумента(Параметры);
		//***{-Добавления}*** Тасмаджиев 28/08/2018// <<-
	Исключение
		Попытка
			ДокОбъект.Записать(V8.РежимЗаписиДокумента.Запись);
			//***{+Добавления}*** Тасмаджиев лалака 28/08/2018// ->>
			//***=!{Регистрируем передачу документа в РС _5LB_РегистрацияПередачиДокументовВДругиеБазы}!=*** ->>
			РегистрацияПередачиДокумента(Параметры);
			//***{-Добавления}*** Тасмаджиев 28/08/2018// <<-
		Исключение
			Ошибка = Истина;
			Сообщить("Не удалось обработать документ " + Параметры.ТекДок);
		КонецПопытки;
	КонецПопытки;
	
КонецПроцедуры

//#***+Добавления*** Тасмаджиев 02/10/2018// ->>
Процедура ПередатьВозврат(Параметры,Ошибка)
	V8 = Параметры.БухНовЮЛ;	
	ТипВозврат = V8.NewObject("ОписаниеТипов","ДокументСсылка.ВозвратТоваровОтПокупателя").Типы().Получить(0);
	ПредставлениеСсылки = XMLСтрока(Параметры.ТекДок.Ссылка);
	ДокументБП = V8.XMLЗначение(ТипВозврат, ПредставлениеСсылки);
	ЭтоНовыйДокумент = Ложь;
	ДокОбъект = ДокументБП.ПолучитьОбъект();
	Если ДокОбъект = Неопределено Тогда
		ДокОбъект = V8.Документы.ВозвратТоваровОтПокупателя.СоздатьДокумент();
		ДокОбъект.УстановитьСсылкуНового(ДокументБП);
		ДокОбъект.Комментарий = "Передан из УТ10 на основании документа "+Параметры.ТекДок.Ссылка;
		ЭтоНовыйДокумент = Истина;
	КонецЕсли;
	
	Если  ЭтоНовыйДокумент Тогда
		ДокОбъект.Дата = Параметры.ТекДок.Ссылка.Дата;
		ДокОбъект.ВидОперации = V8.Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ПродажаКомиссия;
		Если Параметры.ТекДок.СкладОрдер.Код = "000000005" Тогда 
			ДокОбъект.Организация = V8.Справочники.Организации.НайтиПоКоду("00-000004"); //Глобал трейд
		Иначе
			СсылкаНаЮРлицо = ОпределитьЮрЛицоПоСкладу(Параметры.ТекДок.Дата,Параметры.ТекДок.СкладОрдер);
			ИмяСправочника = "Организации";
			Если  ЗначениеЗаполнено(СсылкаНаЮРлицо) Тогда
				COMссылкаОрганизация = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,СсылкаНаЮРлицо.ИНН,СсылкаНаЮРлицо.КПП,ИмяСправочника);
				
				Если  НЕ COMссылкаОрганизация.Ссылка.Пустая() Тогда
					ДокОбъект.Организация = COMссылкаОрганизация; 
				Иначе
					ДокОбъект.Организация = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,Параметры.ТекДок.Организация.ИНН,Параметры.ТекДок.Организация.КПП,"Организации");
				КонецЕсли;
			Иначе
				ДокОбъект.Организация = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,Параметры.ТекДок.Организация.ИНН,Параметры.ТекДок.Организация.КПП,"Организации"); 
			КонецЕсли;
		КонецЕсли;
        ДокОбъект.Склад = V8.Справочники.Склады.НайтиПоКоду(Параметры.ТекДок.Ссылка.СкладОрдер.Код);;
		ДокОбъект.ВалютаДокумента = V8.Справочники.Валюты.НайтиПоКоду("643");;
		ДокОбъект.ПодразделениеОрганизации = ДокОбъект.Склад.ПодразделениеОрганизации;
		ДокОбъект.Контрагент = V8.Справочники.Контрагенты.НайтиПоНаименованию("_Розничный покупатель");
		ДокОбъект.ДоговорКонтрагента = ПоискДоговораВ1СБухгалтерии(V8,ДокОбъект.Организация,ДокОбъект.Контрагент,Параметры.ТекДок.Ссылка.Дата,"СПокупателем",ДокОбъект.ВалютаДокумента);
		ДокОбъект.СуммаВключаетНДС = ?(Параметры.ТекДок.Ссылка.СкладОрдер.Код = "000000005",Ложь,Истина);
		ДокОбъект.КурсВзаиморасчетов = 1;
		ДокОбъект.КратностьВзаиморасчетов = 1;
		ДокОбъект.СчетУчетаРасчетовСКонтрагентом = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");
		ДокОбъект.СчетУчетаРасчетовПоАвансам = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");
		ДокОбъект.СчетУчетаРасчетовПоТаре = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.06");
		ДокОбъект.СчетУчетаНДС = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.03");
		ДокОбъект.Сделка = ПолучитьСделкуОРП(Параметры,V8);
	КонецЕсли;
	
	ДокОбъект.СуммаДокумента = Параметры.ТекДок.Ссылка.СуммаДокумента;
	
	ДокОбъект.Товары.Очистить();
	Для Каждого СтрТовары из Параметры.ТекДок.Ссылка.Товары Цикл
		Товары = ДокОбъект.Товары.Добавить();
		Товары.Номенклатура = _5LB_ОбменСДругимиБазами.ПолучитьНоменклатуруВПриёмнике(V8,СтрТовары.Номенклатура);
		Товары.Количество = СтрТовары.Количество;
		Товары.СтавкаНДС = ?(_5LB_ОбменСДругимиБазами.ОрганизацияЯвляетсяПлательщикомНДСВ1СБухгалтерии(V8,ДокОбъект.Организация,ДокОбъект.Дата),V8.Перечисления.СтавкиНДС.НДС18,V8.Перечисления.СтавкиНДС.БезНДС); 
		Товары.СуммаНДС = ?(Товары.СтавкаНДС=V8.Перечисления.СтавкиНДС.НДС18,СтрТовары.СуммаНДС,0);
		Товары.Сумма = СтрТовары.Сумма;
		Товары.Цена = СтрТовары.Цена;
		Товары.Себестоимость = Товары.Сумма;
		Товары.ОтражениеВУСН = V8.Перечисления.ОтражениеВУСН.Принимаются;
		
		Товары.СчетУчета = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
		Товары.СчетДоходов = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
		Товары.СчетРасходов = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
		Товары.Субконто = Товары.Номенклатура.НоменклатурнаяГруппа;
		Товары.СчетУчетаНДСПоРеализации = V8.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
	КонецЦикла;
	
	Попытка
		ДокОбъект.Записать(V8.РежимЗаписиДокумента.Проведение);
	Исключение
		Попытка
			ДокОбъект.Записать(V8.РежимЗаписиДокумента.Запись);
		Исключение
			Сообщить("Не удалось обработать документ " + Параметры.ТекДок.Ссылка);
		КонецПопытки;
	КонецПопытки;
	
	
КонецПроцедуры //#***-Добавления*** Тасмаджиев 02/10/2018// <<-

#КонецОбласти


#Область Служебные

Процедура ПодключениеCOM(Бух5ЛБ,БухНовЮЛ,БухТестИванов,ЧтоДелаем,УЖР,РТЗЖР,Тест,Ошибка) Экспорт
	
	Если Константы.ИспользоватьТестовоеПодключениеБП30.Получить() Тогда
		Бух5ЛБ = ПодключитьсяПоCOM("lab1c:1641","C8_BUH_30",Тест);
	Иначе 
		Бух5ЛБ = ПодключитьсяПоCOM("1cserv","C8_BUH_30",Тест);
	КонецЕсли;
	//Конец изменного Monstr 180411
	Если Бух5ЛБ = Неопределено Тогда
		ОписаниеПроблемы = "Не удалось подключиться к базе 1С:Бухгалерия ООО ""5ЛБ"" (C8_BUH_30)";
		ЗаписьЖурналаРегистрации(ЧтоДелаем,УЖР,,,ОписаниеПроблемы,РТЗЖР);
		Возврат;
	КонецЕсли;
	Если НЕ Тест Тогда //27.10.2017, Юра
		//Изменено Monstr 180411
		//Было:БухНовЮЛ = ПодключитьсяПоCOM("vkey3","BUH_VitaFood",Тест);
		Если Константы.ИспользоватьТестовоеПодключениеБП30.Получить() Тогда
			БухНовЮЛ = ПодключитьсяПоCOM("lab1c:1641","BUH_VitaFood",Тест);
		Иначе 
			БухНовЮЛ = ПодключитьсяПоCOM("vkey3","BUH_VitaFood",Тест);
			//#***+Добавления*** Тасмаджиев 28/11/2018// ->>
			БухТестИванов =  ПодключитьсяПоCOM("vkey3","BUH_TEST_Ivanov",Тест);
             //#***-Добавления*** Тасмаджиев 28/11/2018// <<-
		КонецЕсли;
		//Конец изменного Monstr 180411
		Если БухНовЮЛ = Неопределено Тогда
			ОписаниеПроблемы = "Не удалось подключиться к базе 1С:Бухгалерия (BUH_VitaFood)";//"Не удалось подключиться к базе 1С:Бухгалерия для юр.лиц на УСН";//12.10.2017, Юра
			ЗаписьЖурналаРегистрации(ЧтоДелаем,УЖР,,,ОписаниеПроблемы,РТЗЖР);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПодключитьсяПоCOM(ИмяСервера,ИмяБазы,Test=Ложь) Экспорт 
	Попытка
		COMConnector=Новый COMОбъект("V83.COMConnector");
		Если Test Тогда
			ИмяСервера = "lab1c:1641";
			ИмяБазы = "BUH_Test";
		КонецЕсли;
		V8 = COMConnector.Connect("Srvr="+ИмяСервера+"; Ref="+ИмяБазы+"; usr=""robot""; pwd=qp:Hj1S0EC");
	Исключение
		//Добавлено Monstr 180411
		Сообщить("Не удалось выполнить подключение к БП 3.0." + Символы.ПС + ОписаниеОшибки());
		//Конец добавленного Monstr 180411
		V8 = Неопределено;
	КонецПопытки;
	
	Возврат V8;
КонецФункции

//#***+Добавления*** Тасмаджиев 02/10/2018// ->>
Функция ПолучитьСделкуОРП(Параметры,V8);
	Запрос = V8.NewObject("Запрос");
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Дата = &Дата
	|	И ОтчетОРозничныхПродажах.Склад = &Склад";

	
	Запрос.УстановитьПараметр("Дата", Параметры.ТекДок.Дата);
	
	//***{+Добавления}*** Тасмаджиев 13/11/2018// ->>
	Если  ТипЗнч(Параметры.ТекДок) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Запрос.УстановитьПараметр("Склад",V8.Справочники.Склады.НайтиПоКоду(Параметры.ТекДок.СкладОрдер.Код));
		
	Иначе
		
		Запрос.УстановитьПараметр("Склад",V8.Справочники.Склады.НайтиПоКоду(Параметры.ТекДок.Склад.Код));
		
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДокОРП = Выборка.Ссылка;
	Иначе
		ДокОРП = Неопределено;
	КонецЕсли;
	Возврат ДокОРП;
КонецФункции //#***-Добавления*** Тасмаджиев 02/10/2018// <<-

Функция ПолучитьПодарочныйСертификат(V8, Номенклатура, Организация)
	
	ЗапросВПриёмнике = V8.NewObject("Запрос");
		
	РозничныйПокупатель = V8.Справочники.Контрагенты.НайтиПоНаименованию("_Розничный покупатель");
	Если РозничныйПокупатель = Неопределено Тогда
		РозничныйПокупатель = V8.Справочники.Контрагенты.СоздатьЭлемент();
		РозничныйПокупатель.Наименование = "_Розничный покупатель";
		РозничныйПокупатель.ЮридическоеФизическоеЛицо = V8.Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		РозничныйПокупатель.Записать();
	КонецЕсли;
	
	ЗапросВПриёмнике.Текст=
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|ВидыОплатОрганизаций.Ссылка КАК Ссылка
	| ИЗ
	|Справочник.ВидыОплатОрганизаций КАК ВидыОплатОрганизаций
	| ГДЕ
	|ВидыОплатОрганизаций.Организация = &Организация
	|И ВидыОплатОрганизаций.Контрагент = &Контрагент
	|И ВидыОплатОрганизаций.ТипОплаты = &ТипОплаты";
	
	ЗапросВПриёмнике.УстановитьПараметр("ТипОплаты",V8.Перечисления.ТипыОплат.ПодарочныйСертификатСобственный);
	ЗапросВПриёмнике.УстановитьПараметр("Организация", Организация);
	ЗапросВПриёмнике.УстановитьПараметр("Контрагент", РозничныйПокупатель);
		
	Рез = ЗапросВПриёмнике.Выполнить();
	
	Если Рез.Пустой() Тогда
				
		Сертификат = V8.Справочники.ВидыОплатОрганизаций.СоздатьЭлемент();
		Сертификат.Организация = Организация;
		Сертификат.ТипОплаты = V8.Перечисления.ТипыОплат.ПодарочныйСертификатСобственный;
		Сертификат.Контрагент = РозничныйПокупатель.Ссылка;
		Сертификат.СчетУчетаРасчетов = V8.ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным;
		//***{+Добавления}*** Тасмаджиев 27/08/2018// ->>
		//***=!{Если нет договора то добавим его}!=*** ->>
		Договор = ПоискДоговораВ1СБухгалтерии(V8,Организация,РозничныйПокупатель.Ссылка,ТекущаяДата(),"СПокупателем",Неопределено);
		Если  Договор = V8.Справочники.ДоговорыКонтрагентов.ПустаяСсылка() Тогда
			
			Договор = V8.Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
			Договор.Владелец  = РозничныйПокупатель.Ссылка;
			Договор.Наименование  =  РозничныйПокупатель.Ссылка.Наименование +"_"+ Организация.Наименование + "_Сертификат";
			Договор.ВалютаВзаиморасчетов  = V8.Справочники.Валюты.НайтиПоКоду("643");
			Договор.Комментарий  = "Создан автоматически при обмене с УТ";
			Договор.Организация = Организация; 
			Договор.ВидДоговора  = V8.Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
			
			ОтветственныеЛицаОрганизации = V8.ОтветственныеЛицаБП.ОтветственныеЛица(Организация, ТекущаяДата(),);
			
			Запрос = V8.NewObject("Запрос");
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность
			|ИЗ
			|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|ГДЕ
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо <> ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.ПустаяСсылка)
			|   И ОтветственныеЛицаОрганизацийСрезПоследних.Должность = &Должность ";
			
			Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("Должность",V8.Справочники.Должности.НайтиПоНаименованию("Генеральный директор"));
			
			Результат = Запрос.Выполнить();
			
			Если НЕ Результат.Пустой() Тогда
				Выборка = Результат.Выбрать();
				Выборка.Следующий();
				РуководительФЛ = Выборка.ФизическоеЛицо;
				Должность = Выборка.Должность;
			КонецЕсли;
			
			Договор.Руководитель = РуководительФЛ;
			Договор.ДолжностьРуководителя = Должность;
			Договор.РасчетыВУсловныхЕдиницах      = Ложь;
			Договор.УдалитьРеализацияНаЭкспорт    = Ложь;
			Договор.УстановленСрокОплаты          = Ложь;
			Договор.Валютный                      = Ложь;
			Договор.ОплатаВВалюте                 = Ложь;
			Договор.ИспользуетсяПриОбменеДанными  = Ложь;
			Договор.ПредъявляетНДС                = Ложь;
			Договор.НДСПоСтавкам4и2               = Ложь;
		
			Договор.Записать();
			
		КонецЕсли;
		
		//***{-Добавления}*** Тасмаджиев 27/08/2018// <<-
		Сертификат.ДоговорКонтрагента = Договор;
		Сертификат.Наименование = "оплата подарочными сертификатами";
		Сертификат.Записать();
		
		Возврат Сертификат.Ссылка;
		
	Иначе 
		тзСертификаты = Рез.Выбрать();
		тзСертификаты.Следующий();
		Возврат тзСертификаты.Ссылка;
	КонецЕсли;
	
КонецФункции 

Процедура РегистрацияПередачиДокумента(Параметры)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.Документ,
	|	МАКСИМУМ(_5LB_РегистрацияПередачиДокументовВДругиеБазы.ДатаИзмененияДокумента) КАК ДатаИзмененияДокумента
	|ИЗ
	|	РегистрСведений._5LB_РегистрацияПередачиДокументовВДругиеБазы КАК _5LB_РегистрацияПередачиДокументовВДругиеБазы
	|ГДЕ
	|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.Документ = &Документ
	|	И _5LB_РегистрацияПередачиДокументовВДругиеБазы.ДатаПолученияВБазеПриемнике = ДАТАВРЕМЯ(1, 1, 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	_5LB_РегистрацияПередачиДокументовВДругиеБазы.Документ";
	Запрос.УстановитьПараметр("Документ",Параметры.ТекДок);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		МенЗап = РегистрыСведений._5LB_РегистрацияПередачиДокументовВДругиеБазы.СоздатьМенеджерЗаписи();
		МенЗап.Документ = Параметры.ТекДок;
		МенЗап.ДатаИзмененияДокумента = ВыборкаДетальныеЗаписи.ДатаИзмененияДокумента;
		МенЗап.ДатаПолученияВБазеПриемнике = ТекущаяДата();
		МенЗап.Комментарий = "Передан в базу "+ Параметры.КудаПередается;
		МенЗап.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция ОпределитьЮрЛицоПоСкладу(ТекДатаДокумента,ТекСклад) Экспорт 
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	_5LB_СоответствиеСкладаИКонтрагентаСрезПоследних.Контрагент КАК Контрагент
	               |ИЗ
	               |	РегистрСведений._5LB_СоответствиеСкладаИКонтрагента.СрезПоследних(&ДатаДокумента, Склад = &СкладПолучатель) КАК _5LB_СоответствиеСкладаИКонтрагентаСрезПоследних";
	Запрос.УстановитьПараметр("ДатаДокумента", ТекДатаДокумента);
	Запрос.УстановитьПараметр("СкладПолучатель", ТекСклад);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Контрагент;
	Иначе 
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
КонецФункции

Функция ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(V8,ИНН,КПП,ИмяСправочника) Экспорт 
	ЗапросВПриёмнике = V8.NewObject("Запрос");
	ЗапросВПриёмнике.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	                         |	ИмяСправочника.Ссылка КАК Ссылка
	                         |ИЗ
	                         |	Справочник."+ИмяСправочника+" КАК ИмяСправочника
	                         |ГДЕ
	                         |	ИмяСправочника.ИНН = &ИНН
	                         |	И ИмяСправочника.КПП = &КПП";
	ЗапросВПриёмнике.УстановитьПараметр("ИНН", ИНН);
	ЗапросВПриёмнике.УстановитьПараметр("КПП", КПП);
	Рез = ЗапросВПриёмнике.Выполнить();
	Если Рез.Пустой() Тогда
		ОписаниеПроблемы = "В базе 1С:Бухгалтерия не смогли найти по ИНН/КПП: "+СокрЛП(ИНН)+"/"+СокрЛП(КПП) + " элемент в справочнике "+ИмяСправочника;
		ЧтоДелаем = "Передача документов из УТ10 в другие базы";
		РТЗЖР = РежимТранзакцииЗаписиЖурналаРегистрации.Независимая;
		УЖР = УровеньЖурналаРегистрации.Ошибка;
		ЗаписьЖурналаРегистрации(ЧтоДелаем,УЖР,,,ОписаниеПроблемы,РТЗЖР);
		
		Возврат V8.Справочники[ИмяСправочника].ПустаяСсылка();
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Возврат Выб.Ссылка;
	КонецЕсли;
КонецФункции

Функция ПоискДоговораВ1СБухгалтерии(V8,ТекОрганизация,ТекКонтрагент,ДатаДокумента,ВидДоговора = "СПоставщиком",Валюта=Неопределено) Экспорт
	ЗапросВПриёмнике = V8.NewObject("Запрос");
	ЗапросВПриёмнике.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
				|ГДЕ
				|	ДоговорыКонтрагентов.Владелец = &Владелец
				|	И ДоговорыКонтрагентов.Организация = &Организация
				|	И ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &Валюта
				|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов."+ВидДоговора+")
				|	И ВЫБОР
				|			КОГДА ДоговорыКонтрагентов.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
				|				ТОГДА ИСТИНА
				|			ИНАЧЕ ДоговорыКонтрагентов.СрокДействия >= &ДатаДокумента
				|		КОНЕЦ";
	ЗапросВПриёмнике.УстановитьПараметр("Владелец", ТекКонтрагент);
	ЗапросВПриёмнике.УстановитьПараметр("Организация", ТекОрганизация);
	ЗапросВПриёмнике.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	ЗапросВПриёмнике.УстановитьПараметр("Валюта", ?(Валюта=Неопределено,V8.Справочники.Валюты.НайтиПоКоду("643"),Валюта));//24.10.2017, Юра
	
	Рез = ЗапросВПриёмнике.Выполнить();
	Если Рез.Пустой() Тогда
		ОписаниеПроблемы = "В базе 1С:Бухгалтерия не смогли найти договор (Организация: "+СокрЛП(ТекОрганизация.Наименование)+", контрагент: "+СокрЛП(ТекКонтрагент.Наименование)+", вид договора: "+ВидДоговора+ ")";
		ЧтоДелаем = "Передача документов из УТ10 в другие базы";
		РТЗЖР = РежимТранзакцииЗаписиЖурналаРегистрации.Независимая;
		УЖР = УровеньЖурналаРегистрации.Ошибка;
		ЗаписьЖурналаРегистрации(ЧтоДелаем,УЖР,,,ОписаниеПроблемы,РТЗЖР);
		
		Возврат V8.Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Возврат Выб.Ссылка;
	КонецЕсли;
КонецФункции

Функция ПолучитьНоменклатуруВПриёмнике(Бух,Номенклатура, ФМ=Ложь, ЕдиницаХранения = Неопределено) Экспорт //Добавил "Экспорт" 07.07.2017, Юра
//Конец изменного Monstr 180410
	СоздаёмРодителя = Ложь;
	
	//Добавлено Monstr 180410
	//Доработка согласно ЛТ №2 от 05.04.18
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Неопределено;
	КонецЕсли;
	НоменклатураДляПоиска = ?(Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(Номенклатура.емеСсылкаНаОсновнуюНоменклатуру), Номенклатура.емеСсылкаНаОсновнуюНоменклатуру, Номенклатура);
	//Конец добавленного Monstr 180410
	
	Запрос = Бух.NewObject("Запрос");
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Н.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Н
	|ГДЕ
	|	НЕ Н.ЭтоГруппа
	|	И Н.Код = &Код";
	//Изменено Monstr 180410
	//Доработка согласно ЛТ №2 от 05.04.18
	//Было:Запрос.УстановитьПараметр("Код",СокрЛП(Номенклатура.Код));
	Запрос.УстановитьПараметр("Код",СокрЛП(НоменклатураДляПоиска.Код));
	//Конец изменного Monstr 180410
	
	//Добавлено Monstr 180512
	//Доработка согласно требований ЛТ №3 от 22.04.18
	ВидНоменклатуры = ПолучитьВидНоменклатуры(Бух);
	//Конец добавленного Monstr 180512

	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		//Изменено Monstr 180410
		//Доработка согласно ЛТ №2 от 05.04.18
		//Было:Если ЗначениеЗаполнено(Номенклатура.Родитель) Тогда
		Если ЗначениеЗаполнено(НоменклатураДляПоиска.Родитель) Тогда
		//Конец изменного Monstr 180410
			Запрос = Бух.NewObject("Запрос");
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Н.Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Н
			|ГДЕ
			|	Н.ЭтоГруппа
			|	И Н.Код = &Код";
			//Изменено Monstr 180410
			//Доработка согласно ЛТ №2 от 05.04.18
			//Было:Запрос.УстановитьПараметр("Код",СокрЛП(Номенклатура.Родитель.Код));
			Запрос.УстановитьПараметр("Код",СокрЛП(НоменклатураДляПоиска.Родитель.Код));
			//Конец изменного Monstr 180410
			РезРод = Запрос.Выполнить();
			Если РезРод.Пустой() Тогда
				СоздаёмРодителя = Истина;
			Иначе
				Выб = РезРод.Выбрать();
				Выб.Следующий();
				НовРод = Выб.Ссылка;
			КонецЕсли;
		//Добавлено Monstr 180410
		//Доработка согласно ЛТ №2 от 05.04.18
		Иначе
			//05062018 и в 5лб, и в фм код общего каталога товаров 00-00000039
			НовРод = Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039");
			//НовРод = ?(ФМ,Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039"),Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000001"));
		//Конец добавленного Monstr 180410
		КонецЕсли;
		Если СоздаёмРодителя Тогда
			НовРод = Бух.Справочники.Номенклатура.СоздатьГруппу();
			//Изменено Monstr 180410
			//Доработка согласно ЛТ №2 от 05.04.18
			//Было:НовРод.Родитель = Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039");
			//НовРод.Код = Номенклатура.Родитель.Код;
			//НовРод.Наименование = Номенклатура.Родитель.Наименование;
			//НовРод.Родитель = ?(ФМ,Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039"),Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000001"));
			//05062018 и в 5лб и в фм код общего каталога товаров 00-00000039
			НовРод.Родитель = Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039");
			НовРод.Код = НоменклатураДляПоиска.Родитель.Код;
			НовРод.Наименование = НоменклатураДляПоиска.Родитель.Наименование;
			//Конец изменного Monstr 180410
			
			НовРод.Записать();
		КонецЕсли;
		
		НовНом = Бух.Справочники.Номенклатура.СоздатьЭлемент();
		//Изменено Monstr 180410
		//Доработка согласно ЛТ №2 от 05.04.18
		//Было:НовНом.Код = Номенклатура.Код;
		//НовНом.Артикул = Номенклатура.Артикул;
		НовНом.Код = НоменклатураДляПоиска.Код;
		НовНом.Артикул = НоменклатураДляПоиска.Артикул;
		НовНом.ВидНоменклатуры = ВидНоменклатуры;
		//Конец изменного Monstr 180410
		НовНом.Родитель = НовРод.Ссылка;
		//Изменено Monstr 180410
		//Доработка согласно ЛТ №2 от 05.04.18
		//Было:НовНом.Наименование = Номенклатура.Наименование;
		//НовНом.НаименованиеПолное = Номенклатура.Наименование;
		НовНом.Наименование = НоменклатураДляПоиска.Наименование;
		НовНом.НаименованиеПолное = НоменклатураДляПоиска.Наименование;
		//Конец изменного Monstr 180410
		НовНом.ЕдиницаИзмерения = Бух.Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
		НовНом.Комментарий = "Пришло из УТ "+ТекущаяДата();
		НовНом.НоменклатурнаяГруппа = Бух.Справочники.НоменклатурныеГруппы.НайтиПоКоду("00-000001");
		НовНом.СтавкаНДС = Бух.Перечисления.СтавкиНДС.НДС18;
		НовНом.Записать(); 
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		НовНом = Выб.Ссылка;
	КонецЕсли;

	ЕдиницаХранения = НоменклатураДляПоиска.ЕдиницаХраненияОстатков;

	Возврат НовНом.Ссылка;
КонецФункции

Функция ПолучитьВидНоменклатуры(Бух)
	Запрос = Бух.NewObject("Запрос");
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ВидыНоменклатуры.Ссылка
	               |ИЗ
	               |	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	               |ГДЕ
	               |	ВидыНоменклатуры.Наименование = ""Товары"" И Не ВидыНоменклатуры.Услуга";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		НовВидНом = Бух.Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		НовВидНом.Наименование = "Товары"; 
		НовВидНом.Услуга = Ложь;
		НовВидНом.Записать();
		Возврат НовВидНом.Ссылка();
	Иначе 
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
КонецФункции // ()

Функция ОрганизацияЯвляетсяПлательщикомНДСВ1СБухгалтерии(COMConnectorБУХ,ТекОрганизация,ДатаДокумента) Экспорт
	ЗапросВПриёмнике = COMConnectorБУХ.NewObject("Запрос");
	ЗапросВПриёмнике.Текст = "ВЫБРАТЬ
				|	НастройкиСистемыНалогообложенияСрезПоследних.ПлательщикНДС
				|	ИЗ
				|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&ДатаДокумента, Организация = &Организация) КАК НастройкиСистемыНалогообложенияСрезПоследних";
	ЗапросВПриёмнике.УстановитьПараметр("Организация", ТекОрганизация);
	ЗапросВПриёмнике.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Рез = ЗапросВПриёмнике.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Возврат Выб.ПлательщикНДС;
	КонецЕсли;
КонецФункции

Функция НайтиИлиСоздатьДокументвБазе1СБухгалтерия(COMConnectorБУХ,Параметры) Экспорт 
	
	//22.08.2017, Юра
	Если НЕ Параметры.Свойство("ВидДокумента") Тогда
		Параметры.Вставить("ВидДокумента",Параметры.ТекДок.Ссылка.Метаданные().Имя);
	КонецЕсли;
	
	Документ = ПоискДокументаПоУникальномуИдентификаторуВ1СБухгалтерии(COMConnectorБУХ,Параметры.ТекДок,Параметры.ВидДокумента);
	
	ЗаполнитьДокумент(Документ,COMConnectorБУХ,Параметры);//12.09.2017, Юра
	
	Возврат Документ;
КонецФункции

Процедура ЗаполнитьДокумент(Документ,COMConnectorБУХ,Параметры)
	Документ.Дата = Параметры.ТекДок.Дата;
	//#***+Изменения*** Тасмаджиев 28/09/2018// ->>
	//Если Параметры.ВидДокумента = "ОтчетОРозничныхПродажах" Тогда
	//	ЗаполнитьОРП(Документ,COMConnectorБУХ,Параметры);
	//Иначе
	//#***-Изменения*** Тасмаджиев 28/09/2018// <<-
		
		Документ.Организация = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(COMConnectorБУХ,Параметры.ИННОрганизации,Параметры.КППОрганизации,"Организации");
		Документ.Склад = COMConnectorБУХ.Справочники.Склады.НайтиПоКоду(Параметры.КодСклада,,,Документ.Организация);
		Если Параметры.Свойство("НаименованиеПодразделения") И ЗначениеЗаполнено(Параметры.НаименованиеПодразделения) Тогда
			//25.12.2017 у 5лб оставляем пустое подразделение
			Если Параметры.ИННОрганизации = "7715431262" Тогда
			Иначе
				Документ.ПодразделениеОрганизации = COMConnectorБУХ.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию(Параметры.НаименованиеПодразделения,,,Документ.Организация);
			КонецЕсли;
		Иначе
			Документ.ПодразделениеОрганизации = Документ.Склад.ПодразделениеОрганизации;
		КонецЕсли;
		Документ.СуммаДокумента = Параметры.ТекДок.СуммаДокумента;
		
		Если ПустаяСтрока(Документ.Номер) Тогда
			Документ.УстановитьНовыйНомер();
		КонецЕсли;
		
		Если Параметры.ВидДокумента = "РеализацияТоваровУслуг" Тогда
			Документ.ВидОперации = COMConnectorБУХ.Перечисления.ВидыОперацийРеализацияТоваров.Товары;
			Документ.БанковскийСчетОрганизации = Документ.Организация.ОсновнойБанковскийСчет;
			Документ.СпособЗачетаАвансов = COMConnectorБУХ.Перечисления.СпособыЗачетаАвансов.Автоматически;
			Документ.ДокументБезНДС = Ложь;
			ВидДоговора = "СПокупателем";
			
			Документ.СчетУчетаРасчетовСКонтрагентом = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");;
			Документ.СчетУчетаРасчетовПоАвансам = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");
		ИначеЕсли Параметры.ВидДокумента = "ВозвратТоваровОтПокупателя" Тогда
			Документ.ВидОперации = COMConnectorБУХ.Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ПродажаКомиссия;
			Документ.ОтразитьВКнигеПокупок = Истина;
			ВидДоговора = "СПокупателем";
			
			Документ.СчетУчетаРасчетовСКонтрагентом = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");;
			Документ.СчетУчетаРасчетовПоАвансам = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");
			Документ.СчетУчетаРасчетовПоТаре = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.06");
			Документ.СчетУчетаНДС = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.04.2");
		ИначеЕсли Параметры.ВидДокумента = "ВозвратТоваровПоставщику" Тогда
			Документ.ВидОперации = COMConnectorБУХ.Перечисления.ВидыОперацийВозвратТоваровПоставщику.ПокупкаКомиссия;
			Документ.ДокументБезНДС = Ложь;
			Документ.НДСВключенВСтоимость = Истина;
			ВидДоговора = "СПоставщиком";
			
			Документ.СчетУчетаРасчетовСКонтрагентом = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");;
			Документ.СчетУчетаРасчетовПоПретензиям = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.02");
			Документ.СчетУчетаРасчетовПоТаре = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.05");
		ИначеЕсли Параметры.ВидДокумента = "ПоступлениеТоваровУслуг" Тогда//22.08.2017, Юра
			Если Параметры.Свойство("НомерВходящегоДокумента") Тогда //17.10.2017, Юра
				Документ.НомерВходящегоДокумента = Параметры.НомерВходящегоДокумента;
				Документ.ДатаВходящегоДокумента = Параметры.ТекДок.Дата;
			КонецЕсли;
			Документ.ВидОперации = COMConnectorБУХ.Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары;
			ВидДоговора = "СПоставщиком";
			
			Документ.СчетУчетаРасчетовСКонтрагентом = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.01");;
			Документ.СчетУчетаРасчетовПоАвансам = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.02");
			Документ.СпособЗачетаАвансов = COMConnectorБУХ.Перечисления.СпособыЗачетаАвансов.Автоматически;
			Документ.НДСВключенВСтоимость = Истина;
		ИначеЕсли Параметры.ВидДокумента = "ОприходованиеТоваров" Тогда//22.08.2017, Юра
			Документ.СтатьяПрочихДоходовРасходов = COMConnectorБУХ.Справочники.ПрочиеДоходыИРасходы.ПрочиеВнереализационныеДоходыРасходы;//хотелось Бух.Справочники.ПрочиеДоходыИРасходы.ОприходованиеИзлишков, но этого предопределенного элемента по-умолчанию нет в режиме 1С:Предприятие
			Документ.СуммаДокументаРегл = Параметры.ТекДок.СуммаДокументаРегл;
		КонецЕсли;
		
		Если Параметры.ВидДокумента = "СписаниеТоваров" ИЛИ Параметры.ВидДокумента = "ОприходованиеТоваров" Тогда
			//для этих документов нет таких реквизитов
		Иначе
			//24.10.2017, Юра
			//Документ.ВалютаДокумента = COMConnectorБУХ.Справочники.Валюты.НайтиПоКоду("643");
			Если Параметры.Свойство("Валюта") = Ложь Тогда  
				Документ.ВалютаДокумента = COMConnectorБУХ.Справочники.Валюты.НайтиПоКоду("643");
			Иначе 
				Документ.ВалютаДокумента = COMConnectorБУХ.Справочники.Валюты.НайтиПоКоду(Параметры.Валюта.Код);
			КонецЕсли;
			
			Документ.КурсВзаиморасчетов = 1;
			Документ.КратностьВзаиморасчетов = 1;
			
			Документ.Контрагент = ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(COMConnectorБУХ,Параметры.ИННКонтрагента,Параметры.КППКонтрагента,"Контрагенты");
			Документ.ДоговорКонтрагента	= ПоискДоговораВ1СБухгалтерии(COMConnectorБУХ,Документ.Организация,Документ.Контрагент,Документ.Дата,ВидДоговора,Документ.ВалютаДокумента);
			
			Документ.СуммаВключаетНДС = Истина;
		КонецЕсли;
		
		Документ.Товары.Очистить(); //просто очистим ТЧ
		
		Если Параметры.Свойство("ЗаполнятьТовары") и Параметры.ЗаполнятьТовары Тогда
			СтавкаНДС = ?(ОрганизацияЯвляетсяПлательщикомНДСВ1СБухгалтерии(COMConnectorБУХ,Документ.Организация,Документ.Дата),COMConnectorБУХ.Перечисления.СтавкиНДС.НДС18,COMConnectorБУХ.Перечисления.СтавкиНДС.БезНДС);
			НетКолонкиСумма = Параметры.ТекДок.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("Сумма") = Неопределено;
			
			Для Каждого ст из Параметры.ТекДок.Товары Цикл
				Товары = Документ.Товары.Добавить();
				Товары.Номенклатура = ПолучитьНоменклатуруВПриёмнике(COMConnectorБУХ,ст.Номенклатура);
				Товары.ЕдиницаИзмерения = Товары.Номенклатура.ЕдиницаИзмерения;
				Товары.КоличествоМест = ст.КоличествоМест;
				
				//ЕдиницаИзмерения у нас будет базовая, поэтому надо будет количество и цену привести к базовой ед.изм.
				Товары.Коэффициент = 1;
				Товары.Количество = ст.Количество * ?(ст.Коэффициент = 0,1,ст.Коэффициент);
				Сумма = ?(НетКолонкиСумма,ст.Количество * ст.Цена, ст.Сумма);
				Товары.Цена = ОКР(Сумма / ?(Товары.Количество = 0,1,Товары.Количество),2);
				Товары.Сумма = Сумма;
				
				Если Параметры.ВидДокумента = "ОприходованиеТоваров" Тогда
					Товары.ЦенаВРознице			= ст.ЦенаВРознице;
					Товары.СуммаВРознице		= Товары.ЦенаВРознице * ?(Товары.Количество = 0,1,Товары.Количество);
				ИначеЕсли Параметры.ВидДокумента = "РеализацияТоваровУслуг" или Параметры.ВидДокумента = "ВозвратТоваровОтПокупателя" Тогда
					Товары.СчетДоходов			= COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
					Товары.СчетРасходов			= COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
					Товары.Субконто				= Товары.Номенклатура.НоменклатурнаяГруппа;
					Товары.СчетУчетаНДСПоРеализации	= COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
				ИначеЕсли Параметры.ВидДокумента = "ВозвратТоваровПоставщику" Тогда
					Товары.СчетУчетаНДС			= COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
					Товары.СчетРасчетов			= COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
				//ИначеЕсли Параметры.ВидДокумента = "ПоступлениеТоваровУслуг" Тогда
					Товары.СчетУчетаНДС			= COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.03");	
				КонецЕсли;
				
				Если Параметры.ВидДокумента = "РеализацияТоваровУслуг"
					или Параметры.ВидДокумента = "ВозвратТоваровОтПокупателя"
					или Параметры.ВидДокумента = "ВозвратТоваровПоставщику" 
					или Параметры.ВидДокумента = "ПоступлениеТоваровУслуг" Тогда
					Товары.СтавкаНДС			= Товары.Номенклатура.СтавкаНДС; //25.12.2017 теперь НДС иначе передаётся
					Товары.СуммаНДС				= Окр(Сумма * (1 - 1/(1+18/100)), 2); //?(Товары.Номенклатура.СтавкаНДС=COMConnectorБУХ.Перечисления.СтавкиНДС.НДС18,Окр(Сумма * (1 - 1/(1+18/100)), 2),0);
				КонецЕсли;
				
				Если Параметры.ВидДокумента = "СписаниеТоваров"
					или Параметры.ВидДокумента = "ОприходованиеТоваров" Тогда
					Товары.СтавкаНДСВРознице	= СтавкаНДС;
					Товары.ОтражениеВУСН		= COMConnectorБУХ.Перечисления.ОтражениеВУСН.Принимаются;
				КонецЕсли;
				
				Если Параметры.ВидДокумента = "СписаниеТоваров"
					или Параметры.ВидДокумента = "ВозвратТоваровОтПокупателя"
					или Параметры.ВидДокумента = "ВозвратТоваровПоставщику" Тогда
					Товары.Себестоимость = Сумма;
				КонецЕсли;
				
				Товары.СчетУчета = COMConnectorБУХ.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
			КонецЦикла;
		КонецЕсли;
		//#***+Изменения*** Тасмаджиев 28/09/2018// ->>
	//КонецЕсли;
	//#***-Изменения*** Тасмаджиев 28/09/2018// <<-
КонецПроцедуры

Функция ПоискДокументаПоУникальномуИдентификаторуВ1СБухгалтерии(COMConnectorБУХ,ТекДок,ВидДокумента=Неопределено) Экспорт 
	Если ВидДокумента=Неопределено Тогда
		ВидДокумента = ТекДок.Ссылка.Метаданные().Имя;//21.08.2017, Юра
	КонецЕсли;
	
	Типп = COMConnectorБУХ.NewObject("ОписаниеТипов","ДокументСсылка."+ВидДокумента).Типы().Получить(0);
	ЗапросВПриёмнике = COMConnectorБУХ.NewObject("Запрос");
	ЗапросВПриёмнике.Текст="Выбрать Ссылка из Документ."+ВидДокумента+" Где Ссылка=&Ссылка";
	ЗапросВПриёмнике.УстановитьПараметр("Ссылка", COMConnectorБУХ.XMLЗначение(Типп, XMLСтрока(ТекДок.Ссылка)));
	Рез = ЗапросВПриёмнике.Выполнить();
	Если Рез.Пустой() Тогда
		//Нет документа
		Документ = COMConnectorБУХ.Документы[ВидДокумента].СоздатьДокумент();
		УИД = XMLСтрока(ТекДок);
		КлючУникальности = COMConnectorБУХ.NewObject("УникальныйИдентификатор",УИД);
		ТекСсылка = COMConnectorБУХ.Документы[ВидДокумента].ПолучитьСсылку(КлючУникальности);
		Документ.УстановитьСсылкуНового(ТекСсылка);
		Документ.Комментарий = "Передан из УТ10 на основании документа "+ТекДок;
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Документ = Выб.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	Возврат Документ;
КонецФункции

#КонецОбласти
