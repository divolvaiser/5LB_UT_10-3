// Copyright (C) 2012-2016 Engineer Mareev Enterprises

//	Функция РазрешенКЭкспорту возвращает Истина, если комплектация номенклатуры разрешен к экспорту.
Функция РазрешенКЭкспорту(КомплектацияНоменклатуры) Экспорт
	
	Если КомплектацияНоменклатуры.ПометкаУдаления Тогда
		Возврат Ложь;
	КонецЕсли;

	Если Не КомплектацияНоменклатуры.Проведен Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не КомплектацияНоменклатуры.Склад.EmeWmsУчет Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

//	Процедура ПометитьКЭкспорту помечает комплектацию номенклатуры к экспорту.
Процедура ПометитьКЭкспорту(КомплектацияНоменклатуры) Экспорт

	Если Не РазрешенКЭкспорту(КомплектацияНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуКомплектацийНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КомплектацияНоменклатуры.Установить(КомплектацияНоменклатуры.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.КЭкспорту = Истина;
		НаборЗаписей.Записать();
		Возврат;
	КонецЦикла;
	
  	НоваяЗапись = РегистрыСведений.EmeWmsПометкиКЭкспортуКомплектацийНоменклатуры.СоздатьМенеджерЗаписи();
	НоваяЗапись.КомплектацияНоменклатуры = КомплектацияНоменклатуры.Ссылка;
	НоваяЗапись.КЭкспорту = Истина;
    НоваяЗапись.Записать(); 
		 
КонецПроцедуры

//	Функция ПомеченКЭкспорту возвращает Истина, если комплектация номенклатуры помечена к экспорту.
Функция ПомеченКЭкспорту(КомплектацияНоменклатуры) Экспорт
	
	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуКомплектацийНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КомплектацияНоменклатуры.Установить(КомплектацияНоменклатуры.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Возврат Запись.КЭкспорту;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

//	Процедура ПодтвердитьЭкспорт подтверждает экспорт комплектации номенклатуры.
Процедура ПодтвердитьЭкспорт(КомплектацияНоменклатуры) Экспорт

	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуКомплектацийНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КомплектацияНоменклатуры.Установить(КомплектацияНоменклатуры.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.КЭкспорту = Ложь;
		Запись.ДатаЭкспорта = ТекущаяДата();
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

//	Процедура ПометитьКЭкспорту помечает комплектацию номенклатуры на событии при записи комплектации номенклатуры.
Процедура ПометитьКЭкспортуПриЗаписиКомплектацииНоменклатуры(Источник, Отказ) Экспорт

	ПометитьКЭкспорту(Источник);
		 
КонецПроцедуры

//	Процедура ЭкспортироватьКомплектацииНоменклатуры экспортирует комплектации номенклтатуры, помеченные к экспорту.
Процедура ЭкспортироватьКомплектацииНоменклатуры(ERPData) Экспорт
	
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	EmeWmsПометкиКЭкспортуКомплектацийНоменклатуры.КомплектацияНоменклатуры.Ссылка КАК Ссылка
		|ИЗ
		|	РегистрСведений.EmeWmsПометкиКЭкспортуКомплектацийНоменклатуры КАК EmeWmsПометкиКЭкспортуКомплектацийНоменклатуры
		|ГДЕ
		|	EmeWmsПометкиКЭкспортуКомплектацийНоменклатуры.КЭкспорту";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Счетчик = 0;
	
	Пока Выборка.Следующий() Цикл
		
		//	Защита от плохих данных
		Если Выборка.Ссылка = Null Тогда
			Продолжить;
		КонецЕсли;
			
		//	ВАЖНО! Транзакция источника сообщения должна быть внешней
		НачатьТранзакцию();
		Попытка    		
				
			EmeWmsERPEngine.BeginExport(ERPData, "erp", "wms", "repack");
			Попытка
				
				Если РазрешенКЭкспорту(Выборка.Ссылка) Тогда
					////	Вначале подтверждаем экспорт,
					//ПодтвердитьЭкспорт(Выборка.Ссылка);
					////	а только потом экспортируем, чтобы не потерять флажок КЭКспорту при параллельном изменении данных.
					ЭкспортироватьКомплектациюНоменклатуры(ERPData, Выборка.Ссылка);
					ПодтвердитьЭкспорт(Выборка.Ссылка); //НМА 06.12.17
					Счетчик = Счетчик + 1;
				КонецЕсли;
					
				EmeWmsERPEngine.CommitExport(ERPData);
				
			Исключение
				Сообщить(ОписаниеОшибки());
				EmeWmsERPEngine.RollbackExport(ERPData);
				ВызватьИсключение(ОписаниеОшибки());
			КонецПопытки;
				
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Ошибка = ОписаниеОшибки();
			Сообщить(Ошибка);
			ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Экспорт сообщения REPACK: " + Ошибка);
			EmeWmsУтилиты.СообщитьПоПочте(
				"Критическая ошибка экспорта сообщения REPACK",
				"ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС +
				"No: " + Выборка.Ссылка + Символы.ПС +
				Ошибка);
		КонецПопытки;
		
	КонецЦикла;
	
	Если Счетчик <> 0 Тогда
		Сообщить("Проэкспортировали сообщения REPACK (" + Счетчик + "шт)");
	КонецЕсли
	
КонецПроцедуры

//	Процедура ЭкспортироватьКомплектациюНоменклатуры экспортирует одну комплектацию номенклатуры.
Процедура ЭкспортироватьКомплектациюНоменклатуры(ERPData, КомплектацияНоменклатуры)
	
	//	Заголовок комплектации
	EmeWmsERPEngine.AppendHeaderLine(ERPData);
	ERPData.header.id             	= КомплектацияНоменклатуры.УникальныйИдентификатор();
	ERPData.header.repack_erp_no    = КомплектацияНоменклатуры.Номер;
	ERPData.header.whs_code 	  	= EmeWmsУтилиты.ПолучитьКодСклада(КомплектацияНоменклатуры.Склад);
	ERPData.header.vendor_code 		= "AIST";
	ERPData.header.reason_code      = "Z01";
	ERPData.header.comment        	= Лев(КомплектацияНоменклатуры.Комментарий, 128);
	Если КомплектацияНоменклатуры.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация Тогда
		ERPData.header.repack_mode	= 1;
	КонецЕсли;
	
	//	Строки комплектации
	EmeWmsERPEngine.SelectChild(ERPData, "lines");
	УИДСтроки = 0;
	Для Каждого СтрокаТовара Из КомплектацияНоменклатуры.Комплектующие Цикл
		УИДСтроки = УИДСтроки + 1;
		EmeWmsERPEngine.AppendChildLine(ERPData);
		ERPData.lines.id			= УИДСтроки;
		
		ERPData.lines.src_goods_id		= СтрокаТовара.Номенклатура.УникальныйИдентификатор();
		ERPData.lines.src_goods_code	= СокрЛП(СтрокаТовара.Номенклатура.Код);
		ERPData.lines.src_quantity		= СтрокаТовара.Количество * СтрокаТовара.Коэффициент;
		ERPData.lines.src_mu_code		= СокрЛП(СтрокаТовара.Номенклатура.БазоваяЕдиницаИзмерения.Код);
		
		ERPData.lines.dst_goods_id		= КомплектацияНоменклатуры.Номенклатура.УникальныйИдентификатор();
		ERPData.lines.dst_goods_code	= СокрЛП(КомплектацияНоменклатуры.Номенклатура.Код);
		ERPData.lines.dst_quantity		= КомплектацияНоменклатуры.Количество * КомплектацияНоменклатуры.Коэффициент;
		ERPData.lines.dst_mu_code		= СокрЛП(КомплектацияНоменклатуры.Номенклатура.БазоваяЕдиницаИзмерения.Код);
	КонецЦикла;		
			
КонецПроцедуры
