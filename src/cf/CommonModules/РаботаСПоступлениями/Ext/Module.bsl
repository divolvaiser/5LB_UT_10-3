

Процедура ПередЗаписьюПоступленияПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	#Если Клиент Тогда
		Если Источник.Товары.Найти(0,"Цена")<>Неопределено Тогда
			Сообщить ("Не все цены заполнены! Запись/проведение документа невозможна.");
			Отказ = Истина;
		КонецЕсли;
		
		//11.10.2017, Юра
		Если Константы._5ЛБ_НеПроводитьПоступлениеТоваровБезСерий.Получить() Тогда //23.10.2017, Юра
			Если Источник.Товары.Найти(Справочники.СерииНоменклатуры.ПустаяСсылка(),"СерияНоменклатуры")<>Неопределено Тогда
				Сообщить ("Не все серии заполнены! Запись/проведение документа невозможна.");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если (Источник.КурсДокументаБух<1) И (РежимЗаписи = РежимЗаписиДокумента.Проведение) Тогда
			Сообщить ("Не заполнена Сумма СЧФ! Проведение документа невозможно.");
			Отказ = Истина;
		КонецЕсли;

		
		Если Найти (Источник.Комментарий,"Создан по факту")>0 Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Источник.СкладОрдер) Тогда //НМА 11.07.17
			
			Если Источник.СкладОрдер.Родитель <> Справочники.Склады.НайтиПоКоду("000000008") Тогда
				Если (Источник.ДатаС = Дата(1,1,1)) ИЛИ (Источник.ДатаПо = Дата(1,1,1)) Тогда
					Если НЕ РольДоступна(Метаданные.Роли.Пользователь) Тогда
						Если (РежимЗаписи <> РежимЗаписиДокумента.ОтменаПроведения) И (Источник.ПометкаУдаления=Ложь) Тогда
							//КолДней = 0;
							//Если НЕ ВвестиЧисло(КолДней,"Через сколько дней приедет товар?") Тогда
							//	Сообщить ("Не указано количество дней ожидания поступления");
							//	Отказ = Истина;
							//КонецЕсли;
							//
							//Источник.ДниКорректировка = КолДней;
							Сообщить ("Укажите период ожидания поступления");
							Отказ = Истина;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		Иначе //НМА 11.07.17
			Сообщить("Укажите склад!"); //НМА 11.07.17
		КонецЕсли; //НМА 11.07.17
		
	#КонецЕсли
КонецПроцедуры

Процедура ПриПроведенииПоступленияОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	//***{+Добавления}*** Тасмаджиев 19/07/2018// ->>
	//***=!{Была перенесена подниска на событие   "ПриПроведенииПоступленияТоваровОбработкаПроведения" 
	//из  _5LB_Ценообразование._5LB_ПриПроведенииПоступленияТоваровОбработкаПроведения (Стр 2888 - 2924 )  
	//в РаботаСПоступлениями.ПриПроведенииПоступленияОбработкаПроведения так как она была задвоена.}!=*** ->>
	//НМА 27.12.17
	Если Не Отказ  Тогда
		//{+НАЧАЛО+Добавления} Автор: Тасмаджиев 19/06/2018//==============================================================================================
		//Сделана отдельная роль "_5LB_ПересчетСЦЗ" для запуска формирований установки цен СЦЗ
		Если РольДоступна(Метаданные.Роли._5LB_ЗапускПересчетаСЦЗ) Тогда
			//{+НАЧАЛО+Добавления} Автор: Тасмаджиев 13/06/2018//==============================================================================================
			//Проверка на то что документ поступления не из розницы
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	_5LB_СоответствиеСкладаИКонтрагента.Магазин.Ссылка КАК Магазин,
			|	_5LB_СоответствиеСкладаИКонтрагента.Склад КАК Склад,
			|	_5LB_СоответствиеСкладаИКонтрагента.Контрагент
			|ИЗ
			|	РегистрСведений._5LB_СоответствиеСкладаИКонтрагента КАК _5LB_СоответствиеСкладаИКонтрагента
			|ГДЕ
			|	_5LB_СоответствиеСкладаИКонтрагента.Склад = &Склад";
			
			Запрос.УстановитьПараметр("Склад",Источник.СкладОрдер);
			ВыборкаСклады  = Запрос.Выполнить().Выбрать();	
			Если НЕ ВыборкаСклады.Следующий()ИЛИ ПараметрыСеанса.ТекущийПользователь<>Справочники.Пользователи.НайтиПоНаименованию("Не авторизован")  Тогда 
				//{-КОНЕЦ-Добавления} Автор: Тасмаджиев 13/06/2018//==============================================================================================
				Если Константы._5ЛБ_ИспользоватьДляРасчетаСредняяЦенаЗакупки_и_СЦЗ_МашинаАлгоритм2017года.Получить() Тогда//31.10.2017, Юра
					ТестовыйРежим = Истина;
					ДокументПроводится = Истина;
					//_5LB_Ценообразование.ОбновитьЦеныЗакупок(Источник.Ссылка,Источник.Дата,ТестовыйРежим,ДокументПроводится); //НМА 23.01.18 Задача Шляхова Александра
					//Если НЕ НачалоДня(Источник.Дата) = НачалоДня(ТекущаяДата()) Тогда
					//Цены при неоперативном проведении документа «Поступление товаров и услуг» меняем по алгоритму установки цен для этого документа
					//и дополнительно устанавливаем новые цены для номенклатуры из документа, но на текущую дату
					_5LB_Ценообразование.ОбновитьЦеныЗакупок(Источник.Ссылка,ТекущаяДата(),ТестовыйРежим,ДокументПроводится); //НМА 23.01.18 Задача Шляхова Александра 
					//КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//***{-Добавления}*** Тасмаджиев 19/07/2018// <<-
	#Если Клиент Тогда
		//{+НАЧАЛО+Добавления} Автор: Тасмаджиев 07/06/2018//==============================================================================================
		//Для розницы данный код не должен отрабатывать
					
		Если  ЗначениеЗаполнено(Источник.Сделка)  Тогда
			
			Если ТипЗнч(Источник.Сделка.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И (Источник.ДокументОснование._5LB_Врозницу ) Тогда
				//***{-Редактирования}*** Тасмаджиев 16/08/2018// <<-
				//Задано полное условие на розничные документы
				//Ничего не делаем
				Возврат;
			КонецЕсли;
		
		
		Иначе
			//{-КОНЕЦ-Добавления} Автор: Тасмаджиев 07/06/2018//==============================================================================================
			Если Источник.СкладОрдер = Справочники.Склады.НайтиПоКоду("000000005") Тогда
				
				// < 16.08.17 Вялов - задача № 3792 (+ согл.с Д.Грухом) - новая роль "ПродажиКорпоративныеРуководитель" и "ПродажиКорпоративныеМенеджер" (в рамках устранения ереси в конфигурации)						
				СписокПользователей1 = ОбщегоНазначения5Lb.НайтиПользователейСРолью(Метаданные.Роли._5LB_ПродажиКорпоративныеРуководитель);
				СписокПользователей2 = ОбщегоНазначения5Lb.НайтиПользователейСРолью(Метаданные.Роли._5LB_ПродажиКорпоративныеМенеджер);
				Для Каждого ТекСтр Из СписокПользователей1 Цикл			
					Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
					Задача.Дата = ТекущаяДата();
					Задача.Исполнитель = ТекСтр;
					Задача.Наименование = "Проведено поступление № "+Источник.Номер;
					Задача.Оповещение=Истина;
					Задача.СрокИсполнения = ТекущаяДата()+900;
					Задача.СрокОповещения = ТекущаяДата()+300;
					Для Каждого ст из Источник.Товары Цикл
						Задача.Описание = Задача.Описание+ст.Номенклатура.Артикул+"     "+ст.Номенклатура+"   Кол = "+ст.Количество+Символы.ПС;
					КонецЦикла;
					Задача.Записать();
				КонецЦикла;	
				Для Каждого ТекСтр Из СписокПользователей2 Цикл			
					Задача = Задачи.ЗадачиПользователя.СоздатьЗадачу();
					Задача.Дата = ТекущаяДата();
					Задача.Исполнитель = ТекСтр;
					Задача.Наименование = "Проведено поступление № "+Источник.Номер;
					Задача.Оповещение=Истина;
					Задача.СрокИсполнения = ТекущаяДата()+900;
					Задача.СрокОповещения = ТекущаяДата()+300;
					Для Каждого ст из Источник.Товары Цикл
						Задача.Описание = Задача.Описание+ст.Номенклатура.Артикул+"     "+ст.Номенклатура+"   Кол = "+ст.Количество+Символы.ПС;
					КонецЦикла;
					Задача.Записать();
				КонецЦикла;				
				// 16.08.17 Вялов - задача № 3792 (+ согл.с Д.Грухом) - новая роль "ПродажиКорпоративныеРуководитель" и "ПродажиКорпоративныеМенеджер" (в рамках устранения ереси в конфигурации) >
				
			КонецЕсли;
			
				
		КонецЕсли;
		
				//***{+Изменения}*** Тасмаджиев 10/08/2018// ->>
			//***=!{Документооборот , эта часть кода будет обрабатывать поступления только на основной склад , поступления на розничные магазины НЕ обрабатывает}!=*** ->>
			Если ((РольДоступна(Метаданные.Роли.Пользователь)) и
				 (РежимПроведения <> РежимПроведенияДокумента.Неоперативный) и 
				 (Источник.СкладОрдер = Справочники.Склады.НайтиПоКоду("000000005"))) ИЛИ
				 ((РольДоступна(Метаданные.Роли.Advanced)) и 
				 (РежимПроведения <> РежимПроведенияДокумента.Неоперативный) и
				 (Источник.СкладОрдер = Справочники.Склады.НайтиПоКоду("000000005"))) Тогда
				
				Если Источник.Товары.Количество() = 0 Тогда
					возврат;
				КонецЕсли;
				Расхождения=0;
				Для Каждого ст из Источник.Товары Цикл
					Если ст.Количество<>ст.КоличествоПринято Тогда
						Ответ = Вопрос ("Уверены, что есть недостача или(и) излишки в поступлении?",РежимДиалогаВопрос.ДаНет,,,"ЙаВопросег");
						Если Ответ = КодВозвратаДиалога.Нет Тогда
							Отказ = Истина;
							возврат;
						КонецЕсли;
						
						Расхождения=1;
						
						НовПеремещ = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
						НовПеремещ.Дата = ТекущаяДата();
						НовПеремещ.Организация = Источник.Организация;
						НовПеремещ.ВалютаДокумента = Источник.ВалютаДокумента;
						НовПеремещ.Контрагент = Источник.Контрагент;
						НовПеремещ.ДоговорКонтрагента = Источник.ДоговорКонтрагента;
						НовПеремещ.КурсВзаиморасчетов=Источник.КурсВзаиморасчетов;
						НовПеремещ.КратностьВзаиморасчетов=Источник.КратностьВзаиморасчетов;
						НовПеремещ.ВидПоступления = Перечисления.ВидыПоступленияТоваров.НаСклад;
						НовПеремещ.Комментарий = "Создан по факту недостачи по поступлению "+Источник.Номер;
						НовПеремещ.ОтражатьВУправленческомУчете=Истина;
						НовПеремещ.СкладОрдер = Источник.СкладОрдер;
						НовПеремещ.Ответственный = ПараметрыСеанса.ТекущийПользователь.Ссылка;
						НовПеремещ.УчитыватьНДС=Истина;
						НовПеремещ.СуммаВключаетНДС=Истина;
						НовПеремещ.ДатаВходящегоДокумента = Источник.ДатаВходящегоДокумента;
						НовПеремещ.НомерВходящегоДокумента = Источник.НомерВходящегоДокумента;
						НовПеремещ.ДатаВходящегоДокументаЭлектронногоОбмена = Источник.ДатаВходящегоДокументаЭлектронногоОбмена;
						НовПеремещ.НомерВходящегоДокументаЭлектронногоОбмена = Источник.НомерВходящегоДокументаЭлектронногоОбмена;
						
						НовПеремещ2 = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
						НовПеремещ2.Дата = ТекущаяДата();
						НовПеремещ2.Организация = Источник.Организация;
						НовПеремещ2.ВалютаДокумента = Источник.ВалютаДокумента;
						НовПеремещ2.Контрагент = Источник.Контрагент;
						НовПеремещ2.ДоговорКонтрагента = Источник.ДоговорКонтрагента;
						НовПеремещ2.КурсВзаиморасчетов=Источник.КурсВзаиморасчетов;;
						НовПеремещ2.КратностьВзаиморасчетов=Источник.КратностьВзаиморасчетов;
						НовПеремещ2.ВидПоступления = Перечисления.ВидыПоступленияТоваров.НаСклад;
						НовПеремещ2.Комментарий = "Создан по факту излишек в поступлении "+Источник.Номер;
						НовПеремещ2.ОтражатьВУправленческомУчете=Истина;
						НовПеремещ2.СкладОрдер = Источник.СкладОрдер;
						НовПеремещ2.Ответственный = ПараметрыСеанса.ТекущийПользователь.Ссылка;
						НовПеремещ2.УчитыватьНДС=Истина;
						НовПеремещ2.СуммаВключаетНДС=Истина;
						
						//++ Кузнецов С.А. - Задача в МегаПлане "3137" - 12.04.2016
						НовПеремещ2.ДатаВходящегоДокумента = Источник.ДатаВходящегоДокумента;
						НовПеремещ2.НомерВходящегоДокумента = Источник.НомерВходящегоДокумента;
						НовПеремещ2.ДатаВходящегоДокументаЭлектронногоОбмена = Источник.ДатаВходящегоДокументаЭлектронногоОбмена;
						НовПеремещ2.НомерВходящегоДокументаЭлектронногоОбмена = Источник.НомерВходящегоДокументаЭлектронногоОбмена;
						//-- Кузнецов С.А. - 12.04.2016
						
						прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если Расхождения=1 Тогда
					Для Каждого стр из Источник.Товары Цикл
						Если стр.КоличествоМест = 1 Тогда
							НовСтр2 = НовПеремещ2.Товары.Добавить();
							НовСтр2.Номенклатура = стр.Номенклатура;
							НовСтр2.СерияНоменклатуры = стр.СерияНоменклатуры;//11.10.2017, Юра
							НовСтр2.СтавкаНДС=НовСтр2.Номенклатура.СтавкаНДС;
							Если стр.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
								ВыбЕд = Справочники.ЕдиницыИзмерения.Выбрать(,стр.Номенклатура);
								Пока ВыбЕд.Следующий() Цикл
									Если ВыбЕд.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
										НовСтр2.ЕдиницаИзмерения = ВыбЕд.Ссылка;
										НовСтр2.Коэффициент = ВыбЕд.Коэффициент;
										прервать;
									КонецЕсли;
								КонецЦикла;
							Иначе
								НовСтр2.ЕдиницаИзмерения = НовСтр2.Номенклатура.ЕдиницаХраненияОстатков;
								НовСтр2.Коэффициент = 1;
							КонецЕсли;
							НовСтр2.Количество = стр.КоличествоПринято;
							НовСтр2.Цена = стр.Цена;
							НовСтр2.ЦенаИзДокумента = стр.ЦенаИзДокумента;
							НовСтр2.СуммаИзДокумента = НовСтр2.Количество*НовСтр2.ЦенаИзДокумента;
							//++ Кузнецов С.А. - 30.06.2016
							НовСтр2.КодНоменклатурыПоставщика = стр.КодНоменклатурыПоставщика;
							НовСтр2.НаименованиеНоменклатурыПоставщика = стр.НаименованиеНоменклатурыПоставщика;
							НовСтр2.НомерГТДПоставщика = стр.НомерГТДПоставщика;
							//-- Кузнецов С.А. - 30.06.2016						
							ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр2, НовПеремещ2);
							ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр2, НовПеремещ2);
							продолжить;
						КонецЕсли;
						
						Если стр.Количество = стр.КоличествоПринято Тогда
							продолжить;
						КонецЕсли;
						
						Если стр.Количество>стр.КоличествоПринято Тогда
							НовСтр = НовПеремещ.Товары.Добавить();
							НовСтр.Номенклатура = стр.Номенклатура;
							НовСтр.СерияНоменклатуры = стр.СерияНоменклатуры;//11.10.2017, Юра
							НовСтр.СтавкаНДС=НовСтр.Номенклатура.СтавкаНДС;
							Если стр.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
								ВыбЕд = Справочники.ЕдиницыИзмерения.Выбрать(,стр.Номенклатура);
								Пока ВыбЕд.Следующий() Цикл
									Если ВыбЕд.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
										НовСтр.ЕдиницаИзмерения = ВыбЕд.Ссылка;
										НовСтр.Коэффициент = ВыбЕд.Коэффициент;
										прервать;
									КонецЕсли;
								КонецЦикла;
							Иначе
								НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
								НовСтр.Коэффициент = 1;
							КонецЕсли;
							НовСтр.Количество = стр.Количество-стр.КоличествоПринято;
							НовСтр.Цена = стр.Цена;
							НовСтр.СерияНоменклатуры = стр.СерияНоменклатуры;
							НовСтр.ЦенаИзДокумента = стр.ЦенаИзДокумента;
							НовСтр.СуммаИзДокумента = НовСтр.Количество*НовСтр.ЦенаИзДокумента;
							//++ Кузнецов С.А. - 30.06.2016
							НовСтр.КодНоменклатурыПоставщика = стр.КодНоменклатурыПоставщика;
							НовСтр.НаименованиеНоменклатурыПоставщика = стр.НаименованиеНоменклатурыПоставщика;
							НовСтр.НомерГТДПоставщика = стр.НомерГТДПоставщика;
							//-- Кузнецов С.А. - 30.06.2016						
							ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр, НовПеремещ);
							ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр, НовПеремещ);
						ИначеЕсли стр.Количество<стр.КоличествоПринято Тогда
							НовСтр2 = НовПеремещ2.Товары.Добавить();
							НовСтр2.Номенклатура = стр.Номенклатура;
							НовСтр2.СерияНоменклатуры = стр.СерияНоменклатуры;//11.10.2017, Юра
							НовСтр2.СтавкаНДС=НовСтр2.Номенклатура.СтавкаНДС;
							Если стр.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
								ВыбЕд = Справочники.ЕдиницыИзмерения.Выбрать(,стр.Номенклатура);
								Пока ВыбЕд.Следующий() Цикл
									Если ВыбЕд.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("778") Тогда
										НовСтр2.ЕдиницаИзмерения = ВыбЕд.Ссылка;
										НовСтр2.Коэффициент = ВыбЕд.Коэффициент;
										прервать;
									КонецЕсли;
								КонецЦикла;
							Иначе
								НовСтр2.ЕдиницаИзмерения = НовСтр2.Номенклатура.ЕдиницаХраненияОстатков;
								НовСтр2.Коэффициент = 1;
							КонецЕсли;
							НовСтр2.Количество = стр.КоличествоПринято-стр.Количество;
							НовСтр2.Цена = стр.Цена;
							НовСтр2.ЦенаИзДокумента = стр.ЦенаИзДокумента;
							НовСтр2.СуммаИзДокумента = НовСтр2.Количество*НовСтр2.ЦенаИзДокумента;
							//++ Кузнецов С.А. - 30.06.2016
							НовСтр2.КодНоменклатурыПоставщика = стр.КодНоменклатурыПоставщика;
							НовСтр2.НаименованиеНоменклатурыПоставщика = стр.НаименованиеНоменклатурыПоставщика;
							НовСтр2.НомерГТДПоставщика = стр.НомерГТДПоставщика;
							//-- Кузнецов С.А. - 30.06.2016						
							ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НовСтр2, НовПеремещ2);
							ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НовСтр2, НовПеремещ2);
							
						КонецЕсли;
						
					КонецЦикла;
					
					к=0;
					Пока к<Источник.Товары.Количество() Цикл
						Если Источник.Товары[к].КоличествоМест = 1 Тогда
							Источник.Товары.Удалить(к);
							продолжить;
						КонецЕсли;
						
						Если Источник.Товары[к].Количество>Источник.Товары[к].КоличествоПринято Тогда
							Источник.Товары[к].Количество = Источник.Товары[к].КоличествоПринято;
							Если Источник.Товары[к].Количество = 0 Тогда
								Источник.Товары.Удалить(к);
								продолжить;
							КонецЕсли;
							Источник.Товары[к].СуммаИзДокумента = Источник.Товары[к].ЦенаИзДокумента*Источник.Товары[к].Количество;
							ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(Источник.Товары[к], Источник);
							ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Источник.Товары[к], Источник);
							
						КонецЕсли;
						к=к+1;
					КонецЦикла;
					
					Если НовПеремещ.Товары.Количество()>0 Тогда
						Попытка
							НовПеремещ.Записать(РежимЗаписиДокумента.Запись);
						Исключение
							Сообщить (ОписаниеОшибки());
						КонецПопытки;
					КонецЕсли;
					
					Если НовПеремещ2.Товары.Количество()>0 Тогда
						Попытка
							НовПеремещ2.Записать(РежимЗаписиДокумента.Запись);
							//НовПеремещ2.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
							//Источник.Комментарий = Источник.Комментарий+"iddqd";
						Исключение
							Сообщить (ОписаниеОшибки());
						КонецПопытки;
					КонецЕсли;
					
					Источник.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
					
				КонецЕсли;
				
			КонецЕсли;

		//***{+Добавления}*** Тасмаджиев 10/08/2018// ->>
		//***=!{Перенесено из ПТУ модуль объекта при записи ,т.к этот код должен отрабатывать только при проведении ПТУ продавцом (приемка), при записи не должен}!=*** ->>
		/////////////////////
		//*/***Условия***////
		//*/1)только при проведении ПТУ
		//*/2)Только у Складов переведенных на розницу.Доп свойство склада Переведен на розницу = Истина.
		//*/3) //15062018 Только на клиенте должно работать
		//*/4) Только с основанием реализация у которого заполнен магазин и статус перевозки в пути и реквизит "_5LB_Врозницу" = Ложь.
			
		//***{+Добавления}*** Тасмаджиев 16/08/2018// ->>
		Если ЗначениеЗаполнено(Источник.Сделка)  Тогда
			
			Если ТипЗнч(Источник.Сделка.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И НЕ Источник.Сделка._5LB_Врозницу Тогда
				//***{-Добавления}*** Тасмаджиев 16/08/2018// <<-	
				
				//***{+Редактирования}*** Тасмаджиев 16/08/2018// ->>
				//Если ЗначениеЗаполнено(Источник._5LB_Магазин) и Источник._5LB_СтатусПеревозки  = Перечисления.СтатусПеревозки.ВПути И не Источник._5LB_Врозницу  Тогда
				Если ЗначениеЗаполнено(Источник.Сделка._5LB_Магазин) и Источник.Сделка._5LB_СтатусПеревозки  = Перечисления.СтатусПеревозки.ВПути  Тогда
					//***{-Редактирования}*** Тасмаджиев 16/08/2018// <<-
					
					//=!{Получаем список дополнительных свойств склада}!= ->>
					ОбработкаОбъектЗначенияСвойств = Обработки.ЗначенияСвойствОбъекта.Создать();
					ОбработкаОбъектЗначенияСвойств.НазначениеСвойств = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Склады;
					ОбработкаОбъектЗначенияСвойств.ОбъектОтбораЗначений =Источник.Сделка._5LB_Магазин;
					ОбработкаОбъектЗначенияСвойств.ОбъектОтбораНазначений = Источник.Сделка._5LB_Магазин; 
					ОбработкаОбъектЗначенияСвойств.ПрочитатьЗаполнитьСвойстваИЗначения();
					//=!{Получаем список дополнительных свойств склада}!= <<-
					//***=!{Добавлена проверка на заполненные доп свойства}!=*** ->>
					Если ЗначениеЗаполнено(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Переведен на розницу")) Тогда
						
						Если ЗначениеЗаполнено(ОбработкаОбъектЗначенияСвойств.ЭтотОбъект.СвойстваИЗначения.Найти(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Переведен на розницу")).Значение) Тогда
							
							Режим = РежимДиалогаВопрос.ДаНет;
							Текст = "ru = ""Вы подтверждаете окончание приемки товаров?"";"
							+ " en = ""Do you want to continue?""";
							Ответ = Вопрос(НСтр(Текст), Режим, 0);
							
							Если Ответ = КодВозвратаДиалога.Нет Тогда
								
								Отказ = Истина;
								Возврат;
								
							Иначе
								
								Если ТипЗнч(Источник.ДокументОснование.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг")Тогда
									Источник._5LB_ПриемкаТовараЗакончена = Истина;
									// РеализацияТоваровУслуг Изменение статуса на доставлено
									РеализацияТоваровУслуг = Источник.ДокументОснование.ПолучитьОбъект();
									РеализацияТоваровУслуг._5LB_СтатусПеревозки = Перечисления.СтатусПеревозки.Доставлено;
									РеализацияТоваровУслуг.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
									
								КонецЕсли;
								//{+НАЧАЛО+Добавления} Автор: Тасмаджиев 07/06/2018//=============================================================================================
								//заполняем колонку Количество по колонке КоличествоПринято
								Для каждого Стр из Источник.Товары Цикл
									
									Стр.Количество = Стр.КоличествоПринято;
									
								КонецЦикла;
								//{-КОНЕЦ-Добавления} Автор: Тасмаджиев 07/06/2018//==============================================================================================
								
								
								Источник._5LB_ПриемкаТовараЗакончена = Истина;
								ЕстьРасхождения = ПроверитьРасхожденияКоличестваТоваров(Источник);
								
								Если ЕстьРасхождения Тогда
									
									Режим = РежимДиалогаВопрос.ДаНет;
									Текст = "ru = ""ВЫ ПОДТВЕРЖДАЕТЕ НАЛИЧИЕ РАСХОЖДЕНИЙ ???"";";
									Ответ = Вопрос(НСтр(Текст), Режим, 0);
									Если Ответ = КодВозвратаДиалога.Нет Тогда
										
										Отказ = Истина;
										Возврат;
										
									КонецЕсли;
									
									//================================================!{АктОРасхожденияхПослеПриемки_УТ11 Создание}!================================================
									АктОРасхожденияхПослеПриемки = Документы.АктОРасхожденияхПослеПриемки_УТ11.СоздатьДокумент();
									АктОРасхожденияхПослеПриемки.Заполнить(Источник.Ссылка);
									АктОРасхожденияхПослеПриемки.Записать(РежимЗаписиДокумента.Запись,);
									АктОРасхожденияхПослеПриемки.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);
									
									ОткрытьЗначение(АктОРасхожденияхПослеПриемки);
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
					//***{+Добавления}*** Тасмаджиев 16/08/2018// ->>
				КонецЕсли;
				
			КонецЕсли;
			//***{-Добавления}*** Тасмаджиев 16/08/2018// <<-
			
		КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

//***{+Добавления}*** Тасмаджиев 10/08/2018// ->>
//***=!{Документооборот}!=*** ->>
//Проверяет расхождения Количество и КоличествоПринято 
//МассивСтрокРасхождений - помещаются строки с расхождениями.
Функция ПроверитьРасхожденияКоличестваТоваров(Источник)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.НомерСтроки
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.КоличествоПлан <> ПоступлениеТоваровУслугТовары.КоличествоПринято
	               |	И ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Источник.Ссылка);
	ВыборкаСтрок = Запрос.Выполнить().Выбрать();
	Если  ВыборкаСтрок.Следующий() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции //***{-Добавления}*** Тасмаджиев 10/08/2018// <<-

// Процедура обновления средней цены закупки при проведении ПТУ "День в день"
//
// Параметры:
//           - "Источник" - ДокументОбъект.ПоступлениеТоваровУслуг (Обязательный) 
Процедура ОбновитьСредниеЗакупЦены (Источник) Экспорт
	
	Если (Источник.ОтражатьВБухгалтерскомУчете) И (Источник.СкладОрдер = Справочники.Склады.НайтиПоКоду("547")) Тогда //уходим - это бонусные товары
		Возврат;
	КонецЕсли;
	
	СредТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000015"); // "СредняяЦенаЗакупки" 
	
	Док = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	// 07.11.16 Вялов - задача Мегаплан 3934
	Док.Дата = ТекущаяДата();
	//Док.Дата = ОбщегоНазначения5LB.ПолучитьВремяПоследнегоДокументаНаДату("УстановкаЦенНоменклатуры", КонецДня(ТекущаяДата()) + 1) + 1;
	Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	НовДокСтр = Док.ТипыЦен.Добавить();
	НовДокСтр.ТипЦен = СредТипЦен;
	
	ТМПТабНом = Источник.Товары.Выгрузить(,"Номенклатура");
	ТМПТабНом.Свернуть("Номенклатура");
	
	РазвёрнутаяПоГруппамТаб = РазвернутьТаблицуПоНомГруппам(ТМПТабНом);
	
	Для Каждого стр из РазвёрнутаяПоГруппамТаб Цикл
		НовДокСтрТов = Док.Товары.Добавить();
		НовДокСтрТов.Номенклатура = стр.Номенклатура;
		НовДокСтрТов.Цена = ПолучитьСебест(стр.Номенклатура);
		НовДокСтрТов.ТипЦен = СредТипЦен;
		НовДокСтрТов.Валюта = СредТипЦен.ВалютаЦены;
		ЕдВыб = Справочники.ЕдиницыИзмерения.Выбрать(,стр.Номенклатура);
		Пока ЕдВыб.Следующий() Цикл
			Если стр.Номенклатура.БазоваяЕдиницаИзмерения = ЕдВыб.ЕдиницаПоКлассификатору Тогда
				НовДокСтрТов.ЕдиницаИзмерения = ЕдВыб.Ссылка;
				прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗначениеЗаполнено(НовДокСтрТов.ЕдиницаИзмерения) Тогда
			Сообщить ("Проблема с единицей измерения у товара "+стр.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	Док.Комментарий = "Создан машиной для обновления сред.цены по  "+Источник;
	
	ОШ = 0;
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ОШ=1;
		Сообщить ("НЕ удалось обновить средние цены!"+ОписаниеОшибки());
	КонецПопытки;
	

	// 05.04.17 Вялов - закомментировал обратно - письмо Агафонова Ю. - 05.04.17 10:40 
	// 03.04.17 Вялов - раскомментировано по письменному укащанию рук.IT Иванова И. - письмо 03.04.2017 17:20
	// 29.12.16 Вялов - распоряжение коммерческого директора, согласовано с рук.IT Ивановым И.
	 //если есть уже цена 5LB_Artem - игнорировать! (устное обсуждение алгоритма 29.12.16 в 12:54 - 13:15)
	 //решили вообще пока исключить алгоритм - т.е. закомментировать !!!!!
	 
	// Если ОШ=0 Тогда
	//	СравнитьСредниеЦеныС5LB(Источник,РазвёрнутаяПоГруппамТаб);
	//	Если Источник.ВалютаДокумента<>Справочники.Валюты.НайтиПоКоду("643") Тогда //не рубли
	//		Ценообразование.УстановкаКурсовойНаценки(РазвёрнутаяПоГруппамТаб.ВыгрузитьКолонку("Номенклатура"));
	//	КонецЕсли;
	//	Ценообразование.АнализКурсовойНаценки(РазвёрнутаяПоГруппамТаб.ВыгрузитьКолонку("Номенклатура"),Источник);
	//КонецЕсли; 	
	
	
	
	// 05.04.17 Вялов - создана отдельная процедура (для СЦЗ) - указание (устно) Иванов, утв. Агафонов - 05.04.17 12:24
	Если ОШ=0 Тогда
		// < 10.04.17 Вялов - распоряжение руководителя ИТ Иванова И. 10:53 - в этом алгоритме не должны создаваться док-ты с ценой 5LB!!!!!
		//СравнитьСредниеЦеныС5LB(Источник,РазвёрнутаяПоГруппамТаб);
		// 10.04.17 Вялов >
		Если Источник.ВалютаДокумента<>Справочники.Валюты.НайтиПоКоду("643") Тогда //не рубли
			Ценообразование.УстановкаКурсовойНаценкиСЦЗ(РазвёрнутаяПоГруппамТаб.ВыгрузитьКолонку("Номенклатура"));
		КонецЕсли;
		Ценообразование.АнализКурсовойНаценкиСЦЗ(РазвёрнутаяПоГруппамТаб.ВыгрузитьКолонку("Номенклатура"),Источник);
	КонецЕсли; 
	

	
КонецПроцедуры

Процедура СравнитьСредниеЦеныС5LB(Источник,РазвёрнутаяПоГруппам)
	
	//++ Кузнецов С.А. - Наценка от значения в РС "Рекомендованная наценка" - Задача в МегаПлане №3329 - 31.05.2016
	//++ Кузнецов С.А. - Если наценка не равна рекомендованной наценки, устанавливаем рекомендованную или 32% - 01.06.2016
	//++ Кузнецов С.А. - Добавление признака "Использование рекомендованной оценки" - 06.06.2016
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦЛБ.Номенклатура,
	             |	ЦЛБ.Цена КАК ЦенаЛБ,
	             |	ЦСредняя.Цена КАК ЦенаСред,
	             |	ЕСТЬNULL(РНаценка.Наценка, 32) КАК РекомендованнаяНаценкаБренда,
	             |	ЕСТЬNULL(РНаценка.Наценка, 0) КАК ИспользуетсяРекомендованнаяНаценка
	             |ИЗ
	             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонецДня, ТипЦен = &ЛБ) КАК ЦЛБ
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонецДня, ТипЦен = &Средняя) КАК ЦСредняя
	             |		ПО ЦЛБ.Номенклатура = ЦСредняя.Номенклатура
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РекомендованнаяНаценка.СрезПоследних(&КонецДня, ) КАК РНаценка
	             |		ПО ЦЛБ.Номенклатура.Родитель = РНаценка.Номенклатура
	             |ГДЕ
	             |	ЦЛБ.Номенклатура В(&СпискоТоваров)
	             |	И 100 * ((ЦЛБ.Цена - ЕСТЬNULL(ЦСредняя.Цена, 0)) / ВЫБОР
	             |			КОГДА ЦСредняя.Цена = 0
	             |				ТОГДА 1
	             |			ИНАЧЕ ЕСТЬNULL(ЦСредняя.Цена, 1)
				 //07.04.2017 В случае если последняя входящая цена + рекомендованная наценка меньше текущей 5lb, текущая розничная цена (5lb) изменению не подлежит
				 |		КОНЕЦ) < ЕСТЬNULL(РНаценка.Наценка, 32)";
				 //|		КОНЕЦ) <> ЕСТЬNULL(РНаценка.Наценка, 32)";
	
	Запрос.УстановитьПараметр("ЛБ", Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000020")); // 5lb_Artem
	Запрос.УстановитьПараметр("Средняя",Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000015")); // "СредняяЦенаЗакупки"
	Запрос.УстановитьПараметр("СпискоТоваров",РазвёрнутаяПоГруппам.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДата()));	
	//-- Кузнецов С.А. - 31.05.2016 / 01.06.2016 / 06.06.2016	
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выб = Рез.Выбрать();
	ЛБ = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000020");
	
	Док = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	// 07.11.16 Вялов - задача Мегаплан 3934
	Док.Дата = ТекущаяДата();
	//Док.Дата = ОбщегоНазначения5LB.ПолучитьВремяПоследнегоДокументаНаДату("УстановкаЦенНоменклатуры", КонецДня(ТекущаяДата()) + 1) + 1;
	Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	НовДокСтр = Док.ТипыЦен.Добавить();
	НовДокСтр.ТипЦен = ЛБ;

	Пока Выб.Следующий() Цикл
		НовДокСтрТов = Док.Товары.Добавить();
		НовДокСтрТов.Номенклатура = Выб.Номенклатура;
		ЕдВыб = Справочники.ЕдиницыИзмерения.Выбрать(,Выб.Номенклатура);
		Пока ЕдВыб.Следующий() Цикл
			Если Выб.Номенклатура.БазоваяЕдиницаИзмерения = ЕдВыб.ЕдиницаПоКлассификатору Тогда
				НовДокСтрТов.ЕдиницаИзмерения = ЕдВыб.Ссылка;
				прервать;
			КонецЕсли;
		КонецЦикла;
		
		//++ Кузнецов С.А. - Наценка от значения в РС "Рекомендованная наценка" - Задача в МегаПлане №3329 - 31.05.2016 
		//++ Кузнецов С.А. - Наценку делаем если есть рекомендованная, иначе не менее 32% (Больше можно) - 06.06.2016		
		ценаРекомендованная = ОКР(((Выб.ЦенаСред/100)*Выб.РекомендованнаяНаценкаБренда)+Выб.ЦенаСред,-1,1);
		Если Выб.ИспользуетсяРекомендованнаяНаценка Тогда
			НовДокСтрТов.Цена = ценаРекомендованная;
		Иначе
			цена_32 = ОКР(((Выб.ЦенаСред/100)*32)+Выб.ЦенаСред,-1,1);
			Если цена_32 > Выб.ЦенаЛБ Тогда
				НовДокСтрТов.Цена = цена_32;
			//++ Кузнецов С.А. - перезаписывем туже цену 5lB_Artem - 17.06.2016
			Иначе
				НовДокСтрТов.Цена = Выб.ЦенаЛБ;			
			//-- Кузнецов С.А. - 17.06.2016
			КонецЕсли;	
		КонецЕсли;	
		//-- Кузнецов С.А. - 31.05.2016 / 06.06.2016	
		
		Если НЕ ЗначениеЗаполнено(НовДокСтрТов.ЕдиницаИзмерения) Тогда
			Сообщить ("Проблема с единицей измерения у товара "+Выб.Номенклатура);
		Иначе
			Если НовДокСтрТов.ЕдиницаИзмерения.Коэффициент>1 Тогда 
				ТМП = Окр(НовДокСтрТов.Цена/НовДокСтрТов.ЕдиницаИзмерения.Коэффициент)*НовДокСтрТов.ЕдиницаИзмерения.Коэффициент;
				НовДокСтрТов.Цена = ТМП;
			КонецЕсли;
		КонецЕсли;
		НовДокСтрТов.ТипЦен = ЛБ;
		НовДокСтрТов.Валюта = ЛБ.ВалютаЦены;
	КонецЦикла;
	Док.Комментарий = "Создан машиной для исправления косяка с розничной ценой. Основание  "+Источник;
	
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		
	КонецПопытки;
		
КонецПроцедуры

// Функция определения средней себестоимости номенклатуры 
//
// Параметры:
//           - "Ном" - ссылка на элемент номенклатуры (Обязательный) 
Функция ПолучитьСебест(Ном)
	
	//++ Кузнецов С.А. - Меняем алгоритм для расчета (Остатки по партиям за последний год) - 15.02.2016
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.ДокументОприходования,
	|	Рег.СтоимостьОстаток,
	|	ЕСТЬNULL(Рег.КоличествоОстаток / Ед.Коэффициент, 1) КАК КоличествоОстаток,
	|	Рег.Номенклатура
	|ПОМЕСТИТЬ ТЗПартии
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(, Качество = &Новый) КАК Рег
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК Ед
	|		ПО Рег.Номенклатура = Ед.Владелец
	|			И Рег.Номенклатура.БазоваяЕдиницаИзмерения = Ед.ЕдиницаПоКлассификатору
	|ГДЕ 
	|   <УсловиеПоНоменклатуреИлиНоменклатурнойГруппе> 
	|	И Рег.Склад <> &Развитие
	|   И Рег.Склад <> &Резервный
	|	И Рег.СтоимостьОстаток > 0
	|	И Рег.КоличествоОстаток > 0
	|	И Рег.ДокументОприходования.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&ТекДата, Год, -1) И &ТекДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТЗПартии.СтоимостьОстаток) / СУММА(ТЗПартии.КоличествоОстаток) КАК Себест
	|ИЗ
	|	ТЗПартии КАК ТЗПартии";
		
	Если (ЗначениеЗаполнено(Ном.НоменклатурнаяГруппа)) И (Ном.НоменклатурнаяГруппа.Родитель = Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000717")) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "<УсловиеПоНоменклатуреИлиНоменклатурнойГруппе>", " Рег.Номенклатура.НоменклатурнаяГруппа = &Ном ");   
		Запрос.УстановитьПараметр("Ном",Ном.НоменклатурнаяГруппа);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "<УсловиеПоНоменклатуреИлиНоменклатурнойГруппе>", " Рег.Номенклатура = &Ном ");   
		Запрос.УстановитьПараметр("Ном",Ном);
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Новый",Справочники.Качество.Новый);	
	Запрос.УстановитьПараметр("Развитие",Справочники.Склады.НайтиПоКоду("547"));
	Запрос.УстановитьПараметр("ТекДата",КонецДня(ТекущаяДата()));
	
	//++ Кузнецов С.А. - Исключаем остатки резервного склада - 25.02.2016	
	Запрос.УстановитьПараметр("Резервный",Справочники.Склады.НайтиПоКоду("5"));
	//-- Кузнецов С.А. - 25.02.2016
	
	Рез = Запрос.Выполнить().Выбрать();
	Рез.Следующий();
	Возврат Рез.Себест;
	//-- Кузнецов С.А. - 15.02.2016
	 
 КонецФункции

Функция РазвернутьТаблицуПоНомГруппам(Табл)
		
	Если Табл.Количество()=0 Тогда
		Возврат Неопределено;
	КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Р.НоменклатурнаяГруппа КАК ЦеноваяГруппа
	               |ПОМЕСТИТЬ ТзЦеныГрупп
	               |ИЗ
	               |	Справочник.Номенклатура КАК Р
	               |ГДЕ
	               |	НЕ Р.Ссылка В ИЕРАРХИИ (&Утиль)
	               |	И Р.НоменклатурнаяГруппа <> &Пустая
	               |	И Р.НоменклатурнаяГруппа.Родитель = &ЦГрупп
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Р.НоменклатурнаяГруппа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Ном.Ссылка КАК Номенклатура,
	               |	ТзЦеныГрупп.ЦеноваяГруппа,
	               |	0 КАК Обработано
	               |ИЗ
	               |	ТзЦеныГрупп КАК ТзЦеныГрупп
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
	               |		ПО ТзЦеныГрупп.ЦеноваяГруппа = Ном.НоменклатурнаяГруппа
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТзЦеныГрупп.ЦеноваяГруппа";

	Запрос.УстановитьПараметр("Тип",Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000020")); //5lb_Artem
	Запрос.УстановитьПараметр("Утиль",Справочники.Номенклатура.НайтиПоКоду("445"));
	Запрос.УстановитьПараметр("Пустая",Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЦГрупп",Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000717"));
	
	ТабЦеновыхГрупп = Запрос.Выполнить().Выгрузить();
	
	ТабНовых = Новый ТаблицаЗначений;
	ТабНовых.Колонки.Добавить("Номенклатура");
		
	
	Для Каждого ст из Табл Цикл
		Если НЕ ЗначениеЗаполнено(ст.Номенклатура.НоменклатурнаяГруппа) Тогда
			продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура;
		Отбор.Вставить("ЦеноваяГруппа",ст.Номенклатура.НоменклатурнаяГруппа);
		ТекГруппа = ТабЦеновыхГрупп.НайтиСтроки(Отбор);
		Если ТекГруппа.Количество()=0 Тогда
			продолжить;
		КонецЕсли;
		
		Если ТекГруппа[0].Обработано = 1 Тогда
			продолжить;
		КонецЕсли;
		
			Для Каждого стр из ТекГруппа Цикл
				стр.Обработано = 1;
				Если Табл.Найти(стр.Номенклатура,"Номенклатура")<>Неопределено Тогда
					продолжить;
				КонецЕсли;
				
				НовТ = ТабНовых.Добавить();
				НовТ.Номенклатура = стр.Номенклатура;
			КонецЦикла;
	КонецЦикла;
	
	Если ТабНовых.Количество()>0 Тогда
		Для Каждого ст из ТабНовых Цикл
			Нов = Табл.Добавить();
			Нов.Номенклатура = ст.Номенклатура;
		КонецЦикла;
	КонецЕсли;
		
	
	Возврат Табл;
КонецФункции

//06082017 Контроль отрицательных остатков в поступлениях. Рустам. 
Процедура КонтрольПроведенияПоступленияОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	#Если Клиент Тогда
		//Если Источник.Проведен Тогда
		//	Возврат;
		//КонецЕсли;
		
		Если НЕ РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
			Возврат;
		КонецЕсли;
		
		Если Источник.НеКонтролироватьОстатки Тогда
			Возврат;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Таб.Номенклатура
		|ПОМЕСТИТЬ ТаблицаТоваровИзДока
		|ИЗ
		|	&Таблица КАК Таб
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаТоваровИзДока.Номенклатура,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВРезерве.КоличествоОстаток, 0) КАК Свободный
		|ИЗ
		|	ТаблицаТоваровИзДока КАК ТаблицаТоваровИзДока
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&КонДата,
		|				Склад = &Склад
		|					И Номенклатура В (&Список)) КАК ТоварыНаСкладахОстатки
		|		ПО ТаблицаТоваровИзДока.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(
		|				&КонДата,
		|				Склад = &Склад
		|					И Номенклатура В (&Список)) КАК ТоварыВРезерве
		|		ПО ТаблицаТоваровИзДока.Номенклатура = ТоварыВРезерве.Номенклатура
		|ГДЕ
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВРезерве.КоличествоОстаток, 0) < 0";
		
		
		Запрос.УстановитьПараметр("КонДата",ТекущаяДата());
		Запрос.УстановитьПараметр("Склад",Источник.СкладОрдер);
		Запрос.УстановитьПараметр("Список",Источник.Товары.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("Таблица",Источник.Товары);
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		Сообщить ("Обнаружены отрицательные остатки по следующим товарам:",СтатусСообщения.Важное);
		
		Выб = Рез.Выбрать();
		ТемаПисьма = "Обнаружены отрицательные остатки по "+Строка(Источник);
		ТелоПисьма = "";
		Пока Выб.Следующий() Цикл
			
			Сообщить (Строка(Выб.Номенклатура)+". Остаток="+Строка(Выб.Свободный));
			ТелоПисьма = ТелоПисьма+Строка(Выб.Номенклатура)+". Остаток="+Строка(Выб.Свободный)+Символы.ПС;
		КонецЦикла;
		Сообщить ("-------------------------------------------------------------");
		
		СоздатьОчередьПисем(ТемаПисьма,ТелоПисьма);
		
		
		Отказ = Истина;
	#КонецЕсли
КонецПроцедуры

Процедура СоздатьОчередьПисем (ТемаПисьма, ТелоПисьма)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контакты.Представление КАК Адрес
	               |ИЗ
	               |	РегистрСведений.СоставГруппРассылкиЭлектроннойПочты КАК Группа
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК Контакты
	               |		ПО Группа.ОбъектРассылки = Контакты.Объект
	               |ГДЕ
	               |	Контакты.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	               |	И Контакты.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя)
	               |	И Группа.ГруппаРассылки = &РассылкаПоступления";
	Запрос.УстановитьПараметр("РассылкаПоступления",Справочники.ГруппыПочтовойРассылки.НайтиПоНаименованию("РассылкаПоступления"));
	
	Выб = Запрос.Выполнить().Выбрать();
	
	Пока Выб.Следующий() Цикл
		ТекАдрес = СокрЛП(Выб.Адрес);
		Запись = РегистрыСведений.ОчередьПисем.СоздатьМенеджерЗаписи();
		Запись.Получатель = ТекАдрес;
		Запись.Период = ТекущаяДата();
		Запись.Тема = ТемаПисьма;
		Запись.ТелоПисьма = ТелоПисьма;
		
		//Попытка
			Запись.Записать();
		//Исключение
		//КонецПопытки;
		
	КонецЦикла;

	
	
КонецПроцедуры
//06082017