
//Обмен данными с Бухгалтерией теперь в _5LB_ОбменСДругимиБазами //13.09.2017, Юра

Процедура ПриЗаписиОРППриЗаписи(Источник, Отказ) Экспорт
//	
//	//11.04.2017, Юра
//	//Задача (Иванов Иван): не передавать в 1С:Бухгалтерию ОРП по складу "Павелецкая". 
//	Если ЗначениеЗаполнено(Источник.Склад) Тогда
//		Если СОКРЛП(Источник.Склад.Код) = "570" Тогда
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	ЭтоСклад5ЛБ = _5LB_РаботаСНесколькимиЮрЛицами.ЭтоСклад5ЛБ(Источник.Дата,Источник.Склад);//02.08.2017, Юра
//	//++ Кузнецов С.А. - Для проверки режима работы (тестирование) - 08.07.2016
//	Если НЕ Константы.ИспользоватьТестовоеПодключениеБП30.Получить() Тогда
//		Если ЭтоСклад5ЛБ Тогда //02.08.2017, Юра //_5LB_РаботаСНесколькимиЮрЛицами.ЭтоСклад5ЛБ(Источник.Дата,Источник.Склад) Тогда //19.07.2017, Юра
//			Бух = _5LB_ОбменСДругимиБазами.ПодключитьсяПоCOM("1cserv","C8_BUH_30");
//		Иначе
//			Бух = _5LB_ОбменСДругимиБазами.ПодключитьсяПоCOM("1cserv","BUH_VitaFood");
//			ТекЮрЛицо = _5LB_РаботаСНесколькимиЮрЛицами.ОпределитьЮрЛицоПоСкладу(Источник.Дата,Источник.Склад);//02.08.2017, Юра
//		КонецЕсли;
//	Иначе
//		Бух = Подключиться_БП30_Тестирование();
//	КонецЕсли;	
//	//-- Кузнецов С.А. - 08.07.2016
//		
//	Если Бух = Неопределено Тогда
//		Отказ = Истина;
//		Сообщить ("Не удалось подключиться к нужной базе");
//		Отказ = Истина;
//		возврат;
//	КонецЕсли;
//	
//	НовОРПВБух = ПоискВПриёмнике(Бух,Источник.Ссылка);
//	Если НовОРПВБух.ЭтоНовый() Тогда
//		УИД = XMLСтрока(Источник.Ссылка);
//		КлючУникальности = Бух.NewObject("УникальныйИдентификатор",УИД);
//		ТекСсылка = Бух.Документы.ОтчетОРозничныхПродажах.ПолучитьСсылку(КлючУникальности);
//		НовОРПВБух.УстановитьСсылкуНового(ТекСсылка);
//		НовОРПВБух.Комментарий = Источник.Номер;
//	КонецЕсли;
//	НовОРПВБух.Дата = Источник.Дата;
//	//19.06.2017 Новые организации
//	Если Источник.Склад.Код = "000000005" Тогда
//		НовОРПВБух.Организация = Бух.Справочники.Организации.НайтиПоКоду("00-000004"); //Глобал трейд
//		НовОРПВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду("00-000001"); 
//		НовОРПВБух.СуммаВключаетНДС = Ложь;
//	Иначе
//		Если ЭтоСклад5ЛБ Тогда //02.08.2017, Юра
//			//оставим как было 02.08.2017, Юра
//			НовОРПВБух.Организация = Бух.Справочники.Организации.НайтиПоКоду("00-000001");
//			НовОРПВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(Источник.Склад.Код);
//		Иначе
//			//Поиск организации по-новому 02.08.2017, Юра
//			НовОРПВБух.Организация = _5LB_ОбменСДругимиБазами.ПоискОрганизацииИлиКонтрагентаВ1СБухгалтерии(Бух,ТекЮрЛицо.ИНН,ТекЮрЛицо.КПП,"Организации");
//			//а подразделение найдем чуть позже (после склада)
//		КонецЕсли;
//		
//		НовОРПВБух.СуммаВключаетНДС = Истина; //оставим как было 02.08.2017, Юра
//	КонецЕсли;
//	
//	НовОРПВБух.Склад = Бух.Справочники.Склады.НайтиПоКоду(Источник.Склад.Код);
//	
//	//Для юр.лиц на УСН подразделение будем брать как ссылку в справочнике "Склады" 02.08.2017, Юра
//	Если НЕ ЭтоСклад5ЛБ Тогда
//		НовОРПВБух.ПодразделениеОрганизации = НовОРПВБух.Склад.ПодразделениеОрганизации;
//	КонецЕсли;
//	
//	НовОРПВБух.СчетКасса = Бух.ПланыСчетов.Хозрасчетный.КассаПлатежногоАгента;
//	НовОРПВБух.ВидОперации = Бух.Перечисления.ВидыОперацийОтчетОРозничныхПродажах.ОтчетККМОПродажах;
//	
//	//++ Бажибин М.В. - 
//	// Бухгалтерия завяла новое подразделение. Должно работать с 01.01.2016
//	// ставим новый костыль
//	//Если Источник.Дата >= '20160101' И Источник.Склад.Код = "000000005" Тогда
//	//	НовОРПВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду("00-000009"); 
//	//Иначе
//	//	НовОРПВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(Источник.Склад.Код);
//	//КонецЕсли;
//	//-- Бажибин М.В. - 15.01.2016	
//	
//	НовОРПВБух.ВалютаДокумента = Бух.Справочники.Валюты.НайтиПоКоду("643");
//	НовОРПВБух.КурсДокумента=1;
//	НовОРПВБух.КратностьДокумента=1;
//	//НовОРПВБух.Комментарий = Источник.Номер;
//	
//	НовОРПВБух.Товары.Очистить();
//	Для Каждого ст из Источник.Товары Цикл
//		
//		Товары = НовОРПВБух.Товары.Добавить();
//		Товары.Номенклатура = ПолучитьНоменклатуруВПриёмнике (Бух,ст.Номенклатура);
//		Товары.Количество = ст.Количество;
//		
//		//19.06.2017 Новые организации
//		Если Источник.Склад.Код = "000000005" ИЛИ НЕ ЭтоСклад5ЛБ Тогда
//			Товары.СтавкаНДС = Бух.Перечисления.СтавкиНДС.БезНДС; 
//			Товары.СуммаНДС = 0;
//		Иначе
//			Товары.СтавкаНДС = Бух.Перечисления.СтавкиНДС.НДС18; 
//			Товары.СуммаНДС = ст.СуммаНДС;
//		КонецЕсли;
//		
//		Товары.Сумма = ст.Сумма;
//		Товары.Цена = ст.Цена;
//		
//		//++ Кузнецов С.А. - Для оперативного проведения меняем с 004 на 41 - 08.07.2016
//		Если Источник.Дата >= Дата(2016, 07, 11) Тогда
//			Товары.СчетУчета = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
//			Товары.СчетДоходов = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
//			Товары.Субконто = Товары.Номенклатура.НоменклатурнаяГруппа;
//			Товары.СчетРасходов = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
//			Товары.СчетУчетаНДСПоРеализации = ?(Источник.Склад.Код = "000000005",Бух.ПланыСчетов.Хозрасчетный.ПустаяСсылка(),Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03"));
//		Иначе	
//			Товары.СчетУчета = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("004.01");
//		КонецЕсли;
//		//-- Кузнецов С.А. - 08.07.2016
//		
//	КонецЦикла;
//	
//	//++ Кузнецов С.А. - Добавляем оплату по платежным картам  - 08.07.2016
//	НовОРПВБух.Оплата.Очистить();
//	Для Каждого стрОплатыПлКартами Из Источник.ОплатаПлатежнымиКартами Цикл
//		новСтрОплатыБП = НовОРПВБух.Оплата.Добавить();
//		новСтрОплатыБП.ВидОплаты = Бух.Справочники.ВидыОплатОрганизаций.НайтиПоКоду("000000001");		
//		новСтрОплатыБП.СуммаОплаты = стрОплатыПлКартами.Сумма;
//	КонецЦикла;
//	//-- Кузнецов С.А. - 08.07.2016	
//	
//	//++ Кузнецов С.А. - Проводим документ для оперативного отражения проводок в БП 3.0  - 08.07.2016	
//	Попытка 
//		НовОРПВБух.Записать(Бух.РежимЗаписиДокумента.Проведение);
//	Исключение
//		//Сообщить ("Не удалось провести документ в БП 3.0!",СтатусСообщения.Важное);
//		Попытка	
//			НовОРПВБух.Записать();
//		Исключение
//			Сообщить ("Не удалось сохранить документ в БП 3.0!",СтатусСообщения.Важное);
//			Отказ = Истина;
//		КонецПопытки;
//	КонецПопытки;
//	//-- Кузнецов С.А. - 08.07.2016	
//	
//	//02.08.2017, Юра
//	//Было письмо от 25.07.2017 (Иванову Ивану, Грух Дмитрию). Текст письма (вариант, который нам согласовали (со слов Иванова Ивана):
//	//...
//	//Возврат товара покупателем в розничной торговле.
//	//
//	//Вариант 2.
//	//1)	В УТ10 внести изменения а алгоритм формирования ОРП. Помещать в эти ОРП только продажи и возвраты «день в день».
//	//2)	В 1С:Бухгалтерию передавать ОРП тем же механизмом, что и раньше (при записи ОРП в УТ10)
//	//3)	При записи в УТ10 документа ОРП, дополнительно передавать в 1С:Бухгалтерию  документы «Возврат товаров от покупателей» (для возвратов НЕ «день в день»). Обмен сделать в том же COM-соединении, в котором создаются ОРП.
//	//...
//	Если Не Отказ Тогда
//		//Выбираем возвраты товаров от покупателя на дату ОРП, когда возвраты не "день в день":
//		Запрос = Новый Запрос;
//		Запрос.Текст = "ВЫБРАТЬ
//		               |	ВозвратТоваровОтПокупателя.Ссылка
//		               |ИЗ
//		               |	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
//		               |ГДЕ
//		               |	ВозвратТоваровОтПокупателя.Дата МЕЖДУ &НачалоПериода И &КонецПериода
//		               |	И ВозвратТоваровОтПокупателя.Проведен
//		               |	И КОНЕЦПЕРИОДА(ВЫРАЗИТЬ(ВозвратТоваровОтПокупателя.Сделка КАК Документ.РеализацияТоваровУслуг).Дата, ДЕНЬ) < НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ)
//		               |	И ВозвратТоваровОтПокупателя.СкладОрдер = &Склад";
//		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Источник.Дата));
//		Запрос.УстановитьПараметр("КонецПериода", КонецДня(Источник.Дата));
//		Запрос.УстановитьПараметр("Склад", Источник.Склад);
//		РезультатЗапроса = Запрос.Выполнить();
//		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//		
//		ТекПараметры = Новый Структура();
//		ТекПараметры.Вставить("Организация",НовОРПВБух.Организация);
//		ТекПараметры.Вставить("ПодразделениеОрганизации",НовОРПВБух.ПодразделениеОрганизации);
//		ТекПараметры.Вставить("Склад",НовОРПВБух.Склад);
//		ТекПараметры.Вставить("ВидОперации",Бух.Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ПродажаКомиссия);
//		ТекПараметры.Вставить("СуммаВключаетНДС",НовОРПВБух.СуммаВключаетНДС);
//		ТекПараметры.Вставить("Покупатель",Бух.Справочники.Контрагенты.НайтиПоНаименованию("_Розничный покупатель"));
//		ТекПараметры.Вставить("ВалютаДокумента",Бух.Справочники.Валюты.НайтиПоКоду("643"));
//		ТекПараметры.Вставить("СтавкаНДС",Бух.Перечисления.СтавкиНДС[?(Источник.Склад.Код = "000000005" ИЛИ НЕ ЭтоСклад5ЛБ,"БезНДС","НДС18")]);
//		ТекПараметры.Вставить("ОтражениеВУСН",Бух.Перечисления.ОтражениеВУСН.Принимаются);
//		
//		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//			Если Не Отказ Тогда
//				Передатьв1СБухгалтерияДокументВозвратТоваровОтПокупателя(Отказ,Бух,ВыборкаДетальныеЗаписи.Ссылка,ТекПараметры);
//			КонецЕсли;
//		КонецЦикла;
//	КонецЕсли;
КонецПроцедуры

//Функция ПоискВПриёмнике(Бух,Док) 
//	Типп = Бух.NewObject("ОписаниеТипов","ДокументСсылка.ОтчетОРозничныхПродажах").Типы().Получить(0);
//	ЗапросВПриёмнике = Бух.NewObject("Запрос");
//	ЗапросВПриёмнике.Текст="Выбрать Ссылка из Документ.ОтчетОРозничныхПродажах Где Ссылка=&Ссылка";
//	//ЗапросВПриёмнике.УстановитьПараметр("Ссылка", Бух.XMLЗначение(Бух.Тип("ДокументСсылка.ПоступлениеТоваровУслуг"), XMLСтрока(Док.Ссылка)));
//	ЗапросВПриёмнике.УстановитьПараметр("Ссылка", Бух.XMLЗначение(Типп, XMLСтрока(Док.Ссылка)));
//	Рез = ЗапросВПриёмнике.Выполнить();
//	Если Рез.Пустой() Тогда
//		//Нет документа
//		Документ = Бух.Документы.ОтчетОРозничныхПродажах.СоздатьДокумент();
//	Иначе
//		Выб = Рез.Выбрать();
//		Выб.Следующий();
//		Документ = Выб.Ссылка.ПолучитьОбъект();
//	КонецЕсли;
//	
//	возврат Документ;
//	
//	
//КонецФункции

//Функция ПолучитьНоменклатуруВПриёмнике(Бух,Номенклатура) Экспорт //Добавил "Экспорт" 07.07.2017, Юра
//	СоздаёмРодителя = Ложь;
//	
//	Запрос = Бух.NewObject("Запрос");
//	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
//	|	Н.Ссылка
//	|ИЗ
//	|	Справочник.Номенклатура КАК Н
//	|ГДЕ
//	|	НЕ Н.ЭтоГруппа
//	|	И Н.Код = &Код";
//	Запрос.УстановитьПараметр("Код",СокрЛП(Номенклатура.Код));
//	
//	Рез = Запрос.Выполнить();
//	Если Рез.Пустой() Тогда
//		Если ЗначениеЗаполнено(Номенклатура.Родитель) Тогда
//			Запрос = Бух.NewObject("Запрос");
//			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
//			|	Н.Ссылка
//			|ИЗ
//			|	Справочник.Номенклатура КАК Н
//			|ГДЕ
//			|	Н.ЭтоГруппа
//			|	И Н.Код = &Код";
//			Запрос.УстановитьПараметр("Код",СокрЛП(Номенклатура.Родитель.Код));
//			РезРод = Запрос.Выполнить();
//			Если РезРод.Пустой() Тогда
//				СоздаёмРодителя = Истина;
//			Иначе
//				Выб = РезРод.Выбрать();
//				Выб.Следующий();
//				НовРод = Выб.Ссылка;
//			КонецЕсли;
//		КонецЕсли;
//		Если СоздаёмРодителя Тогда
//			НовРод = Бух.Справочники.Номенклатура.СоздатьГруппу();
//			НовРод.Родитель = Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039");
//			НовРод.Код = Номенклатура.Родитель.Код;
//			НовРод.Наименование = Номенклатура.Родитель.Наименование;
//			НовРод.Записать();
//		КонецЕсли;
//		
//		НовНом = Бух.Справочники.Номенклатура.СоздатьЭлемент();
//		НовНом.Код = Номенклатура.Код;
//		НовНом.Артикул = Номенклатура.Артикул;
//		НовНом.Родитель = НовРод.Ссылка;
//		НовНом.Наименование = Номенклатура.Наименование;
//		НовНом.НаименованиеПолное = Номенклатура.Наименование;
//		НовНом.ЕдиницаИзмерения = Бух.Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
//		НовНом.Комментарий = "Пришло из УТ "+ТекущаяДата();
//		НовНом.НоменклатурнаяГруппа = Бух.Справочники.НоменклатурныеГруппы.НайтиПоКоду("00-000001");
//		НовНом.СтавкаНДС = Бух.Перечисления.СтавкиНДС.НДС18;
//		НовНом.Записать(); 
//	Иначе
//		Выб = Рез.Выбрать();
//		Выб.Следующий();
//		НовНом = Выб.Ссылка;
//	КонецЕсли;
//	Возврат НовНом.Ссылка;
//КонецФункции


///////////////////////////////////////////////////////
// ДОПОЛНИТЕЛЬНЫЕ ФУНКЦИИ И ПРОЦЕДУРЫ МОДУЛЯ

//// Подключение к тестовой базе БП 3.0
//Функция Подключиться_БП30_Тестирование() 
//	
//	Попытка
//		COMConnector=Новый COMОбъект("V83.COMConnector");
//		V8 = COMConnector.Connect("Srvr=""lab1c""; Ref=""BUH_30_Test_Kuznetsov""; usr=""robot""; pwd=qp:Hj1S0EC");
//		Бух = V8;
//	Исключение
//		Бух = Неопределено;
//	КонецПопытки;
//	Возврат Бух;
//	
//КонецФункции

////02.08.2017, Юра
//Процедура Передатьв1СБухгалтерияДокументВозвратТоваровОтПокупателя(Отказ,Бух,ДокументВозврата,Параметры)
//	НовДокВозврата = _5LB_ОбменСДругимиБазами.ПоискДокументаПоУникальномуИдентификаторуВ1СБухгалтерии(Бух,ДокументВозврата);
//	
//	НовДокВозврата.Дата = ДокументВозврата.Дата;
//	НовДокВозврата.ВидОперации = Параметры.ВидОперации;
//	НовДокВозврата.Организация = Параметры.Организация;
//	НовДокВозврата.Склад = Параметры.Склад;
//	НовДокВозврата.ПодразделениеОрганизации = Параметры.ПодразделениеОрганизации;
//	НовДокВозврата.Контрагент = Параметры.Покупатель;
//	НовДокВозврата.ДоговорКонтрагента = _5LB_ОбменСДругимиБазами.ПоискДоговораВ1СБухгалтерии(Бух,Параметры.Организация,Параметры.Покупатель,ДокументВозврата.Дата,"СПокупателем");
//	НовДокВозврата.СуммаВключаетНДС = Параметры.СуммаВключаетНДС;
//	НовДокВозврата.СуммаДокумента = ДокументВозврата.СуммаДокумента;
//	НовДокВозврата.ВалютаДокумента = Параметры.ВалютаДокумента;
//	НовДокВозврата.КурсВзаиморасчетов = 1;
//	НовДокВозврата.КратностьВзаиморасчетов = 1;
//	НовДокВозврата.СчетУчетаРасчетовСКонтрагентом = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");
//	НовДокВозврата.СчетУчетаРасчетовПоАвансам = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");
//	НовДокВозврата.СчетУчетаРасчетовПоТаре = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.06");
//	НовДокВозврата.СчетУчетаНДС = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.03");
//	
//	НовДокВозврата.Товары.Очистить();
//	Для Каждого ст из ДокументВозврата.Товары Цикл
//		
//		Товары = НовДокВозврата.Товары.Добавить();
//		Товары.Номенклатура = ПолучитьНоменклатуруВПриёмнике (Бух,ст.Номенклатура);
//		Товары.Количество = ст.Количество;
//		Товары.СтавкаНДС = Параметры.СтавкаНДС; 
//		Товары.СуммаНДС = ?(Параметры.СтавкаНДС=Бух.Перечисления.СтавкиНДС.НДС18,ст.СуммаНДС,0);
//		Товары.Сумма = ст.Сумма;
//		Товары.Цена = ст.Цена;
//		Товары.Себестоимость = Товары.Сумма;
//		Товары.ОтражениеВУСН = Параметры.ОтражениеВУСН;
//		
//		Товары.СчетУчета = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
//		Товары.СчетДоходов = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
//		Товары.СчетРасходов = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
//		Товары.Субконто = Товары.Номенклатура.НоменклатурнаяГруппа;
//		Товары.СчетУчетаНДСПоРеализации = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
//		
//	КонецЦикла;
//	
//	Попытка 
//		НовДокВозврата.Записать(Бух.РежимЗаписиДокумента.Проведение);
//	Исключение
//		//Сообщить ("Не удалось провести документ в БП 3.0!",СтатусСообщения.Важное);
//		Попытка	
//			НовДокВозврата.Записать();
//		Исключение
//			Сообщить ("Не удалось сохранить документ в БП 3.0!",СтатусСообщения.Важное);
//			Отказ = Истина;
//		КонецПопытки;
//	КонецПопытки;
//	
//КонецПроцедуры