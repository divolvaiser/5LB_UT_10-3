Процедура ПолучитьСтатусЗаказаССайта ()  Экспорт
	
	SSL = Новый ЗащищенноеСоединениеOpenSSL(Неопределено,Неопределено);
	HTTPСоединение = Новый HTTPСоединение("www.5lb.ru",,,,,,SSL); 
	HTTPЗапрос = Новый HTTPЗапрос("/cgi-bin/mp/page.pl?m=gate_1c&getdata=uactions");
	Ответ = HTTPСоединение.Получить(HTTPЗапрос);   
	ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(ТекстОтвета);
	
	ТЗЗаказыСоСтатусами = Новый ТаблицаЗначений;
	ТЗЗаказыСоСтатусами.Колонки.Добавить("НомерЗаказа");
	ТЗЗаказыСоСтатусами.Колонки.Добавить("НовыйСтатус");
	ТЗЗаказыСоСтатусами.Колонки.Добавить("ИДДействия");
	
	ТЗЗаказыСОплатой = Новый ТаблицаЗначений;
	ТЗЗаказыСОплатой.Колонки.Добавить("НомерЗаказа");
	ТЗЗаказыСОплатой.Колонки.Добавить("СтатусОплаты");
	ТЗЗаказыСОплатой.Колонки.Добавить("ВидОплаты");
	ТЗЗаказыСОплатой.Колонки.Добавить("ДатаОплаты");
	ТЗЗаказыСОплатой.Колонки.Добавить("ИДДействия");
	
	
	
	Пока Чтение.Прочитать() Цикл
		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
			
			ИмяУзла = Чтение.Имя; 
			Если (ИмяУзла<>"uaction") Тогда
				продолжить;
			КонецЕсли;
			
			ТекНомер = Неопределено;
			ТекСтатус = Неопределено;
			ИДДействия = Неопределено;
			ТекСтатусОпл = Неопределено;
			ТекВидОплаты = Неопределено;
			ТекДатаОплаты = Неопределено;
			Пока Чтение.ПрочитатьАтрибут() Цикл 
				
				Имя = Чтение.Имя; 
				Значение = Чтение.Значение; 
				
				Если Имя = "order_id"  Тогда
					ТекНомер = Значение;
				КонецЕсли;	
				
				Если Имя = "order_status"  Тогда
					ТекСтатус = Значение;
				КонецЕсли;	
				
				Если Имя = "order_pay_status"  Тогда
					ТекСтатусОпл = Значение;
				КонецЕсли;	
				
				Если Имя = "order_pay_type"  Тогда
					ТекВидОплаты = Значение;
				КонецЕсли;	
				
				Если Имя = "created"  Тогда
					ТекДатаОплаты = Значение;
					////НМА 19.10.16
					Если НЕ ((ЗначениеЗаполнено(ТекНомер)) И (ЗначениеЗаполнено(ТекСтатусОпл)) И (ЗначениеЗаполнено(ТекВидОплаты)) И (ЗначениеЗаполнено(ТекДатаОплаты)) И (ЗначениеЗаполнено(ИДДействия))) Тогда
						Комментарий = "ТекНомер "+ТекНомер+" |ТекСтатусОпл "+ТекСтатусОпл+" |ТекВидОплаты "+ТекВидОплаты+" |ТекДатаОплаты "+ТекДатаОплаты+" |ИДДействия "+ИДДействия;	
						ЗаписьЖурналаРегистрации("Регл. задание ПолучитьСтатусЗаказаССайта", УровеньЖурналаРегистрации.Предупреждение,Метаданные.РегламентныеЗадания.ПолучитьСтатусЗаказаССайта, Документы.ЗаказПокупателя.НайтиПоНомеру(СокрЛП(ТекНомер)), Комментарий);
					КонецЕсли;
					////НМА 19.10.16
				КонецЕсли;	
				
				
				Если Имя = "id"  Тогда
					ИДДействия = Значение;
				КонецЕсли;	
				
				
				Если (ЗначениеЗаполнено(ТекНомер)) И (ЗначениеЗаполнено(ТекСтатус)) И (ЗначениеЗаполнено(ИДДействия)) Тогда
					НовСт = ТЗЗаказыСоСтатусами.Добавить();
					НовСт.НомерЗаказа = ТекНомер;
					НовСт.НовыйСтатус = ТекСтатус;
					НовСт.ИДДействия = ИДДействия;
					прервать;
				КонецЕсли;
				
				Если (ЗначениеЗаполнено(ТекНомер)) И (ЗначениеЗаполнено(ТекСтатусОпл)) И (ЗначениеЗаполнено(ТекВидОплаты)) И (ЗначениеЗаполнено(ТекДатаОплаты)) И (ЗначениеЗаполнено(ИДДействия)) Тогда
					НовСт = ТЗЗаказыСОплатой.Добавить();
					НовСт.НомерЗаказа = ТекНомер;
					НовСт.СтатусОплаты = ТекСтатусОпл;
					НовСт.ВидОплаты = ТекВидОплаты;
					НовСт.ДатаОплаты = ТекДатаОплаты;
					НовСт.ИДДействия = ИДДействия;
					прервать;
				КонецЕсли;
				
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
	Чтение.Закрыть();
	
	Если ТЗЗаказыСоСтатусами.Количество()>0 Тогда
		ОбработатьСтатусыЗаказов(ТЗЗаказыСоСтатусами,HTTPСоединение);
	КонецЕсли;
	
	Если ТЗЗаказыСОплатой.Количество()>0 Тогда
		ОбработатьСтатусыОплатыЗаказов(ТЗЗаказыСОплатой,HTTPСоединение);
	КонецЕсли;
	
	СообщимОСменеКурьера (HTTPСоединение);
	
КонецПроцедуры

Функция ВернутьЗаказы (Заказы)
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	З.Ссылка,
	|	З.Номер
	|ИЗ
	|	Документ.ЗаказПокупателя КАК З
	|ГДЕ
	|	З.Номер В(&СписокНомеров)";
	Запрос.УстановитьПараметр("СписокНомеров",Заказы);
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат "Пусто";
	КонецЕсли;
	
	Возврат Рез.Выгрузить();
	
	
КонецФункции

Процедура ПодтвердимСайту(HTTPСоединение,ИДДействия)
	
	HTTPЗапросПост = Новый HTTPЗапрос("/cgi-bin/mp/page.pl?m=gate_1c&act=confirm_uaction&id="+ИДДействия);
	HTTPСоединение.Получить(HTTPЗапросПост);
	
КонецПроцедуры

Процедура ОбработатьСтатусыЗаказов(ТЗЗаказыСоСтатусами,HTTPСоединение) 
	
	ТЗЗаказы = ВернутьЗаказы(ТЗЗаказыСоСтатусами.ВыгрузитьКолонку("НомерЗаказа"));
	
	Если ТЗЗаказы = "Пусто" Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого стЗаказ ИЗ ТЗЗаказы Цикл
		
		// Женя 11.10.2018 
		// Записывать "Дата начала загрузки" в РС Этапы статусов заказов. При получении данных с сайта. 
		// ((   
		ЗаписатьПолучениеСтатусаЗаказа(стЗаказ.Номер);
		// )) 11.10.2018 Женя

		Если стЗаказ.Ссылка.СтатусыСборкиЗаказа = Перечисления.СтатусыСборкиЗаказа.Собирается Тогда
			продолжить;
		КонецЕсли;
		
		СтрокаНовогоСтатуса = ТЗЗаказыСоСтатусами.Найти(СокрЛП(стЗаказ.Номер),"НомерЗаказа");
		Если СтрокаНовогоСтатуса = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Если СтрокаНовогоСтатуса.НовыйСтатус = "заказ отменен" Тогда
			Об = стЗаказ.Ссылка.ПолучитьОбъект();
			
			Если Об.Товары.Итог("КоличествоСобрано")>0 Тогда
				Об.СтатусыСборкиЗаказа  = Перечисления.СтатусыСборкиЗаказа.Отказ;
				Для Каждого стр из Об.Товары Цикл
					стр.КоличествоСобрано = 0;
				КонецЦикла;
				Попытка
					Об.Записать(РежимЗаписиДокумента.Запись);
					//21062018 Отправляем в WMS
					EmeWmsЭкспортЗаказовПокупателей.ПометитьКЭкспортуПовторно(Об);
					ПодтвердимСайту(HTTPСоединение,СтрокаНовогоСтатуса.ИДДействия);					
				Исключение
				КонецПопытки;
			ИначеЕсли Об.СтатусыСборкиЗаказа  <> Перечисления.СтатусыСборкиЗаказа.Отказ Тогда
				
				Попытка
					Об.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					Об.ПометкаУдаления=Истина;
					Об.Записать(РежимЗаписиДокумента.Запись);
					//21062018 Отправляем в WMS
					EmeWmsЭкспортЗаказовПокупателей.ПометитьКЭкспортуПовторно(Об);
					ПодтвердимСайту(HTTPСоединение,СтрокаНовогоСтатуса.ИДДействия);
				Исключение
				КонецПопытки;
			ИначеЕсли Об.СтатусыСборкиЗаказа  = Перечисления.СтатусыСборкиЗаказа.Отказ Тогда
				Попытка
					ПодтвердимСайту(HTTPСоединение,СтрокаНовогоСтатуса.ИДДействия);
				Исключение
				КонецПопытки;
			КонецЕсли
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьСтатусыОплатыЗаказов(ТЗЗаказыСОплатой,HTTPСоединение) 
	
	ТЗЗаказы = ВернутьЗаказы(ТЗЗаказыСОплатой.ВыгрузитьКолонку("НомерЗаказа"));
	
	Если ТЗЗаказы = "Пусто" Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого стЗаказ ИЗ ТЗЗаказы Цикл
		////НМА 19.10.16
		//Если стЗаказ.Ссылка.СтатусыСборкиЗаказа = Перечисления.СтатусыСборкиЗаказа.Собирается Тогда
		//	продолжить;
		//КонецЕсли;
		////НМА 19.10.16
		
		СтрокаНовогоСтатуса = ТЗЗаказыСОплатой.Найти(СокрЛП(стЗаказ.Номер),"НомерЗаказа");
		Если СтрокаНовогоСтатуса = Неопределено Тогда
			продолжить;
		КонецЕсли;
		
		Год = Лев(СтрокаНовогоСтатуса.ДатаОплаты,4);
		Месяц = Сред(СтрокаНовогоСтатуса.ДатаОплаты,6,2);
		День = Сред (СтрокаНовогоСтатуса.ДатаОплаты,9,2);
		
		Если СтрокаНовогоСтатуса.СтатусОплаты = "оплачен" Тогда
			Об = стЗаказ.Ссылка.ПолучитьОбъект();
			Об.ВидОплаты = Справочники.ВидыОплатЧекаККМ.НайтиПоКоду(СтрокаНовогоСтатуса.ВидОплаты);
			Об.СтатусОплаты = ?(СтрокаНовогоСтатуса.СтатусОплаты = "оплачен",Перечисления.СтатусОплаты.Оплачен,Перечисления.СтатусОплаты.НеОпалчен);
			Об.ДатаОплаты = Дата(Год,Месяц,День);
			//{+НАЧАЛО+Добавления} Автор: Тасмаджиев 01/03/2018//=============================================================================================
			Если ЗначениеЗаполнено(Об.ПунктСамовывоза) Тогда
				Об.СтатусыСборкиЗаказа = Перечисления.СтатусыСборкиЗаказа.ГотовКСборке;
			КонецЕсли;
			//{-КОНЕЦ-Добавления} Автор: Тасмаджиев 01/03/2018//==============================================================================================
			Попытка
				Об.Записать(РежимЗаписиДокумента.Запись);
				ПодтвердимСайту(HTTPСоединение,СтрокаНовогоСтатуса.ИДДействия);
				
				// Женя 23.07.2018
				// Задача 90 в http://servicedesk
				// При изменении статуса оплаты записывать статус оплаты, вид оплаты и дата загрузки статуса оплаты в РС "Этапы обработки заказов"
				// ((
				ЗаписатьДанныеПоОплатеВРСЭтапыОбработкиЗаказов(Об,стЗаказ.Номер);
				// )) 23.07.2018 Женя
				
				//30082018 Добавляем в очередь на отправку в ЕМЕ
				Если Об.ПунктСамовывоза<>Справочники.Склады.ПустаяСсылка() Тогда
					Если Не EmeWmsЭкспортЗаказовПокупателей.ПомеченКЭкспорту(Об.Ссылка) Тогда
						Для Каждого стр из Об.Товары Цикл
							Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
								НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
							Иначе
								НоменклатураДляЭкспорта = стр.Номенклатура;
							КонецЕсли;
							Если Не EmeWmsЭкспорт.НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
								EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта.ПолучитьОбъект());
							КонецЕсли;
						КонецЦикла;
						EmeWmsЭкспортЗаказовПокупателей.ПометитьКЭкспорту(Об);
					КонецЕсли;
				КонецЕсли;
				
			Исключение
				////НМА 19.10.16
				Комментарий = "Не удалось записать данные (ВидОплаты,СтатусОплаты,ДатаОплаты) в документ ЗаказПокупателя №"+стЗаказ.Номер;	
				ЗаписьЖурналаРегистрации("Регл. задание ПолучитьСтатусЗаказаССайта", УровеньЖурналаРегистрации.Ошибка,Метаданные.РегламентныеЗадания.ПолучитьСтатусЗаказаССайта, стЗаказ.Ссылка, Комментарий);
				////НМА 19.10.16
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Женя 11.10.2018 
// Записывать "Дата начала загрузки" в РС Этапы статусов заказов. При получении данных с сайта. 
// ((  
Процедура ЗаписатьПолучениеСтатусаЗаказа(НомерЗаказа)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	_5LB_ЭтапыОбработкиЗаказов.НомерЗаказа,
	|	_5LB_ЭтапыОбработкиЗаказов.ДатаНачалаЗагрузки
	|ИЗ
	|	РегистрСведений._5LB_ЭтапыОбработкиЗаказов КАК _5LB_ЭтапыОбработкиЗаказов
	|ГДЕ
	|	_5LB_ЭтапыОбработкиЗаказов.НомерЗаказа = &НомерЗаказа";
	
	Запрос.УстановитьПараметр("НомерЗаказа", СокрЛП(НомерЗаказа));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		НаборЗаписей = РегистрыСведений._5LB_ЭтапыОбработкиЗаказов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЗаказа.Установить(СокрЛП(НомерЗаказа));
		НаборЗаписей.Прочитать();
		
		Для Каждого ЗаписьНабора Из НаборЗаписей Цикл
			ЗаписьНабора.ДатаНачалаЗагрузки = ТекущаяДата();
		КонецЦикла;
		
		НаборЗаписей.Записать();
	Иначе
	КонецЕсли;
	
КонецПроцедуры
// )) 11.10.2018 Женя

// Женя 23.07.2018
// При изменении статуса оплаты записывать статус оплаты, вид оплаты и дату загрузки статуса оплаты в РС "Этапы обработки заказов"
// ((
Процедура ЗаписатьДанныеПоОплатеВРСЭтапыОбработкиЗаказов(Об,НомерДокументаЗаказаПокупателя) ЭКСПОРТ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	_5LB_ЭтапыОбработкиЗаказов.ДатаЗагрузкиСтатусаОплаты,
	|	_5LB_ЭтапыОбработкиЗаказов.СтатусОплаты,
	|	_5LB_ЭтапыОбработкиЗаказов.ВидОплаты КАК ВидОплаты,
	|	_5LB_ЭтапыОбработкиЗаказов.НомерЗаказа
	|ИЗ
	|	РегистрСведений._5LB_ЭтапыОбработкиЗаказов КАК _5LB_ЭтапыОбработкиЗаказов
	|ГДЕ
	|	_5LB_ЭтапыОбработкиЗаказов.НомерЗаказа = &НомерЗаказа";
	
	// Женя 10.08.2018. Добавлен параметр "НомерЗаказа"
	
	Запрос.УстановитьПараметр("НомерЗаказа", СокрЛП(НомерДокументаЗаказаПокупателя));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		НаборЗаписей = РегистрыСведений._5LB_ЭтапыОбработкиЗаказов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЗаказа.Установить(СокрЛП(НомерДокументаЗаказаПокупателя));
		НаборЗаписей.Прочитать();
		
		Для Каждого ЗаписьНабора Из НаборЗаписей Цикл
			// Женя 04.09.2018
			// Заявка 1107
			// Изменить запись вида оплаты в РС этапы обр.з.
			// Если наличные или не указан вид оплаты, тогда 1;
			// Если безнал, тогда 2.
			////////// БЫЛО: Если Об.ВидОплаты = Справочники.ВидыОплатЧекаККМ.Наличные Тогда
			//////////			ЗаписьНабора.ВидОплаты = 1; //наличные
			//////////		Иначе
			//////////			ЗаписьНабора.ВидОплаты = 2; //безнал
			//////////		КонецЕсли; 
			// ((
			Если (Об.ВидОплаты = Справочники.ВидыОплатЧекаККМ.Наличные) ИЛИ (Об.ВидОплаты = Справочники.ВидыОплатЧекаККМ.ПустаяСсылка()) Тогда
				ЗаписьНабора.ВидОплаты = 1; //наличные  
				// Женя 14.09.2018
				// ((
				ЗаписьНабора.ДатаЗагрузкиСтатусаОплаты = ТекущаяДата();
				ЗаписьНабора.СтатусОплаты = 1;
				// )) 14.09.2018 Женя
				
			ИначеЕсли ЗначениеЗаполнено(Об.ВидОплаты) Тогда
				ЗаписьНабора.ВидОплаты = 2; //безнал
				// Женя 14.09.2018
				// ((
				ЗаписьНабора.ДатаЗагрузкиСтатусаОплаты = ТекущаяДата();
				ЗаписьНабора.СтатусОплаты = 1;
				// )) 14.09.2018 Женя
				
			КонецЕсли;
			// )) 04.09.2018 Женя
					
		КонецЦикла; 
		НаборЗаписей.Записать();
	Иначе
		Сообщить("В регистре сведений ""Этапы обработки заказов"" нет записи с номером заказа "+ СокрЛП(НомерДокументаЗаказаПокупателя) +". Данные по оплате не будут записаны.");
	КонецЕсли;
		
КонецПроцедуры
// )) 23.07.2018 Женя


Процедура СообщимОСменеКурьера (HTTPСоединение)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Рег.Документ КАК Заказ,
	|	Рег.Ответственный КАК Курьер,
	|	Контакт.Представление КАК Телефон
	|ИЗ
	|	РегистрСведений.ИсторияОтветственногоПоЗаказу КАК Рег
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК Контакт
	|		ПО Рег.Ответственный = Контакт.Объект
	|			И (Контакт.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (Контакт.Вид = &Вид)
	|ГДЕ
	|	Рег.Сменился";
	Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("000000026"));
	
	Выб = Запрос.Выполнить().Выбрать();
	Если Выб.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока Выб.Следующий() Цикл
		
		Если (Выб.Телефон = NULL) ИЛИ (Выб.Телефон = 0) Тогда
			Набор = РегистрыСведений.ИсторияОтветственногоПоЗаказу.СоздатьНаборЗаписей();
			Набор.Отбор.Документ.Установить(Выб.Заказ);
			Набор.Прочитать();
			Для Каждого н из Набор Цикл
				Н.Сменился = Ложь;
			КонецЦикла;
			Набор.Записать();
			Продолжить;
		КонецЕсли;
		
		
		HTTPЗапрос = Новый HTTPЗапрос("/cgi-bin/mp/page.pl?m=gate_1c&setdata=courier_reappointed&order_id="+СокрЛП(Выб.Заказ.Номер)+"&courier_name="+СокрЛП(Выб.Курьер)+"&courier_phone="+СокрЛП(Выб.Телефон));
		Ответ = HTTPСоединение.Получить(HTTPЗапрос);   
		//Ответ = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);   
		ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
		
		Чтение = Новый ЧтениеXML;
		Чтение.УстановитьСтроку(ТекстОтвета);
		
		Пока Чтение.Прочитать() Цикл
			Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
				
				ИмяУзла = Чтение.Имя; 
				Если (ИмяУзла<>"setdata") Тогда
					продолжить;
				КонецЕсли;
				
				Пока Чтение.ПрочитатьАтрибут() Цикл 
					
					Имя = Чтение.Имя; 
					Значение = Чтение.Значение; 
					
					Если Имя = "type"  Тогда
						ТипОтвета = Значение;
					КонецЕсли;	
					
					Если Имя = "success"  Тогда
						РезОтвета = Значение;
					КонецЕсли;	
					
					
					Если (ЗначениеЗаполнено(ТипОтвета)) И (ЗначениеЗаполнено(РезОтвета)) И (СокрЛП(ТипОтвета) = "courier_reappointed") Тогда
						Если РезОтвета = "1" Тогда
							Набор = РегистрыСведений.ИсторияОтветственногоПоЗаказу.СоздатьНаборЗаписей();
							Набор.Отбор.Документ.Установить(Выб.Заказ);
							Набор.Прочитать();
							Для Каждого н из Набор Цикл
								Н.Сменился = Ложь;
							КонецЦикла;
							Набор.Записать();
						КонецЕсли;
						прервать;
					КонецЕсли;
					
					
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
		Чтение.Закрыть();
		
	КонецЦикла;
	
	
КонецПроцедуры


// Обмен заказами рекламного оборудования сайт 5LB
Процедура ЗагрузитьЗаказРОССайта5LB() Экспорт
	
	массивФайлов = НайтиФайлы("C:\Orders_Test\", "*.xml");
	Для Каждого стрМассиваФайлов Из массивФайлов Цикл
		НомерТекущДок= Неопределено;
		Сайт = Неопределено;
		ИтогоСоСкидкой = Неопределено;
		РаботаСРегламентныеЗаданиями._ПрочитатьСообщениеXML(стрМассиваФайлов.ПолноеИмя, НомерТекущДок, Сайт, ИтогоСоСкидкой);
	КонецЦикла;	
	
КонецПроцедуры	

// Процедура выгрузки остатков рекламного оборудования на сайт 5LB 
Процедура ВыгрузитьОстаткиРО() Экспорт
	
	ТекДата = ТекущаяДата();
	имяФайла = "";
	
	запросДанныхПоОстаткам = Новый Запрос("ВЫБРАТЬ
	|	МАКСИМУМ(ЕдиницыИзмерения.Коэффициент) КАК Коэффициент,
	|	ЕдиницыИзмерения.Владелец КАК Владелец_Номенклатура,
	|	ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|ПОМЕСТИТЬ ВР_ЕдиницыИзмерения_ДляБазовойЕдИзмерения
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	НЕ ЕдиницыИзмерения.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕдиницыИзмерения.Владелец,
	|	ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕдиницыИзмерения.Коэффициент) КАК Коэффициент,
	|	ЕдиницыИзмерения.Владелец КАК Владелец_Номенклатура
	|ПОМЕСТИТЬ ВР_ЕдиницыИзмерения_Коробка
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	НЕ ЕдиницыИзмерения.ПометкаУдаления
	|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору_Коробка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕдиницыИзмерения.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад,
	|	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0)) КАК СвободныйОстаток,
	|	ТоварыНаСкладахОстатки.Номенклатура.Код,
	|	ВР_ЕдиницыИзмерения_ДляБазовойЕдИзмерения.Коэффициент КАК Коэффициент_БЕИ,
	|	ВР_ЕдиницыИзмерения_Коробка.Коэффициент КАК Коэффициент_Коробка,
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстатокТоварыНаСкладах,
	|	СУММА(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстатокТоварыВРезервеНаСкладах
	|ПОМЕСТИТЬ ВР_Остатки
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура В ИЕРАРХИИ (&РО)
	|				И Склад = &СкладРазвития) КАК ТоварыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(
	|				,
	|				Номенклатура В ИЕРАРХИИ (&РО)
	|					И Склад = &СкладРазвития) КАК ТоварыВРезервеНаСкладахОстатки
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ТоварыВРезервеНаСкладахОстатки.Номенклатура
	|			И ТоварыНаСкладахОстатки.Склад = ТоварыВРезервеНаСкладахОстатки.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ЕдиницыИзмерения_ДляБазовойЕдИзмерения КАК ВР_ЕдиницыИзмерения_ДляБазовойЕдИзмерения
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ВР_ЕдиницыИзмерения_ДляБазовойЕдИзмерения.Владелец_Номенклатура
	|			И ТоварыНаСкладахОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ВР_ЕдиницыИзмерения_ДляБазовойЕдИзмерения.ЕдиницаПоКлассификатору
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ЕдиницыИзмерения_Коробка КАК ВР_ЕдиницыИзмерения_Коробка
	|		ПО ТоварыНаСкладахОстатки.Номенклатура = ВР_ЕдиницыИзмерения_Коробка.Владелец_Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.Номенклатура.Код,
	|	ВР_ЕдиницыИзмерения_ДляБазовойЕдИзмерения.Коэффициент,
	|	ВР_ЕдиницыИзмерения_Коробка.Коэффициент
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток, 0)) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВР_Остатки.Номенклатура КАК Ном,
	|	ВР_Остатки.НоменклатураКод КАК НомКод,
	|	ВР_Остатки.Склад КАК Склад,
	|	ВР_Остатки.Коэффициент_БЕИ КАК Коэффициент_БЕИ,
	|	ВР_Остатки.Коэффициент_Коробка КАК Коэффициент_Коробка_ДляОПТа,
	|	СУММА(ЕСТЬNULL(ВР_Остатки.КоличествоОстатокТоварыНаСкладах, 0)) КАК КоличествоОстатокТоварыНаСкладах,
	|	СУММА(ЕСТЬNULL(ВР_Остатки.КоличествоОстатокТоварыВРезервеНаСкладах, 0)) КАК КоличествоОстатокТоварыВРезервеНаСкладах,
	|	СУММА(ЕСТЬNULL(ВР_Остатки.СвободныйОстаток, 0)) КАК СвободныйОстаток
	|ИЗ
	|	ВР_Остатки КАК ВР_Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВР_Остатки.НоменклатураКод,
	|	ВР_Остатки.Склад,
	|	ВР_Остатки.Номенклатура,
	|	ВР_Остатки.Коэффициент_БЕИ,
	|	ВР_Остатки.Коэффициент_Коробка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(ВР_Остатки.СвободныйОстаток, 0)) >= 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	Ном
	|ИТОГИ ПО
	|	Склад
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	запросДанныхПоОстаткам.УстановитьПараметр("СкладРазвития", Справочники.Склады.НайтиПоКоду("547")); // Склад развития 
	запросДанныхПоОстаткам.УстановитьПараметр("ЕдиницаПоКлассификатору_Коробка", Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("120")); // Кор
	запросДанныхПоОстаткам.УстановитьПараметр("РО", Справочники.Номенклатура.НайтиПоКоду("80000000000")); // Рекламное оборудование
	
	рез = запросДанныхПоОстаткам.Выполнить();
	
	Если НЕ рез.Пустой() Тогда
		
		тзДанныеПоОстаткам = Рез.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);	
		
		
		Для каждого стрДанОст_Склад из тзДанныеПоОстаткам.Строки Цикл
			
			ЗаписьXML = Новый ЗаписьXML;
			имяФайла = ПолучитьИмяВременногоФайла();
			ЗаписьXML.ОткрытьФайл(имяФайла);
			ЗаписьXML.ЗаписатьБезОбработки("<?xml version=""1.0"" encoding=""utf-8"" ?>" + Символы.ПС);
			ЗаписьXML.ЗаписатьБезОбработки("<items xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""http://www.bitdesign.ru/app/bdexf-1.0/stock.xsd"">" + Символы.ПС);
			ЗаписьXML.ЗаписатьБезОбработки(Символы.Таб + "<DatеTime>" + ТекДата);
			ЗаписьXML.ЗаписатьБезОбработки("</DatеTime>"+Символы.ПС);
			
			строкиОстатковПоСкладу = стрДанОст_Склад.Строки;
			
			Для Каждого стрОстатковНоменклатурыНаСкладе Из строкиОстатковПоСкладу Цикл			
				ЗаписьXML.ЗаписатьБезОбработки(Символы.Таб+"<item id="""+сокрлп(стрОстатковНоменклатурыНаСкладе.НомКод)+""" stock="""+сокрлп(Цел(стрОстатковНоменклатурыНаСкладе.СвободныйОстаток))+""" in_box="""+сокрлп(стрОстатковНоменклатурыНаСкладе.Коэффициент_Коробка_ДляОПТа)+""">");
				ЗаписьXML.ЗаписатьБезОбработки("</item>"+Символы.ПС);
			КонецЦикла;
			
			ЗаписьXML.ЗаписатьБезОбработки("</items>");		
			ЗаписьXML.Закрыть();
			
		КонецЦикла;
		
	Иначе
		// Пустой файл - возможно полное обнуление остатков на складе 
		
		ЗаписьXML = Новый ЗаписьXML;
		имяФайла = ПолучитьИмяВременногоФайла();
		ЗаписьXML.ОткрытьФайл(имяФайла);
		ЗаписьXML.ЗаписатьБезОбработки("<?xml version=""1.0"" encoding=""utf-8"" ?>" + Символы.ПС);
		ЗаписьXML.ЗаписатьБезОбработки("<items xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""http://www.bitdesign.ru/app/bdexf-1.0/stock.xsd"">" + Символы.ПС);
		ЗаписьXML.ЗаписатьБезОбработки(Символы.Таб + "<DatеTime>" + ТекДата);
		ЗаписьXML.ЗаписатьБезОбработки("</DatеTime>"+Символы.ПС);			
		ЗаписьXML.ЗаписатьБезОбработки("</items>");		
		ЗаписьXML.Закрыть();
		
	КонецЕсли;
	
	Если имяФайла <> "" Тогда
		
		//Запись документов на ftp	
		Попытка
			Соединение1 = РаботаСРегламентныеЗаданиями.ПолучитьСоединениеFTP1();
		Исключение
			ЗаписьЖурналаРегистрации("Обмен XML с сайтом (Остатки, Рекламное оборудование)", , , ,ОписаниеОшибки(),);
		КонецПопытки;
		
		Попытка
			Соединение2 =  РаботаСРегламентныеЗаданиями.ПолучитьСоединениеFTP2();
		Исключение
			ЗаписьЖурналаРегистрации("Обмен XML с сайтом (Остатки, Рекламное оборудование)", , , ,ОписаниеОшибки(),);
		КонецПопытки;
		
		
		Попытка
			Соединение1.Записать(ИмяФайла, "stock_eq" + ".xml");
		Исключение
			ЗаписьЖурналаРегистрации("Обмен XML с сайтом (Остатки, Рекламное оборудование)", , , ,ОписаниеОшибки(),);
		КонецПопытки;		
		
		Попытка
			Соединение2.Записать(ИмяФайла, "stock_eq" + ".xml");
		Исключение
			ЗаписьЖурналаРегистрации("Обмен XML с сайтом (Остатки, Рекламное оборудование)", , , ,ОписаниеОшибки(),);
		КонецПопытки;		
		
	КонецЕсли;				
	
КонецПроцедуры