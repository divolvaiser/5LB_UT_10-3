
///////////////////////////////////////////////////////
// ПОДКЛЮЧЕНИЕ К БП 3.0 

Функция ПодключитьсяКБух() 
	//Изменено Monstr 180411
	//Было:
	//// Катков А. 18.10.2016 >>
	//ИспользоватьТестовоеПодключение = Константы.ИспользоватьТестовоеПодключениеБП30.Получить();
	//Если НЕ ИспользоватьТестовоеПодключение Тогда
	//	// Катков А. 18.10.2016 <<  
	//	Попытка
	//		COMConnector=Новый COMОбъект("V83.COMConnector");
	//		
	//		// Рабочая база 
	//		V8 = COMConnector.Connect("Srvr=""1cserv""; Ref=""C8_BUH_30""; usr=""robot""; pwd=qp:Hj1S0EC");
	//		Бух = V8;
	//		
	//		// Тестовая база
	//		//V8_Test = COMConnector.Connect("Srvr=""lab1""; Ref=""BUH_30_Test_Kuznetsov""; usr=""robot""; pwd=qp:Hj1S0EC");
	//		//Бух = V8_Test;
	//		
	//	Исключение
	//		Сообщить("Не удалось выполнить подключение к БП 3.0." + Символы.ПС + ОписаниеОшибки());
	//		Бух = Неопределено;
	//	КонецПопытки;
	//	// Катков А. 18.10.2016 >>
	//Иначе
	//	Попытка
	//		COMConnector=Новый COMОбъект("V83.COMConnector");
	//		
	//		// Тестовая база 
	//		V8 = COMConnector.Connect("Srvr=""lab1c""; Ref=""BUH_30_Test_KatkovA""; usr=""robot""; pwd=qp:Hj1S0EC");
	//		Бух = V8;
	//		
	//	Исключение
	//		Сообщить("Не удалось выполнить подключение к БП 3.0." + Символы.ПС + ОписаниеОшибки());
	//		Бух = Неопределено;
	//	КонецПопытки;
	//КонецЕсли; 
	//// Катков А. 18.10.2016 << 
	Если Константы.ИспользоватьТестовоеПодключениеБП30.Получить() Тогда
	    Бух = _5LB_ОбменСДругимиБазами.ПодключитьсяПоCOM("lab1c:1641","C8_BUH_30");
	Иначе 
		Бух = _5LB_ОбменСДругимиБазами.ПодключитьсяПоCOM("1cserv","C8_BUH_30");
	КонецЕсли;
	
	//Конец изменного Monstr 180411
	
	Возврат Бух;
	
КонецФункции

//13.06.2015 Новый документооборот
Функция ПодключитьсяКБухГТРФМ () 
	//Изменено Monstr 180411
	//Было:
	//Попытка
	//	COMConnector=Новый COMОбъект("V83.COMConnector");
	//	V8 = COMConnector.Connect("Srvr=""1cserv""; Ref=""BUH_GTR_FM""; usr=""robot""; pwd=qp:Hj1S0EC");
	//	Бух = V8;
	//Исключение
	//	Бух = Неопределено;
	//КонецПопытки;
	Если Константы.ИспользоватьТестовоеПодключениеБП30.Получить() Тогда
		Бух = _5LB_ОбменСДругимиБазами.ПодключитьсяПоCOM("lab1c:1641","BUH_GTR_FM");
	Иначе 
		Бух = _5LB_ОбменСДругимиБазами.ПодключитьсяПоCOM("1cserv","BUH_GTR_FM");
	КонецЕсли;
	//Конец изменного Monstr 180411
	Возврат Бух;
КонецФункции


///////////////////////////////////////////////////////
// СИНХРОНИЗАЦИЯ ПТУ 

// Процедура синхронизации документов ПТУ
// Бажибин М.В. - Добавил два параметра что бы можно было выгрузить конкретные документы - 19.01.2016
Процедура СинхПоступления(Датко, НачПериода = Неопределено, КонПериода = Неопределено) Экспорт
	
	// Локальные переменные процедуры
	новДокВБух = Неопределено;
	
	// Подключение к БП 3.0
	бух = ПодключитьсяКБух();	
	Если бух = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Запрос получения данных по ПТУ в УТ
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ТОГДА НАЧАЛОПЕРИОДА(П.Ссылка.Дата, ДЕНЬ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(П.Ссылка.ДатаВходящегоДокумента, ДЕНЬ)
	               |	КОНЕЦ КАК Дата,
	               |	П.Номенклатура.Код КАК Код,
	               |	П.Количество * П.Коэффициент КАК Количество,
	               |	П.Ссылка.СкладОрдер.Код КАК СкладКод,
	               |	П.Ссылка.Контрагент.РасписаниеРаботыСтрокой КАК КодКонтрика,
	               |	П.Ссылка КАК Ссылка,
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ИспользоватьМодифицированнуюЦену
	               |			ТОГДА ВЫБОР
	               |					КОГДА П.МодифицированнаяСумма = 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА П.СуммаИзДокумента = 0
	               |									ТОГДА П.Сумма
	               |								ИНАЧЕ П.СуммаИзДокумента
	               |							КОНЕЦ
	               |					ИНАЧЕ П.МодифицированнаяСумма
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА П.СуммаИзДокумента = 0
	               |					ТОГДА П.Сумма
	               |				ИНАЧЕ П.СуммаИзДокумента
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ИспользоватьМодифицированнуюЦену
	               |			ТОГДА ВЫБОР
	               |					КОГДА П.МодифицированнаяСумма = 0
	               |						ТОГДА 1
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ОшибкаВМодифицированныхЦенах
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК П
	               |ГДЕ
	               |	П.Ссылка.Проведен
	               |	И П.Ссылка.ОтражатьВБухгалтерскомУчете = ЛОЖЬ
	               |	И ВЫБОР
	               |			КОГДА П.Ссылка.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |				ТОГДА НАЧАЛОПЕРИОДА(П.Ссылка.Дата, ДЕНЬ)
	               |			ИНАЧЕ НАЧАЛОПЕРИОДА(П.Ссылка.ДатаВходящегоДокумента, ДЕНЬ)
	               |		КОНЕЦ МЕЖДУ &Дат1 И &Дат2
	               |	И НЕ П.Номенклатура В ИЕРАРХИИ (&НеТмц)
	               |	И П.Ссылка.Контрагент.РасписаниеРаботыСтрокой <> """"
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Ссылка,
	               |	СкладКод,
	               |	КодКонтрика
	               |ИТОГИ
	               |	МАКСИМУМ(ОшибкаВМодифицированныхЦенах)
	               |ПО
	               |	Ссылка";
	
	Если ЗначениеЗаполнено(НачПериода) И ЗначениеЗаполнено(КонПериода) Тогда
		Запрос.УстановитьПараметр("Дат1",НачПериода);
		Запрос.УстановитьПараметр("Дат2",КонПериода);
	Иначе
		Запрос.УстановитьПараметр("Дат1",НачалоМесяца(Датко));
		Запрос.УстановитьПараметр("Дат2",КонецМесяца(Датко));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НеТмц",Справочники.Номенклатура.НайтиПоКоду("06052014")); // группа номенклатуры "Не ТМЦ"	
	
	дзДанныхПоПТУ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого строкаВУ из дзДанныхПоПТУ.Строки Цикл
		
		// Осуществляем поиск в БП документа ПТУ по GUID
		НовДокВБух = ПоискВПриёмникеПТУ(Бух, строкаВУ.Ссылка);
		
		Если НовДокВБух.ЭтоНовый() Тогда
			УИД = XMLСтрока(строкаВУ.Ссылка);
			КлючУникальности = Бух.NewObject("УникальныйИдентификатор", УИД);
			ТмпСсылка = Бух.Документы.ПоступлениеТоваровУслуг.ПолучитьСсылку(КлючУникальности);
			НовДокВБух.УстановитьСсылкуНового(ТмпСсылка);
		КонецЕсли;
		
		// Катков А. 18.10.2016 >>
		#Если Клиент Тогда
			Попытка
				Сообщить("Обрабатываем вх.№ " + строкаВУ.Ссылка.НомерВходящегоДокумента + " от " + строкаВУ.Ссылка.ДатаВходящегоДокумента + " """ + строкаВУ.Ссылка + """");
			Исключение
			
			КонецПопытки; 
		#КонецЕсли
		// Катков А. 18.10.2016 << 
		
		// Заполняем данные шапки документа
		// строкаВУ.Строки[0] - гарантировано есть
		СформироватьШапкуПТУ(Бух, НовДокВБух, строкаВУ.Строки[0]);					
		
		НовДокВБух.Товары.Очистить();
		
		Для Каждого строкаНоменклатуры Из строкаВУ.Строки Цикл
			
			Товары = НовДокВБух.Товары.Добавить();
			
			// Получение/создание номенклатуры в БП 3.0 по коду
			//Изменено Monstr 180410
			//Было:Товары.Номенклатура = ПолучитьНоменклатуруВПриёмнике(Бух, Справочники.Номенклатура.НайтиПоКоду(строкаНоменклатуры.Код));
			ЕдиницаХранения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
			Товары.Номенклатура = _5LB_ОбменСДругимиБазами.ПолучитьНоменклатуруВПриёмнике(Бух, Справочники.Номенклатура.НайтиПоКоду(строкаНоменклатуры.Код),,ЕдиницаХранения);
			Товары.Количество = строкаНоменклатуры.Количество * ?(строкаНоменклатуры.Коэффициент = 0,1,строкаНоменклатуры.Коэффициент) * строкаНоменклатуры.ЕдиницаИзмерения.Коэффициент / ?(НЕ ЕдиницаХранения.Коэффициент = 0,ЕдиницаХранения.Коэффициент,1);
			//Конец изменного Monstr 180410
			
			Товары.СтавкаНДС = Бух.Перечисления.СтавкиНДС.НДС18; 
			Товары.Сумма = ?(строкаНоменклатуры.Сумма = 0, 1, строкаНоменклатуры.Сумма);
			Товары.Цена = Товары.Сумма/?(Товары.Количество = 0, 1, Товары.Количество);
			Товары.СуммаНДС = Товары.Сумма - (100 * Товары.Сумма / (100 + 18));
			Товары.СчетУчета = ?(Найти(НовДокВБух.Контрагент.Комментарий,"41.01")>0, Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01"), Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("004.01"));
			Если Найти(НовДокВБух.Контрагент.Комментарий,"41.01")>0 Тогда
				Товары.СчетУчетаНДС = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.03");
			// Катков А. 05.10.2016 >>
			Иначе
			// Катков А. 05.10.2016 <<   
				Товары.СтавкаНДС = Бух.Перечисления.СтавкиНДС.БезНДС; 
				Товары.СуммаНДС = 0;
			КонецЕсли;
			
		КонецЦикла;
		
		Попытка
			//**********************************************************************************
			//******************                КОРРЕКТИРОВКА             **********************
			//**********************************************************************************
			//Изменено Monstr 180707
			//Было:НовДокВБух.Записать(Бух.РежимЗаписиДокумента.Проведение)
			НовДокВБух.Записать(Бух.РежимЗаписиДокумента.Запись)
			//Конец изменного Monstr 180707
		Исключение
			Сообщить("Не удалось провести документ (в УТ 10.3) номер входящего документа: " + НовДокВБух.Номер + " от " + НовДокВБух.Дата + Символы.ПС + ОписаниеОшибки());
			Попытка
				НовДокВБух.Записать();
			Исключение 
				Сообщить("Не удалось записать документ (в УТ 10.3) номер входящего документа: " + НовДокВБух.Номер + " от " + НовДокВБух.Дата + Символы.ПС + ОписаниеОшибки());
			КонецПопытки;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СинхПоступленияГТР() Экспорт
	
	// Локальные переменные процедуры
	новДокВБух = Неопределено;
	НачПериода = НачалоДня(ТекущаяДата()-86400*15);
	КонПериода = ТекущаяДата();
	
	
	// Подключение к БП 3.0
	бух = ПодключитьсяКБух();	
	Если бух = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ТОГДА НАЧАЛОПЕРИОДА(П.Ссылка.Дата, ДЕНЬ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(П.Ссылка.ДатаВходящегоДокумента, ДЕНЬ)
	               |	КОНЕЦ КАК Дата,
	               |	П.Номенклатура.Код КАК Код,
	               |	П.Количество * П.Коэффициент КАК Количество,
	               |	П.Ссылка.СкладОрдер.Код КАК СкладКод,
	               |	П.Ссылка.Контрагент.ИНН КАК ИННКонтрика,
	               |	П.Ссылка КАК Ссылка,
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ИспользоватьМодифицированнуюЦену
	               |			ТОГДА ВЫБОР
	               |					КОГДА П.МодифицированнаяСумма = 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА П.СуммаИзДокумента = 0
	               |									ТОГДА П.Сумма
	               |								ИНАЧЕ П.СуммаИзДокумента
	               |							КОНЕЦ
	               |					ИНАЧЕ П.МодифицированнаяСумма
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА П.СуммаИзДокумента = 0
	               |					ТОГДА П.Сумма
	               |				ИНАЧЕ П.СуммаИзДокумента
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ИспользоватьМодифицированнуюЦену
	               |			ТОГДА ВЫБОР
	               |					КОГДА П.МодифицированнаяСумма = 0
	               |						ТОГДА 1
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ОшибкаВМодифицированныхЦенах
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК П
	               |ГДЕ
	               |	П.Ссылка.Проведен
				   |	И П.Ссылка.Организация = &ГТР
	               |	И П.Ссылка.ОтражатьВБухгалтерскомУчете = ЛОЖЬ
	               |	И ВЫБОР
	               |			КОГДА П.Ссылка.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |				ТОГДА НАЧАЛОПЕРИОДА(П.Ссылка.Дата, ДЕНЬ)
	               |			ИНАЧЕ НАЧАЛОПЕРИОДА(П.Ссылка.ДатаВходящегоДокумента, ДЕНЬ)
	               |		КОНЕЦ МЕЖДУ &Дат1 И &Дат2
				   //|	И НЕ П.Номенклатура В ИЕРАРХИИ (&НеТмц)
	               |	И П.Ссылка.Контрагент.ИНН <> """"
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Ссылка,
	               |	СкладКод,
	               |	ИННКонтрика
	               |ИТОГИ
	               |	МАКСИМУМ(ОшибкаВМодифицированныхЦенах)
	               |ПО
	               |	Ссылка";
	
	
	Запрос.УстановитьПараметр("Дат1",НачПериода);
	Запрос.УстановитьПараметр("Дат2",КонПериода);
		
	Запрос.УстановитьПараметр("НеТмц",Справочники.Номенклатура.НайтиПоКоду("06052014")); // группа номенклатуры "Не ТМЦ"
	Запрос.УстановитьПараметр("ГТР",Справочники.Организации.НайтиПоКоду("662"));
	
	дзДанныхПоПТУ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого строкаВУ из дзДанныхПоПТУ.Строки Цикл
		
		// Осуществляем поиск в БП документа по GUID
		НовДокВБух = ПоискВПриёмникеПТУ(Бух, строкаВУ.Ссылка);
		
		Если НовДокВБух.ЭтоНовый() Тогда
			УИД = XMLСтрока(строкаВУ.Ссылка);
			КлючУникальности = Бух.NewObject("УникальныйИдентификатор", УИД);
			ТмпСсылка = Бух.Документы.ПоступлениеТоваровУслуг.ПолучитьСсылку(КлючУникальности);
			НовДокВБух.УстановитьСсылкуНового(ТмпСсылка);
		КонецЕсли;
		
		// Заполняем данные шапки документа
		СформироватьШапкуПоступлГТРФМ(Бух, НовДокВБух, строкаВУ.Строки[0]);					
		
		НовДокВБух.Товары.Очистить();
		
		Для Каждого строкаНоменклатуры Из строкаВУ.Строки Цикл
			
			Товары = НовДокВБух.Товары.Добавить();
			
			// Получение/создание номенклатуры в БП 3.0 по коду
			//Изменено Monstr 180410
			//Было:Товары.Номенклатура = ПолучитьНоменклатуруВПриёмнике(Бух, Справочники.Номенклатура.НайтиПоКоду(строкаНоменклатуры.Код));
			ЕдиницаХранения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
			Товары.Номенклатура = _5LB_ОбменСДругимиБазами.ПолучитьНоменклатуруВПриёмнике(Бух, Справочники.Номенклатура.НайтиПоКоду(строкаНоменклатуры.Код),,ЕдиницаХранения);
			Товары.Количество = строкаНоменклатуры.Количество * ?(строкаНоменклатуры.Коэффициент = 0,1,строкаНоменклатуры.Коэффициент) * строкаНоменклатуры.ЕдиницаИзмерения.Коэффициент / ?(НЕ ЕдиницаХранения.Коэффициент = 0,ЕдиницаХранения.Коэффициент,1);
			//Конец изменного Monstr 180410
			
			Товары.СтавкаНДС = Бух.Перечисления.СтавкиНДС.НДС18; 
			Товары.Сумма = ?(строкаНоменклатуры.Сумма = 0, 1, строкаНоменклатуры.Сумма);
			Товары.Цена = Товары.Сумма/?(Товары.Количество = 0, 1, Товары.Количество);
			Товары.СуммаНДС = Товары.Сумма - (100 * Товары.Сумма / (100 + 18));
			Товары.СчетУчета = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
			Товары.СчетУчетаНДС = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.03");
						
		КонецЦикла;
		
		Попытка
			НовДокВБух.Записать(Бух.РежимЗаписиДокумента.Проведение)
		Исключение
			Попытка
				НовДокВБух.Записать();
			Исключение 
			КонецПопытки;
		КонецПопытки;
		
	КонецЦикла;
	
	СинхПоступленияФМ(НачПериода, КонПериода);
КонецПроцедуры

Процедура СинхПоступленияФМ(НачПериода = Неопределено, КонПериода = Неопределено) Экспорт
	
	// Локальные переменные процедуры
	новДокВБух = Неопределено;
	
	// Подключение к БП 3.0
	Бух = ПодключитьсяКБухГТРФМ ();
	Если Бух = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |			ТОГДА НАЧАЛОПЕРИОДА(П.Ссылка.Дата, ДЕНЬ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(П.Ссылка.ДатаВходящегоДокумента, ДЕНЬ)
	               |	КОНЕЦ КАК Дата,
	               |	П.Номенклатура.Код КАК Код,
	               |	П.Количество * П.Коэффициент КАК Количество,
	               |	П.Ссылка.СкладОрдер.Код КАК СкладКод,
	               |	П.Ссылка.Контрагент.ИНН КАК ИННКонтрика,
	               |	П.Ссылка КАК Ссылка,
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ИспользоватьМодифицированнуюЦену
	               |			ТОГДА ВЫБОР
	               |					КОГДА П.МодифицированнаяСумма = 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА П.СуммаИзДокумента = 0
	               |									ТОГДА П.Сумма
	               |								ИНАЧЕ П.СуммаИзДокумента
	               |							КОНЕЦ
	               |					ИНАЧЕ П.МодифицированнаяСумма
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА П.СуммаИзДокумента = 0
	               |					ТОГДА П.Сумма
	               |				ИНАЧЕ П.СуммаИзДокумента
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА П.Ссылка.ИспользоватьМодифицированнуюЦену
	               |			ТОГДА ВЫБОР
	               |					КОГДА П.МодифицированнаяСумма = 0
	               |						ТОГДА 1
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ОшибкаВМодифицированныхЦенах
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК П
	               |ГДЕ
	               |	П.Ссылка.Проведен
				   |	И П.Ссылка.Организация = &ФМ
	               |	И П.Ссылка.ОтражатьВБухгалтерскомУчете = ЛОЖЬ
	               |	И ВЫБОР
	               |			КОГДА П.Ссылка.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |				ТОГДА НАЧАЛОПЕРИОДА(П.Ссылка.Дата, ДЕНЬ)
	               |			ИНАЧЕ НАЧАЛОПЕРИОДА(П.Ссылка.ДатаВходящегоДокумента, ДЕНЬ)
	               |		КОНЕЦ МЕЖДУ &Дат1 И &Дат2
				   //|	И НЕ П.Номенклатура В ИЕРАРХИИ (&НеТмц)
	               |	И П.Ссылка.Контрагент.ИНН <> """"
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Ссылка,
	               |	СкладКод,
	               |	ИННКонтрика
	               |ИТОГИ
	               |	МАКСИМУМ(ОшибкаВМодифицированныхЦенах)
	               |ПО
	               |	Ссылка";
	
	Запрос.УстановитьПараметр("Дат1",НачПериода);
	Запрос.УстановитьПараметр("Дат2",КонПериода);
		
	Запрос.УстановитьПараметр("НеТмц",Справочники.Номенклатура.НайтиПоКоду("06052014")); // группа номенклатуры "Не ТМЦ"
	Запрос.УстановитьПараметр("ФМ",Справочники.Организации.НайтиПоКоду("661"));
	
	дзДанныхПоПТУ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого строкаВУ из дзДанныхПоПТУ.Строки Цикл
		
		// Осуществляем поиск в БП документа по GUID
		НовДокВБух = ПоискВПриёмникеПТУ(Бух, строкаВУ.Ссылка);
		
		Если НовДокВБух.ЭтоНовый() Тогда
			УИД = XMLСтрока(строкаВУ.Ссылка);
			КлючУникальности = Бух.NewObject("УникальныйИдентификатор", УИД);
			ТмпСсылка = Бух.Документы.ПоступлениеТоваровУслуг.ПолучитьСсылку(КлючУникальности);
			НовДокВБух.УстановитьСсылкуНового(ТмпСсылка);
		КонецЕсли;
		
		// Заполняем данные шапки документа
		СформироватьШапкуПоступлГТРФМ(Бух, НовДокВБух, строкаВУ.Строки[0]);					
		
		НовДокВБух.Товары.Очистить();
		
		Для Каждого строкаНоменклатуры Из строкаВУ.Строки Цикл
			
			Товары = НовДокВБух.Товары.Добавить();
			
			// Получение/создание номенклатуры в БП 3.0 по коду
			//Изменено Monstr 180410
			//Было:Товары.Номенклатура = ПолучитьНоменклатуруВПриёмнике(Бух, Справочники.Номенклатура.НайтиПоКоду(строкаНоменклатуры.Код),Истина);
			ЕдиницаХранения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
			Товары.Номенклатура = _5LB_ОбменСДругимиБазами.ПолучитьНоменклатуруВПриёмнике(Бух, Справочники.Номенклатура.НайтиПоКоду(строкаНоменклатуры.Код),Истина,ЕдиницаХранения);
			Товары.Количество = строкаНоменклатуры.Количество * ?(строкаНоменклатуры.Коэффициент = 0,1,строкаНоменклатуры.Коэффициент) * строкаНоменклатуры.ЕдиницаИзмерения.Коэффициент / ?(НЕ ЕдиницаХранения.Коэффициент = 0,ЕдиницаХранения.Коэффициент,1);
			//Конец изменного Monstr 180410
			
			Товары.СтавкаНДС = Бух.Перечисления.СтавкиНДС.НДС18; 
			Товары.Сумма = ?(строкаНоменклатуры.Сумма = 0, 1, строкаНоменклатуры.Сумма);
			Товары.Цена = Товары.Сумма/?(Товары.Количество = 0, 1, Товары.Количество);
			Товары.СуммаНДС = Товары.Сумма - (100 * Товары.Сумма / (100 + 18));
			Товары.СчетУчета = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
			Товары.СчетУчетаНДС = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.03");
						
		КонецЦикла;
		
		Попытка
			НовДокВБух.Записать(Бух.РежимЗаписиДокумента.Проведение)
		Исключение
			Попытка
				НовДокВБух.Записать();
			Исключение 
			КонецПопытки;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры



// Процедура поиска ссылки на ПТУ в БП 3.0 по GUID  
Функция ПоискВПриёмникеПТУ(Бух, Док) 
		
	Типп = Бух.NewObject("ОписаниеТипов","ДокументСсылка.ПоступлениеТоваровУслуг").Типы().Получить(0);
	
	ЗапросВПриёмнике = Бух.NewObject("Запрос");
	ЗапросВПриёмнике.Текст="ВЫБРАТЬ
	                       |	ПоступлениеТоваровУслуг.Ссылка
	                       |ИЗ
	                       |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	                       |ГДЕ
	                       |	ПоступлениеТоваровУслуг.Ссылка = &Ссылка";
	ЗапросВПриёмнике.УстановитьПараметр("Ссылка", Бух.XMLЗначение(Типп, XMLСтрока(Док.Ссылка)));
	
	Рез = ЗапросВПриёмнике.Выполнить();
	
	Если Рез.Пустой() Тогда
		//Нет документа
		Документ = Бух.Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Документ = Выб.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	возврат Документ;
	
КонецФункции

Функция ПоискВПриёмникеРеал(Бух, Док) 
		
	Типп = Бух.NewObject("ОписаниеТипов","ДокументСсылка.РеализацияТоваровУслуг").Типы().Получить(0);
	
	ЗапросВПриёмнике = Бух.NewObject("Запрос");
	ЗапросВПриёмнике.Текст="ВЫБРАТЬ
	                       |	РеализацияТоваровУслуг.Ссылка
	                       |ИЗ
	                       |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                       |ГДЕ
	                       |	РеализацияТоваровУслуг.Ссылка = &Ссылка";
	ЗапросВПриёмнике.УстановитьПараметр("Ссылка", Бух.XMLЗначение(Типп, XMLСтрока(Док.Ссылка)));
	
	Рез = ЗапросВПриёмнике.Выполнить();
	
	Если Рез.Пустой() Тогда
		//Нет документа
		Документ = Бух.Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Документ = Выб.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	возврат Документ;
	
КонецФункции


// Процедура заполнения шапки ПТУ в БП 3.0 по данным УТ
Процедура СформироватьШапкуПТУ(Бух, НовДокВБух, ст)
	
	НовДокВБух.Дата = ст.Дата;
	НовДокВБух.НомерВходящегоДокумента = ст.Ссылка.НомерВходящегоДокумента;
    //**********************************************************************************
	//******************                КОРРЕКТИРОВКА             **********************
	//**********************************************************************************
	//Изменено Monstr 180707
	//Было:НовДокВБух.Организация = Бух.Справочники.Организации.НайтиПоКоду("00-000001");
	НовДокВБух.Организация = Бух.Справочники.Организации.НайтиПоКоду("БП-000011");
	Если НЕ Бух.ЗначениеЗаполнено(НовДокВБух.Организация) Тогда
		НовДокВБух.Организация = Бух.Справочники.Организации.НайтиПоРеквизиту("ИНН","7743230575");
	КонецЕсли;
	//Конец изменного Monstr 180707
	//++ Бажибин М.В. - 
	// Появились такие контрагенты, которые переносятся явно, бех всяких 
	// кодов в расписании работы
	НовДокВБух.Контрагент = ПолучитьКонтрагента(ст, Бух);//Бух.Справочники.Контрагенты.НайтиПоКоду(ст.КодКонтрика);
	
	// Катков А. 18.10.2016 >>
	#Если Клиент Тогда
		Попытка
			Сообщить("       - контрагент в бухгалтерии: " + НовДокВБух.Контрагент.description);
		Исключение
		
		КонецПопытки; 
	#КонецЕсли
	// Катков А. 18.10.2016 <<   
	
	//++ Бажибин М.В. - 
	// 
	// Теперь ищем основные договора по новому...
	// НовДокВБух.ДоговорКонтрагента = НовДокВБух.Контрагент.УдалитьОсновнойДоговорКонтрагента;
	УстановитьДоговорКонтрагента(НовДокВБух, Бух);
	НовДокВБух.Склад = Бух.Справочники.Склады.НайтиПоКоду(ст.СкладКод);
	НовДокВБух.ВидОперации = Бух.Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
	
	//++ Бажибин М.В. - Ставим костыль из-за того что бух завели новое подразделение - 15.01.2016
	Если ст.Дата >= '20160101' И ст.СкладКод = "000000005" Тогда
		НовДокВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду("00-000009");
	Иначе
		НовДокВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(ст.СкладКод);
	КонецЕсли;
	//НовДокВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(ст.СкладКод);
	//-- Бажибин М.В. - 15.01.2016
	
	НовДокВБух.ВалютаДокумента = Бух.Справочники.Валюты.НайтиПоКоду("643");
	НовДокВБух.КурсВзаиморасчетов=1;
	НовДокВБух.КратностьВзаиморасчетов=1;
	НовДокВБух.СуммаВключаетНДС = Истина;
	НовДокВБух.СпособЗачетаАвансов = Бух.Перечисления.СпособыЗачетаАвансов.Автоматически;
	//++ Бажибин М.В. - 
	// 
	// счета будем ставить по нормальному, взависимости от видв договора контрагента
	УстановитьСчетаУчета(Бух, НовДокВБух);
	//НовДокВБух.СчетУчетаРасчетовСКонтрагентом = ?(Найти(НовДокВБух.Контрагент.Комментарий,"41.01")>0,Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.01"),Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.06"));
	Если Найти(НовДокВБух.Контрагент.Комментарий,"41.01")>0 Тогда
		// Катков А. 18.10.2016 >>
		НовДокВБух.СчетУчетаРасчетовСКонтрагентом = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.01");
		#Если Клиент Тогда
		Попытка
			Сообщить("       - в соответствии с ""41.01"" в комментарии контрагента в бухгалтерии перезаполнены счета учета на 60-е.");
		Исключение
		
		КонецПопытки; 
		#КонецЕсли
		// Катков А. 18.10.2016 <<  
		НовДокВБух.СчетУчетаРасчетовПоАвансам = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.02");
		НовДокВБух.СпособЗачетаАвансов = Бух.Перечисления.СпособыЗачетаАвансов.Автоматически;
	КонецЕсли;
	НовДокВБух.Комментарий = ст.Ссылка.Комментарий;
		
КонецПроцедуры

Процедура СформироватьШапкуПоступлГТРФМ(Бух, НовДокВБух, ст)
	
	НовДокВБух.Дата = ст.Дата;
	НовДокВБух.НомерВходящегоДокумента = ст.Ссылка.НомерВходящегоДокумента;
    НовДокВБух.Организация = Бух.Справочники.Организации.НайтиПоРеквизиту("ИНН",СокрЛП(ст.Ссылка.Организация.ИНН));
	НовДокВБух.Контрагент = Бух.Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", СокрЛП(ст.Ссылка.Контрагент.ИНН));
		
	УстановитьДоговорКонтрагента(НовДокВБух, Бух);
	НовДокВБух.Склад = Бух.Справочники.Склады.НайтиПоКоду(ст.СкладКод);
	НовДокВБух.ВидОперации = Бух.Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
	НовДокВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду("00-000001",,,НовДокВБух.Организация);
		
	НовДокВБух.ВалютаДокумента = Бух.Справочники.Валюты.НайтиПоКоду("643");
	НовДокВБух.КурсВзаиморасчетов=1;
	НовДокВБух.КратностьВзаиморасчетов=1;
	НовДокВБух.СуммаВключаетНДС = Истина;
	НовДокВБух.СпособЗачетаАвансов = Бух.Перечисления.СпособыЗачетаАвансов.Автоматически;
	НовДокВБух.СчетУчетаРасчетовСКонтрагентом = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.01");
	НовДокВБух.СчетУчетаРасчетовПоАвансам = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.02");

	
	НовДокВБух.Комментарий = ст.Ссылка.Комментарий;
		
КонецПроцедуры


Функция ПолучитьКонтрагента(Строка, Соединение)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Объект", Строка.Ссылка.Контрагент);
	Отбор.Вставить("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("000000078"));
	Результат = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Отбор);
	
	Контрагент = Строка.Ссылка.Контрагент;
	
	Если ЗначениеЗаполнено(Результат.Значение) И Результат.Значение Тогда
		// Переносем контрагента по ссылке
		СправочникСсылка = Соединение.Справочники.Контрагенты.ПолучитьСсылку(Соединение.NewObject("УникальныйИдентификатор", Строка(Контрагент.УникальныйИдентификатор())));
		
		Если СокрЛП(СправочникСсылка.Code) = "" Тогда
			// Объект не найден
			НовыйОбъект = Соединение.Справочники.Контрагенты.СоздатьЭлемент();
			НовыйОбъект.УстановитьСсылкуНового(СправочникСсылка);
			НовыйОбъект.Родитель		= Соединение.Справочники.Контрагенты.НайтиПоКоду("00-001776"); //00-001776
			НовыйОбъект.Код				= Контрагент.Код;
			НовыйОбъект.Наименование	= Контрагент.Наименование;
			НовыйОбъект.НаименованиеПолное	= Контрагент.НаименованиеПолное;
			НовыйОбъект.ЮридическоеФизическоеЛицо	= Соединение.Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
			НовыйОбъект.ГоловнойКонтрагент	= СправочникСсылка;
			НовыйОбъект.ИНН				= Контрагент.ИНН;
			НовыйОбъект.КПП				= Контрагент.КПП;
			
			Попытка
				НовыйОбъект.Записать();
				Возврат НовыйОбъект.Ссылка;
			Исключение
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ОписаниеОшибки();
				Сообщение.Сообщить();
			КонецПопытки;
		Иначе
			Возврат СправочникСсылка;
		КонецЕсли;
	Иначе
		Возврат Соединение.Справочники.Контрагенты.НайтиПоКоду(Строка.КодКонтрика);
	КонецЕсли;
	
КонецФункции

//Изменено Monstr 180410
//Доработка согласно ЛТ №2 от 05.04.18
//Было:
// Процедура поиска номенклатуры в БП 3.0 по коду
//Функция ПолучитьНоменклатуруВПриёмнике(Бух, Номенклатура, ФМ=Ложь)
//	
//	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
//		Возврат Неопределено;
//	КонецЕсли;
//		
//	// Поиск в БП номенклатуры по коду 
//	Запрос = Бух.NewObject("Запрос");
//	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
//	|	Н.Ссылка
//	|ИЗ
//	|	Справочник.Номенклатура КАК Н
//	|ГДЕ
//	|	НЕ Н.ЭтоГруппа
//	|	И Н.Код = &Код";
//	Запрос.УстановитьПараметр("Код",СокрЛП(Номенклатура.Код));
//	
//	Рез = Запрос.Выполнить();
//	Если Рез.Пустой() Тогда
//		// Номенклатура не найдена в БП 3.0 по коду
//		
//		Если ЗначениеЗаполнено(Номенклатура.Родитель) Тогда
//	         // Поиск в БП родителя номенклатуры по коду 
//			Запрос = Бух.NewObject("Запрос");
//			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
//			|	Н.Ссылка
//			|ИЗ
//			|	Справочник.Номенклатура КАК Н
//			|ГДЕ
//			|	Н.ЭтоГруппа
//			|	И Н.Код = &Код";
//			Запрос.УстановитьПараметр("Код",СокрЛП(Номенклатура.Родитель.Код));
//			РезРод = Запрос.Выполнить();
//			Если РезРод.Пустой() Тогда
//				// Родитель номенклатуры не найден в БП 3.0 по коду -> Создаем новую группу
//				НовРод = Бух.Справочники.Номенклатура.СоздатьГруппу();                        
//				НовРод.Родитель = ?(ФМ,Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039"),Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000001"));//Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039"); // Товары
//				НовРод.Код = Номенклатура.Родитель.Код;
//				НовРод.Наименование = Номенклатура.Родитель.Наименование;
//				НовРод.Записать();
//			Иначе
//				// Родитель номенклатуры найден в БП 3.0 по коду
//				Выб = РезРод.Выбрать();
//				Выб.Следующий();
//				НовРод = Выб.Ссылка;
//			КонецЕсли;
//		Иначе
//			НовРод = ?(ФМ,Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039"),Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000001"));//Бух.Справочники.Номенклатура.НайтиПоКоду("00-00000039"); // Товары
//		КонецЕсли;
//				
//		НовНом = Бух.Справочники.Номенклатура.СоздатьЭлемент();
//		НовНом.Код = Номенклатура.Код;
//		НовНом.Артикул = Номенклатура.Артикул;
//		НовНом.Родитель = НовРод.Ссылка;
//		НовНом.Наименование = Номенклатура.Наименование;
//		НовНом.НаименованиеПолное = Номенклатура.Наименование;
//		НовНом.ЕдиницаИзмерения = Бух.Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("796");
//		НовНом.Комментарий = "Пришло из УТ "+ТекущаяДата();
//		НовНом.НоменклатурнаяГруппа = Бух.Справочники.НоменклатурныеГруппы.НайтиПоКоду("00-000001");
//		НовНом.СтавкаНДС = Бух.Перечисления.СтавкиНДС.НДС18;
//		НовНом.Записать(); 
//		
//	Иначе
//		// Номенклатура в БП найдена
//		
//		Выб = Рез.Выбрать();
//		Выб.Следующий();
//		
//		// Возвращаем ссылку на найденую номенклатуру в БП
//		НовНом = Выб.Ссылка;
//		
//	КонецЕсли;
//	
//	Возврат НовНом.Ссылка;
//	
//КонецФункции
//Конец изменного Monstr 180410

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////

Процедура УстановитьДоговорКонтрагента(НовДокВБух, Соединение)
	
	МассивВидовдоговоров = Соединение.NewObject("Массив");
	МассивВидовдоговоров.Добавить(Соединение.Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	МассивВидовдоговоров.Добавить(Соединение.Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
	МассивВидовдоговоров.Добавить(Соединение.Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	
	Соединение.РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(НовДокВБух.ДоговорКонтрагента,
		НовДокВБух.Контрагент, НовДокВБух.Организация, МассивВидовдоговоров);
	
	
КонецПроцедуры

процедура УстановитьСчетаУчета(Соединение, НовыйДокумент)
	
	Если НовыйДокумент.ДоговорКонтрагента.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если НовыйДокумент.ДоговорКонтрагента.ВидДоговора = Соединение.Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
		// 60 счета
		НовыйДокумент.СчетУчетаРасчетовСКонтрагентом	= Соединение.ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
		НовыйДокумент.СчетУчетаРасчетовПоАвансам		= Соединение.ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным;
		// Катков А. 18.10.2016 >>
		#Если Клиент Тогда
		Попытка
			Сообщить("       - в соответствии с договором заполнены счета учета 60.");
		Исключение
		
		КонецПопытки; 
		#КонецЕсли
	    // Катков А. 18.10.2016 <<  
	Иначе
		// комиссионер
		НовыйДокумент.СчетУчетаРасчетовСКонтрагентом	= Соединение.ПланыСчетов.Хозрасчетный.РасчетыСПрочимиПокупателямиИЗаказчиками;
		НовыйДокумент.СчетУчетаРасчетовПоАвансам		= Соединение.ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		// Катков А. 18.10.2016 >>
		#Если Клиент Тогда
		Попытка
			Сообщить("       - в соответствии с договором заполнены счета учета 76.06.");
		Исключение
		
		КонецПопытки; 
		#КонецЕсли
		// Катков А. 18.10.2016 <<  
	КонецЕсли;
	
КонецПроцедуры


///////////////////////////////////////////////////////
// СИНХРОНИЗАЦИЯ ПЕРЕМЕЩЕНИЙ (НЕ ИСПОЛЬЗУЕТСЯ!?) 

Функция ПоискВПриёмникеПеремещМаг(Бух,ДатаДока,СкладПолучатель) 
	
	ЗапросВПриёмнике = Бух.NewObject("Запрос");
	ЗапросВПриёмнике.Текст="Выбрать П.Ссылка из Документ.ПеремещениеТоваров КАК П Где П.Дата МЕЖДУ &Дата1 И &Дата2 И П.СкладПолучатель = &Склад";
	ЗапросВПриёмнике.УстановитьПараметр("Дата1", НачалоДня(ДатаДока));
	ЗапросВПриёмнике.УстановитьПараметр("Дата2", КонецДня(ДатаДока));
	ЗапросВПриёмнике.УстановитьПараметр("Склад", Бух.Справочники.Склады.НайтиПоКоду(СкладПолучатель));
	Рез = ЗапросВПриёмнике.Выполнить();
	Если Рез.Пустой() Тогда
		//Нет документа
		Документ = Бух.Документы.ПеремещениеТоваров.СоздатьДокумент();
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Документ = Выб.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	возврат Документ;
	
	
КонецФункции

Функция ПоискВПриёмникеПеремещ(Бух,ДатаДока,КодМагаза) 
	
	ЗапросВПриёмнике = Бух.NewObject("Запрос");
	ЗапросВПриёмнике.Текст="Выбрать П.Ссылка из Документ.ПеремещениеТоваров КАК П Где П.Дата МЕЖДУ &Дата1 И &Дата2 И П.СкладОтправитель = &Склад";
	ЗапросВПриёмнике.УстановитьПараметр("Дата1", НачалоДня(ДатаДока));
	ЗапросВПриёмнике.УстановитьПараметр("Дата2", КонецДня(ДатаДока));
	ЗапросВПриёмнике.УстановитьПараметр("Склад", Бух.Справочники.Склады.НайтиПоКоду(КодМагаза));
	Рез = ЗапросВПриёмнике.Выполнить();
	Если Рез.Пустой() Тогда
		//Нет документа
		Документ = Бух.Документы.ПеремещениеТоваров.СоздатьДокумент();
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Документ = Выб.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	возврат Документ;
		
КонецФункции

Процедура СформироватьШапкуПеремещ(Бух,ст,НовДокВБух)
	
	НовДокВБух.Дата = ?(ст.СкладОтправКод = "000000005",ст.Дата,КонецДня(ст.Дата)) ;
	НовДокВБух.Организация = Бух.Справочники.Организации.НайтиПоКоду("00-000001");
	НовДокВБух.СкладОтправитель = Бух.Справочники.Склады.НайтиПоКоду(ст.СкладОтправКод);
	НовДокВБух.СкладПолучатель = Бух.Справочники.Склады.НайтиПоКоду(ст.СкладПолучКод);
	НовДокВБух.ПодразделениеОтправитель = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(ст.СкладОтправКод,,,Бух.Справочники.Организации.НайтиПоКоду("00-000001"));
    НовДокВБух.ПодразделениеПолучатель = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(ст.СкладПолучКод,,,Бух.Справочники.Организации.НайтиПоКоду("00-000001"));
		
КонецПроцедуры



//15.06.2017 Синхронизация реализаций
Процедура СинхронизацияРеализацийГТРФМ () Экспорт
	
	новДокВБух = Неопределено;
	НачПериода = НачалоДня(ТекущаяДата()-86400*30);
	КонПериода = ТекущаяДата();
	
	Бух = ПодключитьсяКБух();	
	Если Бух = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтправимРеализацииВБух(НачПериода,КонПериода,Бух,Справочники.Контрагенты.НайтиПоРеквизиту("ИНН","9717039840"));
	ОтправимРеализацииВБух(НачПериода,КонПериода,Бух,Справочники.Контрагенты.НайтиПоРеквизиту("ИНН","9715301436"));
		
КонецПроцедуры

Процедура ОтправимРеализацииВБух (НачПериода,КонПериода,Бух,Контр)
	
	Если Бух = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Контр = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Р.Ссылка.Дата КАК Дата,
	               |	Р.Номенклатура КАК Номенклатура,
	               |	Р.Склад КАК Склад,
	               |	Р.Количество * Р.Коэффициент КАК Количество,
	               |	Р.Ссылка КАК Ссылка,
	               |	Р.Сумма КАК Сумма
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК Р
	               |ГДЕ
	               |	Р.Ссылка.Проведен
	               |	И Р.Ссылка.Организация = &лб
	               |	И Р.Ссылка.Контрагент = &Контр
	               |	И Р.Ссылка.ОтражатьВБухгалтерскомУчете = ЛОЖЬ
	               |	И Р.Ссылка.Дата МЕЖДУ &Дат1 И &Дат2
				   //|	И НЕ Р.Номенклатура В ИЕРАРХИИ (&НеТмц)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Ссылка,
	               |	Р.Склад
	               |ИТОГИ
	               |	МАКСИМУМ(Дата)
	               |ПО
	               |	Ссылка";

	
	
	Запрос.УстановитьПараметр("Дат1",НачПериода);
	Запрос.УстановитьПараметр("Дат2",КонПериода);
		
	Запрос.УстановитьПараметр("НеТмц",Справочники.Номенклатура.НайтиПоКоду("06052014")); // группа номенклатуры "Не ТМЦ"
	Запрос.УстановитьПараметр("Контр",Контр);
	Запрос.УстановитьПараметр("лб",Справочники.Организации.НайтиПоКоду("000000001"));
	
	Рез = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого стрРеал из Рез.Строки Цикл
		
		НовДокВБух = ПоискВПриёмникеРеал(Бух, стрРеал.Ссылка);
		
		//***{+Редактирования}*** Тасмаджиев 13/08/2018// ->>
		//***=!{Использование неправильного метода работы с объектом через COM для проверки был ли документ записан хотя бы раз}!=*** ->>
		//Если НовДокВБух.ЭтоНовый() Тогда
		Если НовДокВБух.Ссылка.Пустая()Тогда
			//***{-Редактирования}*** Тасмаджиев 13/08/2018// <<-
			УИД = XMLСтрока(стрРеал.Ссылка);
			КлючУникальности = Бух.NewObject("УникальныйИдентификатор", УИД);
			ТмпСсылка = Бух.Документы.РеализацияТоваровУслуг.ПолучитьСсылку(КлючУникальности);
			НовДокВБух.УстановитьСсылкуНового(ТмпСсылка);
		КонецЕсли;
		
		// Заполняем данные шапки документа
		СформироватьШапкуРеалГТРФМ(Бух, НовДокВБух, стрРеал.Строки[0]);					
		
		НовДокВБух.Товары.Очистить();
		
		Для Каждого строкаНоменклатуры Из стрРеал.Строки Цикл
			
			Товары = НовДокВБух.Товары.Добавить();
			
			//Изменено Monstr 180410
			//Доработка согласно ЛТ №2 от 05.04.18
			//Было: Товары.Номенклатура = ПолучитьНоменклатуруВПриёмнике(Бух, строкаНоменклатуры.Номенклатура);
			ЕдиницаХранения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
			Товары.Номенклатура = _5LB_ОбменСДругимиБазами.ПолучитьНоменклатуруВПриёмнике(Бух, строкаНоменклатуры.Номенклатура,,ЕдиницаХранения);
			//***{+Изменения}*** Тасмаджиев 15/08/2018// ->
			//***=!{вылетало с ошибкой исправил на то что было в в cf к ЛТ4}!=*** ->>
			//Товары.Количество = строкаНоменклатуры.Количество * ?(строкаНоменклатуры.Коэффициент = 0,1,строкаНоменклатуры.Коэффициент) * строкаНоменклатуры.ЕдиницаИзмерения.Коэффициент / ?(НЕ ЕдиницаХранения.Коэффициент = 0,ЕдиницаХранения.Коэффициент,1);
			Товары.Количество = строкаНоменклатуры.Количество;
			//***{-Изменения}*** Тасмаджиев 15/08/2018// <<-
			//Конец изменного Monstr 180410
			Товары.Субконто = Бух.Справочники.НоменклатурныеГруппы.НайтиПоКоду("00-000001");
			Товары.СтавкаНДС = Бух.Перечисления.СтавкиНДС.НДС18; 
			Товары.Сумма = ?(строкаНоменклатуры.Сумма = 0, 1, строкаНоменклатуры.Сумма);
			Товары.Цена = Товары.Сумма/?(Товары.Количество = 0, 1, Товары.Количество);
			Товары.СуммаНДС = Товары.Сумма - (100 * Товары.Сумма / (100 + 18));
			Товары.СчетУчета = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
			Товары.СчетДоходов = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
			Товары.СчетРасходов = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
			Товары.СчетУчетаНДСПоРеализации = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.03");
			
		КонецЦикла;
		
		Попытка
			НовДокВБух.Записать(Бух.РежимЗаписиДокумента.Проведение)
		Исключение
			Попытка
				НовДокВБух.Записать();
			Исключение 
			КонецПопытки;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры


Процедура СформироватьШапкуРеалГТРФМ(Бух, НовДокВБух, ст)
	
	НовДокВБух.Дата = ст.Дата;
	НовДокВБух.Организация = Бух.Справочники.Организации.НайтиПоКоду ("00-000001");
	//НовДокВБух.Организация = Бух.Справочники.Организации.НайтиПоРеквизиту("ИНН",СокрЛП(ст.Ссылка.Организация.ИНН));
	НовДокВБух.Контрагент = Бух.Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", СокрЛП(ст.Ссылка.Контрагент.ИНН));
		
	УстановитьДоговорКонтрагента(НовДокВБух, Бух);
	НовДокВБух.Склад = Бух.Справочники.Склады.НайтиПоКоду(ст.Склад.Код);
	НовДокВБух.ВидОперации = Бух.Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
	НовДокВБух.ПодразделениеОрганизации = Бух.Справочники.ПодразделенияОрганизаций.НайтиПоКоду("00-000004",,,НовДокВБух.Организация);
		
	НовДокВБух.ВалютаДокумента = Бух.Справочники.Валюты.НайтиПоКоду("643");
	НовДокВБух.КурсВзаиморасчетов=1;
	НовДокВБух.КратностьВзаиморасчетов=1;
	НовДокВБух.СуммаВключаетНДС = Истина;
	НовДокВБух.СпособЗачетаАвансов = Бух.Перечисления.СпособыЗачетаАвансов.Автоматически;
	НовДокВБух.СчетУчетаРасчетовСКонтрагентом = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");
	НовДокВБух.СчетУчетаРасчетовПоАвансам = Бух.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");

	
	НовДокВБух.Комментарий = ст.Ссылка.Комментарий;
		

	
КонецПроцедуры
