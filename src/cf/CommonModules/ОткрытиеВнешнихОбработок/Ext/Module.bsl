Процедура Logistic() Экспорт 
	Если НЕ РольДоступна (Метаданные.Роли.ПолныеПрава) Тогда
		Если (СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Rail") И (СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"MSK_Orders2") И (СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Bardenkov Mihail") И (НЕ РольДоступна(Метаданные.Роли.Operator)) Тогда
			возврат;
		КонецЕсли;
	КонецЕсли;
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Logistic");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры

Процедура ФормируемРеализации() Экспорт 
	//Изменено/////////////////#4862
	//Автор: Тасмаджиев 08/12/2017//
	//+НАЧАЛО+//////////////////////
	
	//Если (СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Англичанинова Галина") И (СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Release")
	//	И  (СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Morozova"
	//	И  СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Жедрина Наталия Николаевна"
	//	И СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Tezieva Elena"
	//	) Тогда
	//	возврат;
	//КонецЕсли;
	
	Если НЕ РольДоступна("_5LB_Бухгалтер") Тогда
		Сообщить("Нет роли ""_5LB_Бухгалтер"" !!!") ;
		возврат;
	КонецЕсли;
	
	//Изменено/////////////////#4862
	//Автор: Тасмаджиев 08/12/2017//
	//-КОНЕЦ-//////////////////////
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Формируем реализации по заказам");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры  

Процедура ГрафикПеремещений() Экспорт 
	//Если (СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Rail") ИЛИ (СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код)<>"Tovaroved") Тогда
	//		возврат;
	//КонецЕсли;
	
	Если НЕ РольДоступна(Метаданные.Роли.collector) Тогда
		Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Tovaroved") И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Rail") И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Operator2") И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Bardenkov Mihail") Тогда
			возврат;
		КонецЕсли;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("График Перемещений");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры


Процедура Продажи_mod() Экспорт 
		
	Если (НЕ РольДоступна(Метаданные.Роли.collector)) И (НЕ РольДоступна(Метаданные.Роли.РазрешитьВывод)) Тогда//(ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Losev Igor") Тогда//И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"tester") Тогда
		возврат;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Продажи mod");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры


Процедура TSD() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("TSD");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Если ПараметрыСеанса.ТекущийПользователь.Наименование = "TSDCasio" Тогда
			Обработка.ПолучитьФорму("Касива").Открыть();
		Иначе
			Обработка.ПолучитьФорму().Открыть();
		КонецЕсли;
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры

Процедура Табло() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Табло выдачи");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОтчётПоСборкеЗаказов() Экспорт 
		
	Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Operator") И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Bardenkov Mihail") Тогда
		возврат;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по сборке заказов");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры

Процедура ПриходРасходМагазина() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Регистрируем выручку и расходы");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПечатьЗаказовПоВремени() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Печать заказов по времени");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОтчётПоРаспечаткеЗаказов() Экспорт 
		
	Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Rail") И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Bardenkov Mihail") И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Bardenkov Mihail") Тогда
		возврат;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по распечатке заказов");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры

Процедура НетРусификаций() Экспорт 
		
	Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава)
		//++ Кузнецов С.А. - Дополнительное права для использования отчета - 17.05.2016
		И НЕ УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьВнешнийОтчетНоменклатураБезРуссификаций, Ложь)[0].Значение	
		//-- Кузнецов С.А. - 17.05.2016
		Тогда
		Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Lavrov Boris") И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Kolomenskaya")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Revonenko Dmitriy")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Hrypov Aleksey")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Fisenko Natalya") Тогда
			возврат;
		КонецЕсли;
	КонецЕсли;
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Нет русификаций");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры

Процедура ОтчётПоВыручкеМагазинов() Экспорт 
		
	Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
	Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Losev Igor") И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Babenko") Тогда
		возврат;
	КонецЕсли;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт По Выручке Магазинов");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры

// Катков А. 06.07.2016 >>
Процедура ОтчётПоВыручкеМагазинов_СКД() Экспорт 
		
	Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя <> "Losev Igor") Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт (нов.) По Выручке Магазинов (для тестирования)");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры
// Катков А. 06.07.2016 <<   

Процедура СВХиОсновной () Экспорт
	Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		// < 16.08.17 Вялов - задача № 3792 (+ согл.с Д.Грухом) - новая роль "ПродажиКорпоративныеРуководитель" и "ПродажиКорпоративныеМенеджер" (в рамках устранения ереси в конфигурации)
		Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Fokin")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Мартынюк Анастасия")			
		//Если
		//	НЕ РольДоступна(Метаданные.Роли._5LB_ПродажиКорпоративныеРуководитель)
		//	И НЕ РольДоступна(Метаданные.Роли._5LB_ПродажиКорпоративныеМенеджер)
		// 16.08.17 Вялов - задача № 3792 (+ согл.с Д.Грухом) >
			// < 09.08.17 Вялов - ересь программная...
			//И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя <> "Zylenko")
			////31072017 Установка и доступ 1С (Александра Иванова)
			//И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя <> "Иванова Александра") Тогда
			И (НЕ УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.ПраваМенеджерПоЗакупкам, Ложь)[0].Значение)
			И (НЕ УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.ПраваМенеджерКРО, Ложь)[0].Значение)
			Тогда	
		// < 09.08.17 Вялов - ересь программная...
		возврат;
	КонецЕсли;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Основной без СВХ");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтгруженныеЗаказыДиаграмма () Экспорт
	Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Lavrov Boris") 
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Nataliya")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Tezieva Elena")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Bardenkov Mihail") Тогда
		возврат;
	КонецЕсли;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отгруженные Заказы (диаграмма)");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбщийКоммент() Экспорт
	Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Terentiev") Тогда
		возврат;
	КонецЕсли;

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Ввод общего комментария");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЛогРаботыСТоваромВЗаказах () Экспорт
	
	Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Bekareva Alla") И
		(ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Lavrov Boris") Тогда
		возврат;
	КонецЕсли;

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Лог работы с товаром в заказах");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 


КонецПроцедуры

Процедура ЛогСтатусовЗаказов () Экспорт
	Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Bekareva Alla") И 
		(ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Lavrov Boris") Тогда
		возврат;
	КонецЕсли;

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Лог статусов заказов");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
	
КонецПроцедуры

Процедура ЛогДействийСЗаказами () Экспорт
	Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Bekareva Alla") И 
		(ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Lavrov Boris") Тогда
		возврат;
	КонецЕсли;

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Лог действий с заказами");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
	
КонецПроцедуры


Процедура СоркиДействийСертификатов () Экспорт
	Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Kolomenskaya")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Kovtunenko")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Revonenko Dmitriy")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Hrypov Aleksey")
			И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Fisenko Natalya") Тогда
		возврат;
	КонецЕсли;
	КонецЕсли;
		
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Дата Действия Сертификатов");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;

	

КонецПроцедуры


Процедура ОтказыИПереносы() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по отказам и переносам");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

Процедура ЗаказыОтказы() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по отказам");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

Процедура ЗаказыПереносы() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по переносам");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

Процедура УстановкаЦен() Экспорт
	
	
	// < 09.08.17 Вялов - ересь программная...
	//Если (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Zylenko") 
	//	//31072017 Установка и доступ 1С (Александра Иванова)
	//	И (ПользователиИнформационнойБазы.ТекущийПользователь().Имя<>"Иванова Александра") Тогда
	ПраваМенеджерПоЗакупкам = УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.ПраваМенеджерПоЗакупкам, Ложь)[0].Значение;
	ПраваМенеджерКРО = УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.ПраваМенеджерКРО, Ложь)[0].Значение;		
	Если (НЕ ПраваМенеджерПоЗакупкам И НЕ ПраваМенеджерКРО) Тогда						
	// 09.08.17 Вялов - ересь программная >
		возврат;
	КонецЕсли;

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Установка Цен");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры

Процедура СписокЗаказов() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Список заказов");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры

Процедура НеПродаётся() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Не продаётся");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

Процедура ЗППродавцов() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по ЗП продавцов");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

Процедура ПродажиБонусовПродавцы() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Продажи бонусов продавцы");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

//++ Кузнецов С.А. - Отчет бонусов продавцов с учетом смен - 06.06.2016
Процедура ПродажиБонусовПродавцыСмены() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Продажи бонусов продавцы (с учетом смен)");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры
//-- Кузнецов С.А. - 06.06.2016


//++ Вялов В.Ю. - 25.07.16 Обработка по перемещению продавцов - задача в мегаплане #3562
Процедура ПеремещенияПродавцов() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Перемещения продавцов в магазинах");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
		
	КонецЕсли; 
	
КонецПроцедуры
//-- Вялов В.Ю. - 25.07.16 Обработка по перемещению продавцов - задача в мегаплане #3562

//++ Вялов В.Ю. - Отчет по ЗП продавцов (новый) - 12.08.2016
Процедура ОтчетЗППродавцовНовый() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по ЗП продавцов (новый)");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры
//-- Вялов В.Ю. - Отчет по ЗП продавцов (новый) - 12.08.2016

//++ Вялов В.Ю. - Отчет по котролю работы продавцов - 15.09.2016
Процедура ОтчетКонтрольРаботыПродавцов() Экспорт
	
	СпрОтч = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Контроль работы продавцов");
	Если СпрОтч <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = СпрОтч.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);		
		Отч = ВнешниеОтчеты.Создать(ИмяФайла);
		Отч.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры
//-- Вялов В.Ю. - Отчет по котролю работы продавцов - 15.09.2016

// < 10.11.16 Вялов - Мегаплан № 3934
Процедура ПечатьЦенниковМагазин () Экспорт
	
	
	ЗапросПарам = Новый Запрос;
	ЗапросПарам.Текст="
		|ВЫБРАТЬ
		|	ЗначениеНастроек.Значение, 
		|	ЗначениеНастроек.Пользователь,
		|	ЗначениеНастроек.Настройка
		|ИЗ
		|	РегистрСведений.НастройкиПользователей КАК ЗначениеНастроек
		|ГДЕ
		|   ЗначениеНастроек.Пользователь = &Пользователь
		|И  ЗначениеНастроек.Настройка = &ПарамСклад";
	ЗапросПарам.УстановитьПараметр("Пользователь", Справочники.Пользователи.НайтиПоКоду(ПользователиИнформационнойБазы.ТекущийПользователь().Имя).Ссылка);
	ЗапросПарам.УстановитьПараметр("ПарамСклад", ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойСклад);		
	Выборка = ЗапросПарам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		//ТипЦен = Выборка.Значение.Ссылка.ТипЦенРозничнойТорговли;
		СкладВыбран = Выборка.Значение;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(СкладВыбран) Тогда
		Предупреждение("Не выбран склад!");
	Иначе                                    	// если есть склад
		
		//ОбработкаПечатьЦенников = Обработки.ПечатьЦенников.Создать();
		//ОбработкаПечатьЦенников.Склад = СкладВыбран;
		//ОбработкаПечатьЦенников.ТипЦен = СкладВыбран.ТипЦенРозничнойТорговли;	
		//	
		//Отбор = Новый Структура("Объект");
		//Отбор.Объект = СкладВыбран; 
		//ВыбРег = РегистрыСведений.ЗначенияСвойствОбъектов.Выбрать(Отбор);
		//Пока ВыбРег.Следующий() Цикл
		//	Если СокрЛП(ВыбРег.Свойство.Наименование) = СокрЛП(СкладВыбран.Наименование)	Тогда
		//		ОбработкаПечатьЦенников.Организация = ВыбРег.Значение.Ссылка;
		//	КонецЕсли;
		//КонецЦикла;   			
		//	
		//СтруктураПараметров = Новый Структура;
		//СтруктураПараметров.Вставить("ЗаполнитьДляМагазина", Истина);       				
		//СтруктураПараметров.Вставить("ЗаполнитьЦены", Истина);
		//	
		//ФормаПечатьЦенников = ОбработкаПечатьЦенников.ПолучитьФорму("ФормаМагазин");
		//ФормаПечатьЦенников.Параметр = СтруктураПараметров;
		//ФормаПечатьЦенников.ЭлементыФормы.ПолеВвода1.Доступность = Истина;
		////ФормаПечатьЦенников.ЭлементыФормы.ПолеВвода1.Значение = Число (Ссылка.Номер);
		//ФормаПечатьЦенников.Открыть();
		
		
		ОбработкаПечатьЦенников = Обработки.ПечатьЦенников.Создать();
		ОбработкаПечатьЦенников.Склад = СкладВыбран;
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ЗаполнитьДляМагазина", Истина);       									
		ФормаПечатьЦенников = ОбработкаПечатьЦенников.ПолучитьФорму("ФормаМагазин");
		ФормаПечатьЦенников.Параметр = СтруктураПараметров;
		ФормаПечатьЦенников.Открыть();

		
	КонецЕсли;              	// если есть склад

		
		
КонецПроцедуры 
// 10.11.16 Вялов - Мегаплан № 3934 >

// < 16.11.16 Вялов - Мегаплан № 3934
Процедура ПечатьОтчетЦеныНоменклатуры() Экспорт
	
	//
	//ЗапросПарам = Новый Запрос;
	//ЗапросПарам.Текст="
	//	|ВЫБРАТЬ
	//	|	ЗначениеНастроек.Значение, 
	//	|	ЗначениеНастроек.Пользователь,
	//	|	ЗначениеНастроек.Настройка
	//	|ИЗ
	//	|	РегистрСведений.НастройкиПользователей КАК ЗначениеНастроек
	//	|ГДЕ
	//	|   ЗначениеНастроек.Пользователь = &Пользователь
	//	|И  ЗначениеНастроек.Настройка = &ПарамСклад";
	//ЗапросПарам.УстановитьПараметр("Пользователь", Справочники.Пользователи.НайтиПоКоду(ПользователиИнформационнойБазы.ТекущийПользователь().Имя).Ссылка);
	//ЗапросПарам.УстановитьПараметр("ПарамСклад", ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойСклад);		
	//Выборка = ЗапросПарам.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	//ТипЦен = Выборка.Значение.Ссылка.ТипЦенРозничнойТорговли;
	//	СкладВыбран = Выборка.Значение;
	//КонецЦикла;
	//
	//Если НЕ ЗначениеЗаполнено(СкладВыбран) Тогда
	//	Предупреждение("Не выбран склад!");
	//Иначе                                    	// если есть склад
	//	
	
	СпрОтч = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчет цены номенклатуры");
	Если СпрОтч <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = СпрОтч.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);		
		Отч = ВнешниеОтчеты.Создать(ИмяФайла);
		Отч.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
	//	ОбработкаПечатьЦенников = Обработки.ПечатьЦенников.Создать();
	//	ОбработкаПечатьЦенников.Склад = СкладВыбран;
	//	ОбработкаПечатьЦенников.ТипЦен = СкладВыбран.ТипЦенРозничнойТорговли;	
	//		
	//	Отбор = Новый Структура("Объект");
	//	Отбор.Объект = СкладВыбран; 
	//	ВыбРег = РегистрыСведений.ЗначенияСвойствОбъектов.Выбрать(Отбор);
	//	Пока ВыбРег.Следующий() Цикл
	//		Если СокрЛП(ВыбРег.Свойство.Наименование) = СокрЛП(СкладВыбран.Наименование)	Тогда
	//			ОбработкаПечатьЦенников.Организация = ВыбРег.Значение.Ссылка;
	//		КонецЕсли;
	//	КонецЦикла;   			
	//		
	//	СтруктураПараметров = Новый Структура;
	//	СтруктураПараметров.Вставить("ЗаполнитьДляМагазина", Истина);       				
	//	СтруктураПараметров.Вставить("ЗаполнитьЦены", Истина);
	//		
	//	ФормаПечатьЦенников = ОбработкаПечатьЦенников.ПолучитьФорму("Форма");
	//	ФормаПечатьЦенников.Параметр = СтруктураПараметров;
	//	ФормаПечатьЦенников.ЭлементыФормы.ПолеВвода1.Доступность = Истина;
	//	//ФормаПечатьЦенников.ЭлементыФормы.ПолеВвода1.Значение = Число (Ссылка.Номер);
	//	ФормаПечатьЦенников.Открыть();
	//	
	//КонецЕсли;              	// если есть склад

	//	
		
КонецПроцедуры 
// 16.11.16 Вялов - Мегаплан № 3934 >

// < 23.11.16 Вялов 
Процедура ПечатьОтчетПродажиУпрощенный() Экспорт	
	
	СпрОтч = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчет по продажам (упрощенный вариант)");
	Если СпрОтч <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = СпрОтч.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);		
		Отч = ВнешниеОтчеты.Создать(ИмяФайла);
		Отч.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;    
	
КонецПроцедуры 
// 23.11.16 Вялов 


Процедура ПечатьЦенниковУценка () Экспорт

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Печать ценников уценка");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

Процедура СреднийЧек () Экспорт

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Средний чек");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

Процедура ПродажиБонусовИМРук() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Продажи бонусов ИМ Рук манагер");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

Процедура ПродажиБонусовИММенеджер() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Продажи бонусов менеджер ИМ");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

Процедура ПродажиБонусовРукРозницы() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Продажи бонусов Рук.розницы");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

Процедура ПровестиНепроведённые () Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Провести продажи с чеком");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры 

Процедура ПропущенныеПоступления() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Пропущенные поступления");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

Процедура ДетализацияПоЗаказамМенеджера() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Детализация по заказам менеджера");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

Процедура РучнаяВыгрузкаПродажВБух30 () Экспорт

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Ручная выгрузка продаж в БУХ 3.0");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

Процедура ДетализацияБонусов() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Детализация Бонусов");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

Процедура Улучшайзер () Экспорт

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Улучшайзер");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

//12.12.2016 мегаплан 1003970
Процедура ОтчётПоНедостачамВЗаказах() Экспорт 
				
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт Заказы - недостача");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры
//12.12.2016 мегаплан 1003970


Процедура ПродажиПоСкидкам() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Продажи по скидкам");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры


//++ Кузнецов С.А. - Открытие файла внешней обработки "Обмен с терминалом" - 15.02.2016
Процедура ОбменСТерминалом() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Обмен с терминалом");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры	
//-- Кузнецов С.А. - 15.02.2016

//++ Бажибин М.В. - 
// 
// Временное решение для сброса пользователя Warehouse
Процедура ОткрючитьПользователей() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Завершение работы пользователей");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() И
		УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьОтключатьПользователей, Ложь)[0].Значение Тогда
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
	
КонецПроцедуры
//-- Бажибин М.В. - 19.02.2016	

//++ Бажибин М.В. - 
// 
// Временное решение для сброса пользователя Warehouse
Процедура КоличествоИСуммаПроданногоМенеджером2Месяца() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Количество и сумма проданного менеджером 2 месяца");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

//-- Бажибин М.В. - 24.05.2016
//++ Бажибин М.В. - 
// 
// 
Процедура ВыгрузкаПоступленийКомитентов() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Выгрузка поставщику");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры

//-- Бажибин М.В. - 24.05.2016

// Катков А. 18.10.2016 >>
Процедура Advanced_ВозвратПоставщикуДействие() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Выгрузка одного поступления в бухгалтерию");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	Иначе
		Сообщить("Не удалось найти внешн. обработку ""Выгрузка одного поступления в бухгалтерию"".");
	КонецЕсли; 
	
КонецПроцедуры
// Катков А. 18.10.2016 <<   

// Катков А. 16.09.2016 >>
&НаКлиенте
Процедура ОткрытьЛогистикс_Перемещения() Экспорт

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Logistics (PEREMESCHENIJA)");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
		
	КонецЕсли; 

КонецПроцедуры 
// Катков А. 16.09.2016 <<   

//17.05.2017 Отчёты для ИМ
Процедура ОтчетПоРаботеМенеджеровИМ() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по работе менеджеров ИМ");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

Процедура ВсеЗаказыИМ() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Все заказы ИМ");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

Процедура ОтчётПоПричинамОтказаИМ() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Отчёт по причинам отказа ИМ");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

	
КонецПроцедуры

//17.05.2017

//НМА 27.09.17 Открытие файла внешней обработки "Загрузка русификаций номенклатуры" >>
Процедура ЗагрузкаРусификацийНоменклатуры() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Загрузка русификаций номенклатуры");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;
КонецПроцедуры
//НМА 27.09.17 Открытие файла внешней обработки "Загрузка русификаций номенклатуры" <<

//НМА 27.09.17 Открытие файла внешней обработки "Печать русификаций номенклатуры" >>
Процедура ПечатьРусификацийНоменклатуры() Экспорт
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Печать русификаций номенклатуры");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 
КонецПроцедуры	
//НМА 27.09.17 Открытие файла внешней обработки "Печать русификации номенклатуры" <<

//НМА 05.10.17 Открытие файла внешней обработки "Печать этикетки EAN-128" >>
Процедура ПечатьЭтикеткиEAN128() Экспорт
	Если УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьВнешнийОтчетПечатьЭтикеткиEAN128, Ложь)[0].Значение Тогда
		Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Печать этикетки EAN-128");
		Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
			ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
			ИмяФайла = ПолучитьИмяВременногоФайла();
			ДвоичныеДанные.Записать(ИмяФайла);
			Обработка = ВнешниеОбработки.Создать(ИмяФайла);
			Обработка.ПолучитьФорму().Открыть();
			УдалитьФайлы(ИмяФайла);
		КонецЕсли;
	Иначе
		Сообщить("Недостаточно дополнительных прав пользователей!");	
	КонецЕсли;
КонецПроцедуры	
//НМА 05.10.17 Открытие файла внешней обработки "Печать этикетки EAN-128" <<

//31102017 Доступ к отчёту "Номенклатура.." и обработке "Распределение товаров.."
Процедура ОтчётНоменклатураПоКатегориям() Экспорт
	
	Если УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьВнешнийОтчетНоменклатураПоКатегориям, Ложь)[0].Значение Тогда
		Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Номенклатура по категориям (цена продажи и себестоимость)");
		Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
			
			ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
			ИмяФайла = ПолучитьИмяВременногоФайла();
			ДвоичныеДанные.Записать(ИмяФайла);
			
			Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
			Обработка.ПолучитьФорму().Открыть();
			УдалитьФайлы(ИмяФайла);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаРаспределениеТовара() Экспорт
	
	Если УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьВнешнююОбработкуРаспределениеТовараИзExcelВПеремещение, Ложь)[0].Значение Тогда
		Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Распределение товара из Excel в перемещение");
		Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
			
			ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
			ИмяФайла = ПолучитьИмяВременногоФайла();
			ДвоичныеДанные.Записать(ИмяФайла);
			
			Обработка = ВнешниеОбработки.Создать(ИмяФайла);
			Обработка.ПолучитьФорму().Открыть();
			УдалитьФайлы(ИмяФайла);
		КонецЕсли; 
	КонецЕсли;
	
	
КонецПроцедуры
//31102017

//{+Добавления} Автор: Тасмаджиев 16/07/2018// ->>
&НаКлиенте
Процедура ВыдачаПодарковSNPRO_2018_300() Экспорт

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("ВыдачаПодарковSNPRO_2018_Первые_300_покупателей");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
		
	КонецЕсли; 

КонецПроцедуры  //{-Добавления} Автор: Тасмаджиев 16/07/2018// <<-

//#***+Добавления*** Тасмаджиев 06/11/2018// ->>
Процедура УстановкаЦенНовая() Экспорт
	
	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Установка цен (НОВАЯ)");
	Если Об<>Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		
		Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();
		УдалитьФайлы(ИмяФайла);
	КонецЕсли; 

КонецПроцедуры //#***-Добавления*** Тасмаджиев 06/11/2018// <<-

// Женя 06.09.2018
// Добавлено для Кирюшкиной Марии, заявка 1215
// Открытие внешнего отчета с данными по заказам покупателей
// ((
&НаКлиенте
Процедура Выборка_данных_по_заказам_покупателей() Экспорт

	Об = Справочники.ВнешниеОбработки.НайтиПоНаименованию("Выборка_данных_по_заказам_покупателей");
	Если Об <> Справочники.ВнешниеОбработки.ПустаяСсылка() Тогда		
		
		ДвоичныеДанные = Об.ХранилищеВнешнейОбработки.Получить();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Обработка.ПолучитьФорму().Открыть();    // Женя 14.09.2018
		УдалитьФайлы(ИмяФайла);
		
	КонецЕсли; 

КонецПроцедуры  
// )) 06.09.2018 Женя

 