//Блок ПВЗ

Процедура УстановитьСтатусЗаказа(Заказ, СтатусЗаказа, ТекстСообщения="",ФиоПродавца="") Экспорт
	
	НаборЗаписей = РегистрыСведений.СтатусыЗаказов.СоздатьНаборЗаписей(); 
    НаборЗаписей.Отбор.Заказ.Значение = Заказ;
    НаборЗаписей.Отбор.Заказ.Использование = Истина;
    НаборЗаписей.Отбор.СтатусЗаказа.Значение = СтатусЗаказа;
    НаборЗаписей.Отбор.СтатусЗаказа.Использование = Истина;
    
    
    НаборЗаписей.Прочитать(); 
    
    Если НаборЗаписей.Количество() > 0 Тогда
       ТекстСообщения = "Данные статус уже установлен ранее"; 
    Иначе
        Запись = НаборЗаписей.Добавить(); 
        Запись.Заказ 		= Заказ; 
        Запись.СтатусЗаказа = СтатусЗаказа; 
        Запись.Дата 		= ТекущаяДата();
		Запись.ФИОПродавца = ФиоПродавца;		
    КонецЕсли;
    
    НаборЗаписей.Записать(); 
	
	
КонецПроцедуры

Процедура ИзменитьРеквизитСтатусЗаказа(Заказ,ТекстСтатуса) Экспорт 
	
	ПолучимСтатус = Справочники.Пользователи.НайтиПоНаименованию(ТекстСтатуса);
	
	Если ЗначениеЗаполнено(ПолучимСтатус) Тогда
		
		ПолучимОбъект = Заказ.ПолучитьОбъект();
		ПолучимОбъект.Статус = ПолучимСтатус;
		ПолучимОбъект.Записать();
		
	КонецЕсли;
	
	
КонецПроцедуры


Процедура ИзменитьРеквизитСтатусСборкиЗаказов(Заказ,ТекСтатус) Экспорт 
	
		
	//Если ЗначениеЗаполнено(ТекСтатус) Тогда
		
		ПолучимОбъект = Заказ.ПолучитьОбъект();
		ПолучимОбъект.СтатусыСборкиЗаказа = ТекСтатус;
		ПолучимОбъект.Записать();
		
	//КонецЕсли;
	
	
КонецПроцедуры










//ОБЩИЕ МЕХАНИЗМЫ

Функция ЯвляетсяЧислом(Значение) Экспорт
	Если ТипЗнч(Значение) = Тип("Число") Тогда
		Возврат Истина
	Иначе
		Если ТипЗнч(Значение) = Тип("Строка") Тогда
			Если Значение = "" Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;

		Попытка
			Р = Число(Значение);
		Исключение
			Возврат Ложь;
		КонецПопытки;
			Возврат Истина;
	КонецЕсли;
КонецФункции

Функция ДобавитьНули(Значение, НужнаяДлинаЗначения) Экспорт 
       
    Значение = СтрЗаменить(Формат(Значение, "ЧГ="), " ", "");
    НадоНулей = НужнаяДлинаЗначения - СтрДлина(Значение);
    ВедущиеНули = Формат(0,"ЧЦ="+НадоНулей+";ЧН=; ЧВН=; ЧГ=0");
    Возврат ВедущиеНули + Значение;
   
КонецФункции


Процедура ДобавитьСМСКОтправкеВРегистр(ДокументЗаказ,ТипСМС,КодПодтверждения=Ложь) Экспорт 
	    НомерЗаказа = СокрЛП(ДокументЗаказ.НомерДокаСайт);
		
		Если КодПодтверждения Тогда
			КодПодтверждения = ПолучитьИлиЗаписатьКодПодтверждения(ДокументЗаказ);			
		КонецЕсли;

	Если ТипСМС="ПринятВОбработку" Тогда
		//{+НАЧАЛО+Редактирования} Автор: Тасмаджиев 26/02/2018//=============================================================================================
		ТекстСМС =  "Заказ "+НомерЗаказа+" принят в работу.";
		//{-КОНЕЦ-Редактирования} Автор: Тасмаджиев 26/02/2018//==============================================================================================	
	ИначеЕсли   ТипСМС="ВПВЗ" Тогда
		  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			АдресПункта = "";
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗначенияСвойствОбъектов.Значение
				|ИЗ
				|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				|ГДЕ
				|	ЗначенияСвойствОбъектов.Объект = &Объект
				|	И ЗначенияСвойствОбъектов.Свойство.Наименование = ""Адрес""";
			
			Запрос.УстановитьПараметр("Объект", ДокументЗаказ.ПунктСамовывоза);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Если Выборка.Следующий() Тогда
				
				АдресПункта =  СокрЛП(Выборка.Значение);
				
			КонецЕсли;;
			
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


		                                                     
		ТекстСМС = "Заказ №"+НомерЗаказа+" доставлен в пункт самовывоза "+АдресПункта+"."+" Код подтверждения-"+КодПодтверждения;
	ИначеЕсли ТипСМС="КодПодтверждения" Тогда
 	       КодПодтверждения = ПолучитьИлиЗаписатьКодПодтверждения(ДокументЗаказ);	
		   ТекстСМС = "Заказ №"+НомерЗаказа+" Код подтверждения-"+КодПодтверждения;
	ИначеЕсли ТипСМС="ЗаказВыдан" Тогда 
		     ТекстСМС = "Заказ №"+НомерЗаказа+" выдан в пункте самовывоза";
	ИначеЕсли ТипСМС="КлиентОтказался" Тогда 
		     ТекстСМС = "Клиент отказался от заказа №"+НомерЗаказа;


	КонецЕсли;                                                                            
	   //ОТПРАВИМ СМС для любых типов доставки
		РегЗапись = РегистрыСведений.СМСДляОтправки.СоздатьМенеджерЗаписи();
		РегЗапись.Объект = ДокументЗаказ;
		РегЗапись.ИмяПолучателя= ДокументЗаказ.ФИО;
		РегЗапись.ТелефонПолучателя= ДокументЗаказ.Телефон;
		РегЗапись.Текст = ТекстСМС;

	    Попытка
			РегЗапись.Записать();
		Исключение
			
		КонецПопытки;
	
	
	
	КонецПроцедуры
	
Процедура ДобавитьЕМаилДляОтправки(ТекстСообщения) Экспорт 
	   ТекАдрес =  "shop@5lb.ru";  // //"shop@5lb.ru"

	   ТемаПисьма = ТекстСообщения;
	   ТелоПисьма = ТекстСообщения; 
	  	
	
		Запись = РегистрыСведений.ОчередьПисем.СоздатьМенеджерЗаписи();
		Запись.Получатель = ТекАдрес;
		Запись.Период = ТекущаяДата();
		Запись.Тема = ТемаПисьма;
		Запись.ТелоПисьма = ТелоПисьма;
		Запись.Записать();

	
	
	
КонецПроцедуры
	
	
	
 Функция  ПолучитьИлиЗаписатьКодПодтверждения(Заказ) Экспорт 
	 
	 
	НаборЗаписей = РегистрыСведений.КодыПодтвержденияЗаказовВПВЗ.СоздатьНаборЗаписей(); 
    НаборЗаписей.Отбор.Заказ.Значение = Заказ;
    НаборЗаписей.Отбор.Заказ.Использование = Истина;
       
    
    НаборЗаписей.Прочитать(); 
    
	Если НаборЗаписей.Количество() > 0 Тогда
		
		ВернутьКодПодтверждения = НаборЗаписей[0].КодПодтверждения;
		
		
	Иначе
        Запись = НаборЗаписей.Добавить(); 
        Запись.Заказ 		= Заказ; 
		ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяУниверсальнаяДатаВМиллисекундах());
		СлучайноеЧисло = ГСЧ.СлучайноеЧисло(100000, 999999);
		СлучайноеЧисло = СтрЗаменить(Строка(СлучайноеЧисло),Символы.НПП,"");
		Запись.КодПодтверждения = СлучайноеЧисло;
		ВернутьКодПодтверждения = СлучайноеЧисло;
	КонецЕсли;
    
    НаборЗаписей.Записать(); 

	 
	Возврат ВернутьКодПодтверждения; 
	 
КонецФункции




Функция ПолучитьСписокНеОтсканированныхЗаказов(ТЗСМестами)  Экспорт 
	 СписокНеОтсканированныхЗаказов = Новый СписокЗначений;
	 МассивОтсканированныхЗаказов = ТЗСМестами.ВыгрузитьКолонку("Заказ");
 
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихКодыЗаказыПВЗ.Владелец КАК Владелец,
		|	ШтрихКодыЗаказыПВЗ.Штрихкод,
		|	ШтрихКодыЗаказыПВЗ.НомерМеста,
		|	ШтрихКодыЗаказыПВЗ.КоличествоМест
		|ИЗ
		|	РегистрСведений.ШтрихКодыЗаказыПВЗ КАК ШтрихКодыЗаказыПВЗ
		|ГДЕ
		|	ШтрихКодыЗаказыПВЗ.Владелец В(&СписокОтсканированныхЗаказов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Владелец
		|ИТОГИ ПО
		|	Владелец";
	
	Запрос.УстановитьПараметр("СписокОтсканированныхЗаказов", МассивОтсканированныхЗаказов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаВладелец = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СтруктураПоиска = Новый Структура("Заказ, ШтрихКод");
	
	
	Пока ВыборкаВладелец.Следующий() Цикл
		НеВсеОтсканированы = Ложь;
		
		ВыборкаДетальныеЗаписи = ВыборкаВладелец.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтруктураПоиска.Заказ = ВыборкаДетальныеЗаписи.Владелец;
			СтруктураПоиска.ШтрихКод = ВыборкаДетальныеЗаписи.Штрихкод;
			НайдемВТЗОтсканированных = ТЗСМестами.НайтиСтроки(СтруктураПоиска);
			Если НайдемВТЗОтсканированных.Количество() = 0 Тогда
				НеВсеОтсканированы = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если НеВсеОтсканированы Тогда
		   СписокНеОтсканированныхЗаказов.Добавить(ВыборкаВладелец.Владелец);
		КонецЕсли;

	КонецЦикла;
	
	
	Возврат СписокНеОтсканированныхЗаказов;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции



 Процедура УдалитьСтрокуТЧПодбораЗаказов(ТЧЗаказ, ОтсканированныеЗаказы) Экспорт 
	 СтруктураПоиска = Новый Структура("Заказ, Место, ВсегоМест");
	  СтруктураПоиска.Заказ = ТЧЗаказ.Заказ;
	   СтруктураПоиска.Место = ТЧЗаказ.Место;
	    СтруктураПоиска.ВсегоМест = ТЧЗаказ.ВсегоМест;
		
		МассивПоиска = ОтсканированныеЗаказы.НайтиСтроки(СтруктураПоиска);
		
		Если МассивПоиска.Количество() > 0 Тогда
			ОтсканированныеЗаказы.Удалить(МассивПоиска[0].НомерСтроки-1);
			
		КонецЕсли;
 КонецПроцедуры

