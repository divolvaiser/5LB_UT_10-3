//НМА 05.10.17

//	Функция РазрешенКЭкспорту возвращает Истина, если возврат товаров поставщику разрешен к экспорту.
Функция РазрешенКЭкспорту(ВозвратТоваровПоставщику) Экспорт
	
	//Если ВозвратТоваровПоставщику.ПометкаУдаления Тогда
	//	Возврат Ложь;
	//КонецЕсли;

	Если Не ВозвратТоваровПоставщику.Проведен и ВозвратТоваровПоставщикуКакПриход(ВозвратТоваровПоставщику) Тогда //НМА 04.12.17
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ВозвратТоваровПоставщику.Статус = Перечисления.СтатусыВозвратовПоставщикам.Подтвержден Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//Если Не ВозвратТоваровПоставщику.Склад.EmeWmsУчет Тогда
	//	Возврат Ложь;
	//КонецЕсли;
	
	//НМА 30.11.17
	Если НЕ ВозвратТоваровПоставщикуКакПриход(ВозвратТоваровПоставщику) и НЕ ВозвратТоваровПоставщикуКакОтгрузка(ВозвратТоваровПоставщику) Тогда
		Возврат Ложь;
	КонецЕсли;
	//НМА 30.11.17

	Возврат Истина;
	
КонецФункции

//	Процедура ПометитьКЭкспорту помечает возврат товаров поставщику к экспорту.
Процедура ПометитьКЭкспорту(ВозвратТоваровПоставщику) Экспорт

	Если Не РазрешенКЭкспорту(ВозвратТоваровПоставщику) Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВозвратТоваровПоставщику.Установить(ВозвратТоваровПоставщику.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.КЭкспорту = Истина;
		НаборЗаписей.Записать();
		Возврат;
	КонецЦикла;
	
  	НоваяЗапись = РегистрыСведений.EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам.СоздатьМенеджерЗаписи();
	НоваяЗапись.ВозвратТоваровПоставщику = ВозвратТоваровПоставщику.Ссылка;
	НоваяЗапись.КЭкспорту = Истина;
    НоваяЗапись.Записать(); 
		 
КонецПроцедуры

//	Функция ПомеченКЭкспорту возвращает Истина, если возврат товаров поставщику помечен к экспорту.
Функция ПомеченКЭкспорту(ВозвратТоваровПоставщику) Экспорт
	
	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВозвратТоваровПоставщику.Установить(ВозвратТоваровПоставщику.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Возврат Запись.КЭкспорту;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

//	Процедура ПодтвердитьЭкспорт подтверждает экспорт возврата товаров поставщику.
Процедура ПодтвердитьЭкспорт(ВозвратТоваровПоставщику) Экспорт

	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВозвратТоваровПоставщику.Установить(ВозвратТоваровПоставщику.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.КЭкспорту = Ложь;
		Запись.ДатаЭкспорта = ТекущаяДата();
		НаборЗаписей.Записать();
	КонецЦикла;
	
	Если ВозвратТоваровПоставщикуКакПриход(ВозвратТоваровПоставщику) ИЛИ ВозвратТоваровПоставщикуКакОтгрузка(ВозвратТоваровПоставщику) Тогда //НМА 04.12.17
		//НМА 11.10.17
		Если ВозвратТоваровПоставщику.Статус = Перечисления.СтатусыВозвратовПоставщикам.Подтвержден Тогда
			ВозвратТоваровПоставщикуОбъект = ВозвратТоваровПоставщику.ПолучитьОбъект();
			ВозвратТоваровПоставщикуОбъект.Статус = Перечисления.СтатусыВозвратовПоставщикам.ОтправленНаСклад;
			ВозвратТоваровПоставщикуОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
		//НМА 11.10.17
	КонецЕсли; //НМА 04.12.17
	
КонецПроцедуры

//	Процедура ПометитьКЭкспорту помечает возврат товаров поставщику на событии при записи возврат товаров поставщику.
Процедура ПометитьКЭкспортуПриЗаписиВозвратаТоваровПоставщику(Источник, Отказ) Экспорт

	ПометитьКЭкспорту(Источник);
		 
КонецПроцедуры

//	Процедура ЭкспортироватьВозвратыТоваровПоставщикамКакПриходы экспортирует возвраты товаров поставщику, помеченные к экспорту.
Процедура ЭкспортироватьВозвратыТоваровПоставщикамКакПриходы(ERPData) Экспорт
	
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам.ВозвратТоваровПоставщику.Ссылка КАК Ссылка
		|ИЗ
		|	РегистрСведений.EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам КАК EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам
		|ГДЕ
		|	EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам.КЭкспорту";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Счетчик = 0;
	
	Пока Выборка.Следующий() Цикл
		
		//	Защита от плохих данных
		Если Выборка.Ссылка = Null Тогда
			Продолжить;
		КонецЕсли;
			
		//	ВАЖНО! Транзакция источника сообщения должна быть внешней
		НачатьТранзакцию();
		Попытка    		
				
			EmeWmsERPEngine.BeginExport(ERPData, "erp", "wms", "asn");
			Попытка
				
				Если РазрешенКЭкспорту(Выборка.Ссылка) Тогда
					////	Вначале подтверждаем экспорт,
					//ПодтвердитьЭкспорт(Выборка.Ссылка);
					////	а только потом экспортируем, чтобы не потерять флажок КЭКспорту при параллельном изменении данных.
					ЭкспортироватьВозвратТоваровПоставщикуКакПриход(ERPData, Выборка.Ссылка);
					ПодтвердитьЭкспорт(Выборка.Ссылка); //НМА 04.12.17
					Счетчик = Счетчик + 1;
				КонецЕсли;
					
				EmeWmsERPEngine.CommitExport(ERPData);
				
			Исключение
				Сообщить(ОписаниеОшибки());
				EmeWmsERPEngine.RollbackExport(ERPData);
				ВызватьИсключение(ОписаниеОшибки());
			КонецПопытки;
				
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Ошибка = ОписаниеОшибки();
			Сообщить(Ошибка);
			ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Экспорт сообщения ASN-возврат: " + Ошибка);
			ТекстСообщения = "ИБ: " + СтрокаСоединенияИнформационнойБазы() + Символы.ПС + "No: " + Выборка.Ссылка + Символы.ПС + Ошибка;
			EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте("Критическая ошибка экспорта сообщения ASN-возврат", ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если Счетчик <> 0 Тогда
		Сообщить("Проэкспортировали сообщения ASN-возврат (" + Счетчик + "шт)");
	КонецЕсли
	
КонецПроцедуры

//	Процедура ЭкспортироватьВозвратТоваровПоставщикуКакПриход экспортирует один возврат товаров поставщику, как приход со склада магазина.
Процедура ЭкспортироватьВозвратТоваровПоставщикуКакПриход(ERPData, ВозвратТоваровПоставщику)
	
	//	Заголовок возврата
	EmeWmsERPEngine.AppendHeaderLine(ERPData);
	ERPData.header.id             	= ВозвратТоваровПоставщику.УникальныйИдентификатор();
	ERPData.header.asn_reg_no	  	= ВозвратТоваровПоставщику.Номер + " (возврат)";
	//ERPData.header.whs_to_code 	  	= EmeWmsУтилиты.ПолучитьКодСклада(ВозвратТоваровПоставщику.Склад);
	ERPData.header.whs_to_code 	  	= EmeWmsУтилиты.ПолучитьКодСклада(Справочники.Склады.НайтиПоНаименованию("Основной",Истина));
	ERPData.header.vendor_to_code 	= "7715948131";
	////ERPData.header.supplier_id  	= ВозвратТоваровПоставщику.Контрагент.УникальныйИдентификатор();
	//ERPData.header.supplier_id  	= EmeWmsУтилиты.ПолучитьКод(ВозвратТоваровПоставщику.Контрагент);
	////ERPData.header.supplier_code  	= СокрЛП(ВозвратТоваровПоставщику.Контрагент.Код);
	//ERPData.header.supplier_code  	= EmeWmsУтилиты.ПолучитьКод(ВозвратТоваровПоставщику.Контрагент);
	//ERPData.header.supplier_name  	= ВозвратТоваровПоставщику.Контрагент.Наименование;
	Контрагент_supplier = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", ВозвратТоваровПоставщику.Организация.ИНН); //05.10.17
	Если Контрагент_supplier = Справочники.Контрагенты.ПустаяСсылка() Тогда //05.10.17
		Контрагент_supplier = Справочники.Контрагенты.НайтиПоНаименованию(ВозвратТоваровПоставщику.Организация.Наименование,Истина);
	КонецЕсли; //05.10.17
	Если Контрагент_supplier <> Справочники.Контрагенты.ПустаяСсылка() Тогда	
		ERPData.header.supplier_id  	= EmeWmsУтилиты.ПолучитьКод(Контрагент_supplier);
		ERPData.header.supplier_code  	= EmeWmsУтилиты.ПолучитьКод(Контрагент_supplier);
		ERPData.header.supplier_name  	= Контрагент_supplier.Наименование;
	Иначе
		Сообщить("Контрагент "+ВозвратТоваровПоставщику.Организация.Наименование+" не найден!");
		Возврат;
	КонецЕсли;
	ERPData.header.comment        	= Лев(ВозвратТоваровПоставщику.Комментарий, 128);
																				  
	//	Строки возврата
	EmeWmsERPEngine.SelectChild(ERPData, "lines");
	УИДСтроки = 0;
	Для Каждого СтрокаТовара Из ВозвратТоваровПоставщику.Товары Цикл
		УИДСтроки = УИДСтроки + 1;
		EmeWmsERPEngine.AppendChildLine(ERPData);
		ERPData.lines.id			= УИДСтроки;
		ERPData.lines.asn_line_no	= СтрокаТовара.НомерСтроки;
		// Катков А. 10.10.2016 >>
		//ERPData.lines.goods_id		= СтрокаТовара.Номенклатура.УникальныйИдентификатор();
		ERPData.lines.goods_id		= EmeWmsУтилиты.ПолучитьКод(СтрокаТовара.Номенклатура);
		//ERPData.lines.goods_code	= СокрЛП(СтрокаТовара.Номенклатура.Код);
		ERPData.lines.goods_code	= EmeWmsУтилиты.ПолучитьКодСпрНоменклатура_НеДляСинхронизации(СтрокаТовара.Номенклатура);
		ERPData.lines.lot_no		= "-";
		//ERPData.lines.quantity		= СтрокаТовара.Количество * СтрокаТовара.Коэффициент;
		//ERPData.lines.mu_code		= СокрЛП(СтрокаТовара.Номенклатура.БазоваяЕдиницаИзмерения.Код);
		
		// выберем как базовую Единицу измерения с коэффициентом 1
		ЕдИзм_К1 = EmeWmsУтилиты.ПолучитьБазовуюЕдиницуИзмеренияК1(СтрокаТовара.Номенклатура);
		
		Если СтрокаТовара.ЕдиницаИзмерения = ЕдИзм_К1 Тогда // берем кол-во в базовых единицах
			ERPData.lines.quantity		= СтрокаТовара.Количество;
			ЕдиницаИзмерения 			= ЕдИзм_К1;
		Иначе
			Если ЕдИзм_К1 <> Неопределено Тогда
				ERPData.lines.quantity	= СтрокаТовара.Количество * СтрокаТовара.Коэффициент; // берем кол-во в базовых единицах
				ЕдиницаИзмерения 		= ЕдИзм_К1;
			Иначе
				ERPData.lines.quantity	= СтрокаТовара.Количество;  // не нашли базовую единицу берем кол-во в текущих единицах (ОШИБКА!)
				ЕдиницаИзмерения 		= СтрокаТовара.ЕдиницаИзмерения;
				ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Экспорт док-та: """ + ВозвратТоваровПоставщику + """, не найдена Базовая единица измерения у """ + СтрокаТовара.Номенклатура + """");
			КонецЕсли; 
		КонецЕсли; 
		Если ЗначениеЗаполнено(ЕдиницаИзмерения.ЕдиницаПоКлассификатору.емеКодСинхронизации) Тогда
			ERPData.lines.mu_code		= ЕдиницаИзмерения.ЕдиницаПоКлассификатору.емеКодСинхронизации;
		Иначе
			ERPData.lines.mu_code		= ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Наименование;
		КонецЕсли;
		// Катков А. 10.10.2016 <<  
	КонецЦикла;		
			
КонецПроцедуры

//	Процедура ЭкспортироватьВозвратыТоваровПоставщикамКакОтгрузки экспортирует возвраты товаров поставщику, помеченные к экспорту.
Процедура ЭкспортироватьВозвратыТоваровПоставщикамКакОтгрузки(ERPData) Экспорт
	
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам.ВозвратТоваровПоставщику.Ссылка КАК Ссылка
		|ИЗ
		|	РегистрСведений.EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам КАК EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам
		|ГДЕ
		|	EmeWmsПометкиКЭкспортуВозвратовТоваровПоставщикам.КЭкспорту";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Счетчик = 0;
	
	Пока Выборка.Следующий() Цикл
		
		//	Защита от плохих данных
		Если Выборка.Ссылка = Null Тогда
			Продолжить;
		КонецЕсли;
			
		//	ВАЖНО! Транзакция источника сообщения должна быть внешней
		НачатьТранзакцию();
		Попытка    		
				
			EmeWmsERPEngine.BeginExport(ERPData, "erp", "wms", "orders");
			Попытка
				
				Если РазрешенКЭкспорту(Выборка.Ссылка) Тогда
					Если ВозвратТоваровПоставщикуКакОтгрузка(Выборка.Ссылка) Тогда
						////	Вначале подтверждаем экспорт,
						//ПодтвердитьЭкспорт(Выборка.Ссылка);
						////	а только потом экспортируем, чтобы не потерять флажок КЭКспорту при параллельном изменении данных.
						ЭкспортироватьВозвратТоваровПоставщикуКакОтгрузку(ERPData, Выборка.Ссылка);
						ПодтвердитьЭкспорт(Выборка.Ссылка); //НМА 06.12.17
						Счетчик = Счетчик + 1;
					КонецЕсли
				КонецЕсли;
					
				EmeWmsERPEngine.CommitExport(ERPData);
				
			Исключение
				Сообщить(ОписаниеОшибки());
				EmeWmsERPEngine.RollbackExport(ERPData);
				ВызватьИсключение(ОписаниеОшибки());
			КонецПопытки;
				
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Ошибка = ОписаниеОшибки();
			Сообщить(Ошибка);
			ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Экспорт сообщения ORDERS-возврат: " + Ошибка);
			ТекстСообщения = "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + "No: " + Выборка.Ссылка + Символы.ПС + Ошибка;
			//EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте("Критическая ошибка экспорта сообщения ORDERS-возврат", ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если Счетчик <> 0 Тогда
		Сообщить("Проэкспортировали сообщения ORDERS-возврат (" + Счетчик + "шт)");
	КонецЕсли
	
КонецПроцедуры

//	Процедура ЭкспортироватьВозвратТоваровПоставщикуКакОтгрузку экспортирует один возврат товаров поставщику, как расход на основном складе.
Процедура ЭкспортироватьВозвратТоваровПоставщикуКакОтгрузку(ERPData, ВозвратТоваровПоставщику)
	ЛБ = Справочники.Контрагенты.НайтиПоКоду("000000059");
	
	//	Заголовок возврата поставщику
	EmeWmsERPEngine.AppendHeaderLine(ERPData);
	ERPData.header.id             	= ВозвратТоваровПоставщику.УникальныйИдентификатор();
	ERPData.header.order_no	  	  	= ВозвратТоваровПоставщику.Номер + " (возврат)";
	ERPData.header.order_date	  	= ВозвратТоваровПоставщику.Дата;
	ERPData.header.despatch_date    = ВозвратТоваровПоставщику.Дата+86400*14; //НМА 22.11.17
	ERPData.header.whs_code 	  	= EmeWmsУтилиты.ПолучитьКодСклада(ВозвратТоваровПоставщику.Склад);
	ERPData.header.vendor_code 	  	=  "7715948131"; //НМА 22.11.17 ВозвратТоваровПоставщику.Организация.ИНН;
	ERPData.header.customer_id  	= ЛБ.УникальныйИдентификатор();
    ERPData.header.customer_code  	= EmeWmsУтилиты.ПолучитьКод(ЛБ);
	ERPData.header.customer_name  	= ЛБ.Наименование;
	// Катков А. 04.10.2016 >>
	//ERPData.header.customer_id  	= ВозвратТоваровПоставщику.Контрагент.УникальныйИдентификатор();
	//// Катков А. 04.10.2016 <<  
	//ERPData.header.customer_code  	= EmeWmsУтилиты.ПолучитьКод(ВозвратТоваровПоставщику.Контрагент);
	//ERPData.header.customer_name  	= ВозвратТоваровПоставщику.Контрагент.Наименование;
	// Катков А. 04.10.2016 >>
	//ERPData.header.delivery_id  	= EmeWmsУтилиты.ПолучитьКод(ВозвратТоваровПоставщику.Организация); //НМА 20.11.17
	//// Катков А. 04.10.2016 << //НМА 20.11.17 
	//ERPData.header.delivery_code  	= EmeWmsУтилиты.ПолучитьКод(ВозвратТоваровПоставщику.Организация) + " (трансфер)"; //НМА 20.11.17
	//ERPData.header.delivery_name  	= ВозвратТоваровПоставщику.Организация.Наименование; //НМА 20.11.17
	ERPData.header.comment        	= Лев(ВозвратТоваровПоставщику.Комментарий, 128);
	
	//задача объединения покупателей по группам >>
	//ГруппаКонтрагентов = Справочники.Контрагенты.НайтиПоКоду("000000041"); // Оптовики
	ГруппаКонтрагентов = Справочники.Контрагенты.НайтиПоКоду("000000015"); // Поставщики
	Если ГруппаКонтрагентов <> Справочники.Контрагенты.ПустаяСсылка() Тогда
		УИДАдресаДоставки = ГруппаКонтрагентов.УникальныйИдентификатор();
		КодАдресаДоставки = СокрЛП(ГруппаКонтрагентов.Код);
		ИмяАдресаДоставки = ГруппаКонтрагентов.Наименование;
		ERPData.header.delivery_id   = УИДАдресаДоставки;
		ERPData.header.delivery_code = КодАдресаДоставки;
		ERPData.header.delivery_name = ИмяАдресаДоставки;
	КонецЕсли;
	//задача объединения покупателей по группам <<
	
	ERPData.header.eorder = 2;
	
	Если НЕ ВозвратТоваровПоставщику.ПометкаУдаления Тогда //НМА 10.11.17 если не ПометкаУдаления
		
		//	Строки возврата
		EmeWmsERPEngine.SelectChild(ERPData, "lines");
		УИДСтроки = 0;
		Для Каждого СтрокаТовара Из ВозвратТоваровПоставщику.Товары Цикл
			УИДСтроки = УИДСтроки + 1;
			//НМА 02.11.17 >>
			Если Константы.EmeWmsНеУчитыватьДопТоварыСоСроками.Получить() Тогда //НМА 08.11.17
				Если СтрокаТовара.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(СтрокаТовара.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда 
					Продолжить;
				КонецЕсли;
			КонецЕсли; //НМА 08.11.17
			//НМА 02.11.17 <<
			EmeWmsERPEngine.AppendChildLine(ERPData);
			ERPData.lines.id			= УИДСтроки;
			ERPData.lines.order_line_no	= СтрокаТовара.НомерСтроки;
			// Катков А. 04.10.2016 >>
			//ERPData.lines.goods_id		= СтрокаТовара.Номенклатура.УникальныйИдентификатор(); 
			ERPData.lines.goods_id		= EmeWmsУтилиты.ПолучитьКод(СтрокаТовара.Номенклатура);
			//ERPData.lines.goods_code	= СокрЛП(СтрокаТовара.Номенклатура.Код);
			ERPData.lines.goods_code	= EmeWmsУтилиты.ПолучитьКодСпрНоменклатура_НеДляСинхронизации(СтрокаТовара.Номенклатура);
			ERPData.lines.lot_no		= "-";
			
			//НМА 31.08.17 >>
			Если СтрокаТовара.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(СтрокаТовара.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда //НМА 11.10.17 Срок годности дополнительных
				ERPData.lines.bbd = СтрокаТовара.Номенклатура.емеСрокГодностиДляДополнительных; //НМА 11.10.17 Срок годности дополнительных
			ИначеЕсли ЗначениеЗаполнено(СтрокаТовара.СерияНоменклатуры) Тогда
				Если ЗначениеЗаполнено(СтрокаТовара.СерияНоменклатуры.СрокГодности) Тогда
					ERPData.lines.bbd = СтрокаТовара.СерияНоменклатуры.СрокГодности;
				КонецЕсли;
			КонецЕсли;
			//НМА 31.08.17 <<
			
			//НМА 19.10.17 >>
			Если ЗначениеЗаполнено(ERPData.lines.bbd) Тогда
				Если ERPData.lines.bbd >= НачалоДня(ТекущаяДата()) Тогда 
					ERPData.lines.stock_status = "N";
				Иначе
					ERPData.lines.stock_status = "E";
				КонецЕсли;
			Иначе
				ERPData.lines.stock_status = "N";
			КонецЕсли;
			//НМА 19.10.17 <<
			
			// выберем как базовую Единицу измерения с коэффициентом 1
			ЕдИзм_К1 = EmeWmsУтилиты.ПолучитьБазовуюЕдиницуИзмеренияК1(СтрокаТовара.Номенклатура);
			
			Если СтрокаТовара.ЕдиницаИзмерения = ЕдИзм_К1 Тогда // берем кол-во в базовых единицах
				ERPData.lines.quantity		= СтрокаТовара.Количество;
				ЕдиницаИзмерения 			= ЕдИзм_К1;
			Иначе
				Если ЕдИзм_К1 <> Неопределено Тогда
					ERPData.lines.quantity	= СтрокаТовара.Количество * СтрокаТовара.Коэффициент; // берем кол-во в базовых единицах
					ЕдиницаИзмерения 		= ЕдИзм_К1;
				Иначе
					ERPData.lines.quantity	= СтрокаТовара.Количество;  // не нашли базовую единицу берем кол-во в текущих единицах (ОШИБКА!)
					ЕдиницаИзмерения 		= СтрокаТовара.ЕдиницаИзмерения;
					ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Экспорт док-та: """ + ВозвратТоваровПоставщику + """, не найдена Базовая единица измерения у """ + СтрокаТовара.Номенклатура + """");
				КонецЕсли; 
			КонецЕсли; 
			Если ЗначениеЗаполнено(ЕдиницаИзмерения.ЕдиницаПоКлассификатору.емеКодСинхронизации) Тогда
				ERPData.lines.mu_code		= ЕдиницаИзмерения.ЕдиницаПоКлассификатору.емеКодСинхронизации;
			Иначе
				ERPData.lines.mu_code		= ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Наименование;
			КонецЕсли;
			// Катков А. 04.10.2016 <<
		КонецЦикла;	
		
	КонецЕсли; //НМА 10.11.17 если не ПометкаУдаления
	
КонецПроцедуры

//НМА 30.11.17
//	Функция ВозвратТоваровПоставщикуКакПриход возвращает Истина, если возвра товара поставщику - это приход на склад EME
Функция ВозвратТоваровПоставщикуКакПриход(ВозвратТоваровПоставщику)
	Возврат ВозвратТоваровПоставщику.Склад.Родитель.Наименование = "Магазины";
КонецФункции

Функция ВозвратТоваровПоставщикуКакОтгрузка(ВозвратТоваровПоставщику)
	Возврат ВозвратТоваровПоставщику.Склад.EmeWmsУчет;
КонецФункции
//НМА 30.11.17
