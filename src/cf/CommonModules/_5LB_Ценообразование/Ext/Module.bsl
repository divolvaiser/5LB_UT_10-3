Функция ПолучитьНаценкиНоменклатуры(Источник) Экспорт
	
	РезТабл = Новый ТаблицаЗначений;
	
	ТаблДанных = Источник.Товары.Выгрузить();
	ТаблДанных.Свернуть("Номенклатура");
	//ТаблДанных = Источник.Скопировать();
	Если ТаблДанных.Количество() = 0 Тогда
		Возврат РезТабл;
	КонецЕсли;
	
	РезТабл = ТаблДанных.Скопировать();
	РезТабл.Очистить();
	
	//Цена5LB  = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");	
	//Цена5LBA = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000020");
	
	
	ЗапросВТ = Новый Запрос("ВЫБРАТЬ Т.Номенклатура ПОМЕСТИТЬ втТабл Из &Таб КАК Т");
	ЗапросВТ.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗапросВТ.УстановитьПараметр("Таб", ТаблДанных);
	ЗапросВТ.Выполнить();   
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ЗапросВТ.МенеджерВременныхТаблиц;
	Запрос.Текст = "
		|ВЫБРАТЬ						
		|	ТаблТовары.Номенклатура КАК Номенклатура,
		|   ЕстьNULL(МАКСИМУМ(РНаценка.Наценка), 32) КАК НаценкаРекомендованная,
		|   ЕСТЬNULL(МАКСИМУМ(РНаценка.Наценка), 0) КАК РекомендованнаяНаценкаИспользуется,	
		|	ЕстьNULL(МАКСИМУМ(КурсоваяНаценка.Наценка), 0) КАК НаценкаКурсовая,
		|	ЕстьNULL(МАКСИМУМ(КурсоваяНаценкаВчера.Наценка), 0) КАК НаценкаКурсоваяВчера,		
		|	0 КАК НаценкаРозница,
		|	0 КАК НаценкаОпт,		
		//|	ЕСТЬNULL(МАКСИМУМ(КурсоваяНацВчера.Наценка), 0) КАК НаценкаКурсоваяВчера,
		|	ЕСТЬNULL(МАКСИМУМ(Порог.ПроцентРозница), 1) КАК ПорогРозница,
		|	ЕСТЬNULL(МАКСИМУМ(Порог.ПроцентЗакупка), 1) КАК ПорогОпт
		//|	ВЫБОР КОГДА ЛбАртем.Номенклатура ЕСТЬ NULL Тогда 0 Иначе ЕстьNULL(МАКСИМУМ(ЛбАртем.Цена), 0) Конец КАК Цена,
		////|	ЕстьNULL(МАКСИМУМ(СЦЗ.Цена), 0) КАК СЦЗ_Цена,
		////|   ЕстьNULL(МАКСИМУМ(ЛБ.Цена), 0) КАК ЦенаЛБ,
		|ИЗ
		|	втТабл КАК ТаблТовары
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.КурсоваяНаценка.СрезПоследних(&НаДату, Номенклатура В (ВЫБРАТЬ Т.Номенклатура ИЗ втТабл КАК Т)) КАК КурсоваяНаценка
		|   ПО КурсоваяНаценка.Номенклатура = ТаблТовары.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.КурсоваяНаценка.СрезПоследних(&Вчера, Номенклатура В (ВЫБРАТЬ Т.Номенклатура ИЗ втТабл КАК Т)) КАК КурсоваяНаценкаВчера
		|   ПО КурсоваяНаценкаВчера.Номенклатура = ТаблТовары.Номенклатура		
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РекомендованнаяНаценка.СрезПоследних(&НаДату, ) КАК РНаценка
		|	ПО РНаценка.Номенклатура = КурсоваяНаценка.Номенклатура.Родитель,	
		|		
		|	РегистрСведений.КурсоваяНаценкаПорог.СрезПоследних(, ) КАК Порог
		|		
		|ГДЕ 
		|   НЕ КурсоваяНаценка.Номенклатура В Иерархии (Выбрать ГруппаНоменклатуры Из РегистрСведений.ИсключенияИзАнализаКурсовойНаценки) 
		//|	И КурсоваяНац.Номенклатура В (&СписокНоменклатура)
		|СГРУППИРОВАТЬ ПО 
		|	ТаблТовары.Номенклатура
		//|	ЛбАртем.Номенклатура
		|";   		
		
	//Запрос.УстановитьПараметр("СписокНоменклатура",		ТаблДанных.ВыгрузитьКолонку("Номенклатура"));	
	Запрос.УстановитьПараметр("НаДату", 				ТекущаяДата());
	Запрос.УстановитьПараметр("Вчера",					НачалоДня(ТекущаяДата() - 24*60*60));

	Рез = Запрос.Выполнить();		
	//Если Рез.Пустой() Тогда		
	//	//возврат РезТабл;
	//КонецЕсли;
	РезТабл = Рез.Выгрузить();
	
  	ЗапросУДАЛЕНИЕ = Новый Запрос;
	ЗапросУДАЛЕНИЕ.МенеджерВременныхТаблиц = ЗапросВТ.МенеджерВременныхТаблиц;
	ЗапросУДАЛЕНИЕ.Текст = "УНИЧТОЖИТЬ втТабл";
	ЗапросУДАЛЕНИЕ.Выполнить();    
	
	Для Каждого ТекСтр Из РезТабл Цикл
		
//		Если (Выб.Порог = 0) 
//		//	//ИЛИ (Выб.ПорогЗакупка=0) 
//			Тогда
//			Прервать;
//		КонецЕсли;
//		
//		НовСтр = ТабКУстановке.Добавить();
//		НовСтр.Номенклатура = Выб.Номенклатура;
//		НовСтр.Цена = Выб.Цена;
//		//НовСтр.СЦЗ_Цена = Выб.СЦЗ_Цена;
////		НовСтр.ЦенаЛБ = Выб.ЦенаЛБ;
//		НовСтр.Наценка = 0;
//		//НовСтр.НаценкаСЦЗ = 0;		
//		//++ Кузнецов С.А. - Наценка от значения в РС "Рекомендованная наценка" - Задача в МегаПлане №3329 - 31.05.2016 / 06.06.2016
//		НовСтр.РекомендованнаяНаценка = Выб.РекомендованнаяНаценка;
//		НовСтр.ИспользуетсяРекомендованнаяНаценка = Выб.ИспользуетсяРекомендованнаяНаценка;
//		//-- Кузнецов С.А. - 31.05.2016 / 06.06.2016
//				
//		ЗаходилиРоз = Ложь;
//		ЗаходилиОпт = Ложь;
//		
		// Для Розницы
		ПрошлоеДеление = ТекСтр.НаценкаКурсовая/ТекСтр.ПорогРозница;
		ТекущееДеление = ТекСтр.НаценкаКурсоваяВчера/ТекСтр.ПорогРозница;
		Если ПрошлоеДеление = 0 Тогда //Только текущую наценку анализируем
			Если Цел(ТекущееДеление) > 1 Тогда //Наценка = Наценке,т.к превысили порог ))
				// Рустам - обновление 16.01.17 (письмо)
				ТекСтр.НаценкаРозница = ТекСтр.НаценкаКурсовая;
//				ЗаходилиРоз = Истина;
			КонецЕсли;
		ИначеЕсли (Цел(ПрошлоеДеление) <> Цел(ТекущееДеление)) 
			//13012017 "Порог" - нет, "ПорогРозница" есть
			//И (?(ТекСтр.НаценкаКурсовая < 0, -1*ТекСтр.НаценкаКурсовая, ТекСтр.НаценкаКурсовая) > ТекСтр.Порог)
			И (?(ТекСтр.НаценкаКурсовая < 0, -1*ТекСтр.НаценкаКурсовая, ТекСтр.НаценкаКурсовая) > ТекСтр.ПорогРозница)
			Тогда 
				ТекСтр.НаценкаРозница = ТекСтр.НаценкаКурсовая;
////			ЗаходилиРоз = Истина;
//		ИначеЕсли (Выб.НаценкаВчера=Выб.Наценка) 
////			И 
////		    //++ Кузнецов С.А. - Уменьшаем цену в случае уменьшения курсы (с учетом порога) - 24.03.2016
////			//(Выб.Наценка>Выб.Порог) 
////			(?(Выб.Наценка < 0, -1*Выб.Наценка, Выб.Наценка)>Выб.Порог)
////			//-- Кузнецов С.А. - 24.03.2016
////			Тогда 
////			НовСтр.Наценка = Выб.Наценка;
////			ЗаходилиРоз = Истина;
		КонецЕсли;		
		
	КонецЦикла;	
	
//	Если ТабКУстановке.Количество()=0 Тогда
//		Возврат РезТабл;
//	КонецЕсли;
//	
//	ЕстьКолонкаТиповЦен = РезТабл.Колонки.Найти("ТипЦен");
//	Если ЕстьКолонкаТиповЦен = Неопределено Тогда
//		РезТабл.Колонки.Добавить("ТипЦен", Новый ОписаниеТипов("СправочникСсылка.ТипыЦенНоменклатуры"));
//	КонецЕсли;
//	РезТабл.Очистить();
//	
//	
//	Для Каждого ТекСтр Из ТабКУстановке Цикл
//		Если ТекСтр.Цена > 0 Тогда				
//				
//				ЦенаРасчет = 0;
//				// пересчет с цены 5LB_Artem на 5LB - алгоритм здесь
//				
//				//ТаблДанных.Найти()
//				
//				ЕдВыб = Справочники.ЕдиницыИзмерения.Выбрать(,ТекСтр.Номенклатура);
//				Пока ЕдВыб.Следующий() Цикл
//					Если ТекСтр.Номенклатура.БазоваяЕдиницаИзмерения = ЕдВыб.ЕдиницаПоКлассификатору Тогда
//						ЕдиницаИзмерения = ЕдВыб.Ссылка;
//						прервать;
//					КонецЕсли;
//				КонецЦикла;
//				//Если (Выб.Цена = 0) И (НЕ ЗначениеЗаполнено(Выб.Номенклатура.НоменклатурнаяГруппа)) Тогда 
//				ЦенаРасчет = ОКР((ТекСтр.Цена)*(1 + ТекСтр.Наценка/100), -1, 1);
//				//Иначе
//				//	НовДокСтрТов.Цена = ОКР(((Выб.Цена/100)*Выб.Наценка)+Выб.Цена,-1,1);
//				//КонецЕсли;
//				Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
//					Коэфф = ЕдиницаИзмерения.Коэффициент;
//					Если Коэфф > 1 Тогда 
//						ЦенаРасчет = Окр(ЦенаРасчет/Коэфф)*Коэфф;
//				//		НовДокСтрТов.Цена = ТМП;
//					КонецЕсли;
//				КонецЕсли;				
//				
//				Если ЦенаРасчет > 0 Тогда	
//					НоваяСтрока = РезТабл.Добавить();
//					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтр);				
//					НоваяСтрока.ТипЦен 			 = Цена5LB;															
//					НоваяСтрока.Цена  			 = ЦенаРасчет;
//					НоваяСтрока.ЕдиницаИзмерения = ЕдиницаИзмерения;
//				КонецЕсли;
//				
//		КонецЕсли;					
//	КонецЦикла;		


	Возврат РезТабл;
	
КонецФункции

// Функция - создание документа установки цен по таблице значений - в качестве исх.данных
// 		
//		возвращает ссылку на новый документ (или пустая - если не создан)
//		
Функция СоздатьДокументУстановкиЦен(ТаблДанных, стрКомментарий="", НаДату=Неопределено) Экспорт	
	
	Рез = Документы.УстановкаЦенНоменклатуры.ПустаяСсылка();
	
	// цена по умолчанию - если не указано
	Цена5LB = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");	
	
 	// проверки
	Если ТаблДанных.Количество() = 0 Тогда
		Возврат Рез;
	КонецЕсли; 
	
	ЕстьКолонкаТиповЦен = ТаблДанных.Колонки.Найти("ТипЦен");
	ЕстьКолонкаНоменклатура = ТаблДанных.Колонки.Найти("Номенклатура");
	
	Если ЕстьКолонкаНоменклатура = Неопределено Тогда
		Возврат Рез;
	КонецЕсли;
	
	СписокТиповЦен = Новый Массив;
	СписокТиповЦен.Очистить();
	Если ЕстьКолонкаТиповЦен = Неопределено Тогда
		СписокТиповЦен.Добавить(Цена5LB);
	Иначе
		тз = ТаблДанных.Скопировать();
		тз.Свернуть("ТипЦен");
		СписокТиповЦен = тз.ВыгрузитьКолонку("ТипЦен");
	КонецЕсли;	
	Если СписокТиповЦен.Количество() = 0 Тогда
		Возврат Рез;
	КонецЕсли; 
	
	
	// создать новый документ
	Док = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	
	// шапка
	Если НаДату=Неопределено Тогда 
		Док.Дата = ТекущаяДата();
		Док.ЗаписыватьОперативно = Истина;
	Иначе
		Док.Дата = НаДату;
		//Если КонецДня(Док.Дата) = КонецДня
		Док.ЗаписыватьОперативно = Ложь;
	КонецЕсли;      	
	Док.НеПроводитьНулевыеЗначения=Истина;
	
	// таблица типов цен
	Для Каждого ТекТипЦен Из СписокТиповЦен Цикл
		НовДокСтр = Док.ТипыЦен.Добавить();
		НовДокСтр.ТипЦен = Цена5LB;
	КонецЦикла;
	
	// табличная часть - номенклатура
	Для Каждого ТекСтрПоз Из ТаблДанных Цикл
		
		Для Каждого ТекТипЦен Из СписокТиповЦен Цикл
			
			НовДокСтрТов 						= Док.Товары.Добавить();
			НовДокСтрТов.ИндексСтрокиТаблицыЦен	= 0;
			НовДокСтрТов.Номенклатура 			= ТекСтрПоз.Номенклатура;
			НовДокСтрТов.ТипЦен 				= ТекТипЦен;
			НовДокСтрТов.Валюта 				= ТекТипЦен.ВалютаЦены;
			НовДокСтрТов.Цена                   = ТекСтрПоз.Цена;
			НовДокСтрТов.ЕдиницаИзмерения       = ТекСтрПоз.ЕдиницаИзмерения;

		КонецЦикла;  			
						
	КонецЦикла;
	
	// подвал
	Док.Комментарий = стрКомментарий;		
	
	
	// попытка записи документа	
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
		Рез = Док.Ссылка;
	Исключение   		
	КонецПопытки;		
	
	Возврат Рез;
	
	
КонецФункции

Функция СозданиеТаблицыЦен_5LB_по_5LBA(Источник) Экспорт
	
	РезТабл = Новый ТаблицаЗначений;
	
	ТаблДанных = Источник.Товары.Выгрузить();
	//ТаблДанных = Источник.Скопировать();
	Если ТаблДанных.Количество() = 0 Тогда
		Возврат РезТабл;
	КонецЕсли;
	
	ТабНаценки = ПолучитьНаценкиНоменклатуры(Источник);
	
	РезТабл = ТаблДанных.Скопировать();
	РезТабл.Очистить();
	
	Цена5LB  = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");	
	Цена5LBA = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000020");
	
	
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "
	//|ВЫБРАТЬ
	//|	КурсоваяНац.Номенклатура,
	//|	МАКСИМУМ(КурсоваяНац.Наценка) КАК Наценка,
	//|	ЕСТЬNULL(МАКСИМУМ(КурсоваяНацВчера.Наценка), 0) КАК НаценкаВчера,
	//|	ЕСТЬNULL(МАКСИМУМ(Порог.ПроцентРозница), 1) КАК Порог,
	////|	ЕСТЬNULL(МАКСИМУМ(Порог.ПроцентЗакупка), 1) КАК ПорогЗакупка,
	//|	ВЫБОР КОГДА ЛбАртем.Номенклатура ЕСТЬ NULL Тогда 0 Иначе ЕстьNULL(МАКСИМУМ(ЛбАртем.Цена), 0) Конец КАК Цена,
	////|	ЕстьNULL(МАКСИМУМ(СЦЗ.Цена), 0) КАК СЦЗ_Цена,
	////|   ЕстьNULL(МАКСИМУМ(ЛБ.Цена), 0) КАК ЦенаЛБ,
	//|   ЕстьNULL(МАКСИМУМ(РНаценка.Наценка), 32) КАК РекомендованнаяНаценка,
	//|   ЕСТЬNULL(МАКСИМУМ(РНаценка.Наценка), 0) КАК ИспользуетсяРекомендованнаяНаценка
	//|ИЗ
	//|	РегистрСведений.КурсоваяНаценка.СрезПоследних(, Номенклатура В (&СписокНоменклатура)) КАК КурсоваяНац
	//|
	//|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсоваяНаценка.СрезПоследних(&Вчера, Номенклатура В (&СписокНоменклатура)) КАК КурсоваяНацВчера
	//|	ПО КурсоваяНац.Номенклатура = КурсоваяНацВчера.Номенклатура
	//|
	//|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ТипЦен = &ЛбАрт И Номенклатура В (&СписокНоменклатура)) КАК ЛбАртем
	//|	ПО КурсоваяНац.Номенклатура = ЛбАртем.Номенклатура
	//|		
	//|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РекомендованнаяНаценка.СрезПоследних(&ТекДата, ) КАК РНаценка
	//|	ПО КурсоваяНац.Номенклатура.Родитель = РНаценка.Номенклатура,
	//|
	//|	РегистрСведений.КурсоваяНаценкаПорог.СрезПоследних(, ) КАК Порог
	//|
	//|ГДЕ 
	//|   НЕ КурсоваяНац.Номенклатура В Иерархии (Выбрать ГруппаНоменклатуры Из РегистрСведений.ИсключенияИзАнализаКурсовойНаценки) 
	////|	И КурсоваяНац.Номенклатура В (&СписокНоменклатура)
	//|СГРУППИРОВАТЬ ПО 
	//|	КурсоваяНац.Номенклатура,
	//|	ЛбАртем.Номенклатура
	//|";
	//
	//Запрос.УстановитьПараметр("СписокНоменклатура",		ТаблДанных.ВыгрузитьКолонку("Номенклатура"));	
	//Запрос.УстановитьПараметр("ТекДата", 				ТекущаяДата());
	//Запрос.УстановитьПараметр("Вчера",					НачалоДня(ТекущаяДата()-86400));
	//Запрос.УстановитьПараметр("ЛбАрт",					Цена5LBA); 
	//
	//Рез = Запрос.Выполнить();	
	//
	//Если Рез.Пустой() Тогда
	//	возврат РезТабл;
	//КонецЕсли;
	
	
//	ТабКУстановке = Новый ТаблицаЗначений;
//	ТабКУстановке.Колонки.Добавить("Номенклатура");
//	ТабКУстановке.Колонки.Добавить("Цена");
//	//ТабКУстановке.Колонки.Добавить("СЦЗ_Цена");
//	//ТабКУстановке.Колонки.Добавить("ЦенаЛБ");
//	ТабКУстановке.Колонки.Добавить("Наценка");
//	//ТабКУстановке.Колонки.Добавить("НаценкаСЦЗ");
//	//++ Кузнецов С.А. - Наценка от значения в РС "Рекомендованная наценка" - Задача в МегаПлане №3329 - 31.05.2016 / 06.06.2016
//	ТабКУстановке.Колонки.Добавить("РекомендованнаяНаценка");
//	ТабКУстановке.Колонки.Добавить("ИспользуетсяРекомендованнаяНаценка");
//	//-- Кузнецов С.А. - 31.05.2016 / 06.06.2016
//	
//	Выб = Рез.Выбрать();
//	Пока Выб.Следующий() Цикл
//		
//		Если (Выб.Порог = 0) 
//		//	//ИЛИ (Выб.ПорогЗакупка=0) 
//			Тогда
//			Прервать;
//		КонецЕсли;
//		
//		НовСтр = ТабКУстановке.Добавить();
//		НовСтр.Номенклатура = Выб.Номенклатура;
//		НовСтр.Цена = Выб.Цена;
//		//НовСтр.СЦЗ_Цена = Выб.СЦЗ_Цена;
////		НовСтр.ЦенаЛБ = Выб.ЦенаЛБ;
//		НовСтр.Наценка = 0;
//		//НовСтр.НаценкаСЦЗ = 0;		
//		//++ Кузнецов С.А. - Наценка от значения в РС "Рекомендованная наценка" - Задача в МегаПлане №3329 - 31.05.2016 / 06.06.2016
//		НовСтр.РекомендованнаяНаценка = Выб.РекомендованнаяНаценка;
//		НовСтр.ИспользуетсяРекомендованнаяНаценка = Выб.ИспользуетсяРекомендованнаяНаценка;
//		//-- Кузнецов С.А. - 31.05.2016 / 06.06.2016
//				
//		ЗаходилиРоз = Ложь;
//		ЗаходилиОпт = Ложь;
//		
//		// Для Розницы
//		ПрошлоеДеление = Выб.НаценкаВчера/Выб.Порог;
//		ТекущееДеление = Выб.Наценка/Выб.Порог;
//		Если ПрошлоеДеление = 0 Тогда //Только текущую наценку анализируем
//			Если Цел(ТекущееДеление) > 1 Тогда //Наценка = Наценке,т.к превысили порог ))
//				НовСтр.Наценка = Выб.Наценка;
//				ЗаходилиРоз = Истина;
//			КонецЕсли;
//		ИначеЕсли (Цел(ПрошлоеДеление)<>Цел(ТекущееДеление)) 
//			И 
//			//++ Кузнецов С.А. - Уменьшаем цену в случае уменьшения курсы (с учетом порога) - 24.03.2016
//			//(Выб.Наценка>Выб.Порог)
//			(?(Выб.Наценка < 0, -1*Выб.Наценка, Выб.Наценка)>Выб.Порог)
//			//-- Кузнецов С.А. - 24.03.2016
//			Тогда //джигурдим (хотя и не джигурдим)) )
//			НовСтр.Наценка = Выб.Наценка;
//			ЗаходилиРоз = Истина;
//		ИначеЕсли (Выб.НаценкаВчера=Выб.Наценка) 
//			И 
//		    //++ Кузнецов С.А. - Уменьшаем цену в случае уменьшения курсы (с учетом порога) - 24.03.2016
//			//(Выб.Наценка>Выб.Порог) 
//			(?(Выб.Наценка < 0, -1*Выб.Наценка, Выб.Наценка)>Выб.Порог)
//			//-- Кузнецов С.А. - 24.03.2016
//			Тогда 
//			НовСтр.Наценка = Выб.Наценка;
//			ЗаходилиРоз = Истина;
//		КонецЕсли;		
//		
//	КонецЦикла;	
	
	//Если ТабКУстановке.Количество()=0 Тогда
	//	Возврат РезТабл;
	//КонецЕсли;
	
	ЕстьКолонкаТиповЦен = РезТабл.Колонки.Найти("ТипЦен");
	Если ЕстьКолонкаТиповЦен = Неопределено Тогда
		РезТабл.Колонки.Добавить("ТипЦен", Новый ОписаниеТипов("СправочникСсылка.ТипыЦенНоменклатуры"));
	КонецЕсли;
	РезТабл.Очистить();
	
	
	Для Каждого ТекСтр Из ТаблДанных Цикл
		Если ТекСтр.Цена > 0 Тогда				
				
				ЦенаРасчет = 0;
				
				Наценка = 0;
				НайденаСтрокаНаценка = ТабНаценки.Найти(ТекСтр.Номенклатура, "Номенклатура");
				Если НайденаСтрокаНаценка <> Неопределено Тогда
					Наценка = НайденаСтрокаНаценка.НаценкаРозница;
				КонецЕсли;
				
				//ТаблДанных.Найти()
				
				ЕдВыб = Справочники.ЕдиницыИзмерения.Выбрать(,ТекСтр.Номенклатура);
				Пока ЕдВыб.Следующий() Цикл
					Если ТекСтр.Номенклатура.БазоваяЕдиницаИзмерения = ЕдВыб.ЕдиницаПоКлассификатору Тогда
						ЕдиницаИзмерения = ЕдВыб.Ссылка;
						прервать;
					КонецЕсли;
				КонецЦикла;
				//Если (Выб.Цена = 0) И (НЕ ЗначениеЗаполнено(Выб.Номенклатура.НоменклатурнаяГруппа)) Тогда 
				ЦенаРасчет = ОКР((ТекСтр.Цена)*(1 + Наценка/100), -1, 1);
				//Иначе
				//	НовДокСтрТов.Цена = ОКР(((Выб.Цена/100)*Выб.Наценка)+Выб.Цена,-1,1);
				//КонецЕсли;
				Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
					Коэфф = ЕдиницаИзмерения.Коэффициент;
					Если Коэфф > 1 Тогда 
						ЦенаРасчет = Окр(ЦенаРасчет/Коэфф)*Коэфф;
				//		НовДокСтрТов.Цена = ТМП;
					КонецЕсли;
				КонецЕсли;				
				
				Если ЦенаРасчет > 0 Тогда	
					НоваяСтрока = РезТабл.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтр);				
					НоваяСтрока.ТипЦен 			 = Цена5LB;															
					НоваяСтрока.Цена  			 = ЦенаРасчет;
					НоваяСтрока.ЕдиницаИзмерения = ЕдиницаИзмерения;
				КонецЕсли;
				
		КонецЕсли;					
	КонецЦикла;		


	Возврат РезТабл;
	
КонецФункции

// вх - т.з. ТаблДанных - цены 5LB
Функция СозданиеТаблицыЦен_5LB_по_5LBA111(Источник)

//	
//	ТаблДанных = Источник.Товары.Выгрузить();
//	
//	РезТабл = Новый ТаблицаЗначений;
//		
//	Если ТаблДанных.Количество() > 0 Тогда
//		
//		//РезТабл = ТаблДанных.Скопировать();
//		РезТабл.Очистить();
//		
//		Цена5LB = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");	
//		Цена5LBA = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000020");
//		
//		ЕстьКолонкаТиповЦен = РезТабл.Колонки.Найти("ТипЦен");
//		Если ЕстьКолонкаТиповЦен = Неопределено Тогда
//			РезТабл.Колонки.Добавить("ТипЦен", Новый ОписаниеТипов("СправочникСсылка.ТипыЦенНоменклатуры"));
//		КонецЕсли;
//		
//		ЕстьНаценка = РезТабл.Колонки.Найти("Наценка");
//		Если ЕстьНаценка = Неопределено Тогда
//			РезТабл.Колонки.Добавить("Наценка", Новый ОписаниеТипов("Число"));
//		КонецЕсли;
//	
//		Для Каждого ТекСтр Из ТаблДанных Цикл
//			Если ТекСтр.Цена > 0 Тогда				
//				
//				ЦенаРасчет = 0;
//				// пересчет с цены 5LB_Artem на 5LB - алгоритм здесь
//				
//				ЕдВыб = Справочники.ЕдиницыИзмерения.Выбрать(,ТекСтр.Номенклатура);
//				Пока ЕдВыб.Следующий() Цикл
//					Если ТекСтр.Номенклатура.БазоваяЕдиницаИзмерения = ЕдВыб.ЕдиницаПоКлассификатору Тогда
//						ЕдиницаИзмерения = ЕдВыб.Ссылка;
//						прервать;
//					КонецЕсли;
//				КонецЦикла;
//				//Если (Выб.Цена = 0) И (НЕ ЗначениеЗаполнено(Выб.Номенклатура.НоменклатурнаяГруппа)) Тогда 
//				ЦенаРасчет = ОКР((ТекСтр.Цена)*(1 + ТекСтр.Наценка/100), -1, 1);
//				//Иначе
//				//	НовДокСтрТов.Цена = ОКР(((Выб.Цена/100)*Выб.Наценка)+Выб.Цена,-1,1);
//				//КонецЕсли;
//				Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
//					Коэфф = ЕдиницаИзмерения.Коэффициент;
//					Если Коэфф > 1 Тогда 
//						ЦенаРасчет = Окр(ЦенаРасчет/Коэфф)*Коэфф;
//				//		НовДокСтрТов.Цена = ТМП;
//					КонецЕсли;
//				КонецЕсли;				
//				
//				Если ЦенаРасчет > 0 Тогда	
//					НоваяСтрока = РезТабл.Добавить();
//					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтр);				
//					НоваяСтрока.ТипЦен = Цена5LB;										
//					НоваяСтрока.Цена   = ЦенаРасчет;
//				КонецЕсли;
//				
//			КонецЕсли;					
//		КонецЦикла;		
//		
//	КонецЕсли;	
//	
//	Возврат РезТабл;	
	
КонецФункции	
	
Процедура _5LB_ПриПроведенииУстановкаЦенНоменклатурыОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	Цена5LBA = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000020");

	// пока - только для 5LB_Artem - на его основании созадние 5LB	
	Если Источник.ТипыЦен.Количество() <> 1 Тогда
		Возврат;
	Иначе
		Если Источник.ТипыЦен[0].ТипЦен <> Цена5LBA Тогда
			Возврат;	
		КонецЕсли;
	КонецЕсли;	
		
	ТаблИсхДанных5LB = СозданиеТаблицыЦен_5LB_по_5LBA(Источник);
	
	Если ТаблИсхДанных5LB.Количество() > 0 Тогда                        		
		СтрокаКомментарий = "Создан автоматически на цену 5LB - на основании "
			+ ? (Источник = Неопределено,"", "по " + Строка(Источник));		
		ДокСсылка = СоздатьДокументУстановкиЦен(ТаблИсхДанных5LB, СтрокаКомментарий, Источник.Дата);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////

//Юра
#Область ОчереднаяПеределкаРасчетаЦен
//01.11.2017, Юра
Процедура НочнойПересчетСЦЗ_Машина(ДатаОстатков=Неопределено,Номенклатура = Неопределено,Тест = Ложь) Экспорт 
	Если НЕ ЗначениеЗаполнено(ДатаОстатков) Тогда
		ДатаОстатков = НачалоДня(ТекущаяДата());
	КонецЕсли;
	СписокПредприятийХолдинга = СписокПредприятийХолдинга("7715431262","771701001"); //ООО "5ЛБ"
	СписокМагазинов_ПлюсОсновнойСклад = СписокМагазинов_ПлюсОсновнойСклад();
	СредняяЦенаЗакупки = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("СредняяЦенаЗакупки",Истина);
	ТипЦеныСЦЗ_Машина = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("СЦЗ_Машина",Истина);
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДокСЦЗ_Машина = ОбновитьТипЦеныСЦЗ_Машина(ДатаОстатков,СписокПредприятийХолдинга,СписокМагазинов_ПлюсОсновнойСклад,СредняяЦенаЗакупки,ТипЦеныСЦЗ_Машина,ВалютаРегламентированногоУчета,Тест,,Номенклатура,Ложь);
	
	ДатаОстатков = ДатаОстатков + 1; //добавили 1 секунду потому, что будем менять цену по вкусам, и можем натолкнуться на то, что будут две одинаковые номенклатуры с одним и тем же видом цен, но с разными ценами
	УстановкаЦенПоВсемВкусам(ДатаОстатков,ТипЦеныСЦЗ_Машина,СписокМагазинов_ПлюсОсновнойСклад,ВалютаРегламентированногоУчета,Тест,,Номенклатура);
	
	//Теперь ещё установим цены для "дополнительной" номенклатуры (брак или установлен срок годности).
	УстановитьЦеныДляДопНоменклатуры(ДокСЦЗ_Машина.Ссылка,ДатаОстатков,ТипЦеныСЦЗ_Машина,Тест);
КонецПроцедуры

//24.08.2017, Юра
//Процедура обновления средней цены закупки.
//Если документ указан - только по номенклатуре из документа. Если нет - по всей номенклатуре.
//********************************************************************** Если указан СписокНоменклатуры, тогда по этому списку //01.11.2017, Юра
Процедура ОбновитьЦеныЗакупок(Источник=Неопределено,ДатаДляРасчета,ТестовыйРежим=Ложь,ДокументПроводится=Ложь) Экспорт 
//********************************************************************** Процедура ОбновитьЦеныЗакупок(Источник=Неопределено,ДатаДляРасчета,ТестовыйРежим=Ложь,СписокНоменклатуры=Неопределено) Экспорт //01.11.2017, Юра
	_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен = Константы._5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен.Получить();//31.10.2017, Юра
//Источник = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент().Ссылка;
	ДатаОстатков = ДатаДляРасчета;
	СписокПредприятийХолдинга = СписокПредприятийХолдинга("7715431262","771701001"); //ООО "5ЛБ"
	СписокМагазинов_ПлюсОсновнойСклад = _5LB_Ценообразование.СписокМагазинов_ПлюсОсновнойСклад();
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	//НМА 28.12.17 Обновим нумерацию документа Установка цен номенклатуры >>
	Попытка
		ОбновитьНумерациюОбъектов(Метаданные.Документы.УстановкаЦенНоменклатуры);
	Исключение
	КонецПопытки;
	//НМА 28.12.17 Обновим нумерацию документа Установка цен номенклатуры <<
	
	Если ЗначениеЗаполнено(Источник) Тогда
		//Небольшие проверки самого документа:
		Если НЕ Источник.Проведен Тогда
			Возврат; //не провен документ - нечего дёргать цены
		КонецЕсли;
		
		Если НЕ СписокПредприятийХолдинга.НайтиПоЗначению(Источник.Контрагент) = Неопределено Тогда
			Возврат; //от своих поступления не учитываем
		КонецЕсли;
		
		Если СписокМагазинов_ПлюсОсновнойСклад.НайтиПоЗначению(Источник.СкладОрдер) = Неопределено Тогда
			Возврат; //нужны поступления только на основной склад или в магазин
		КонецЕсли;
		
		//{+НАЧАЛО+Добавления} Автор: Тасмаджиев 06/06/2018//=============================================================================================
		Если ЗначениеЗаполнено(Источник.ДокументОснование)Тогда
			Если ТипЗнч(Источник.ДокументОснование.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				Если Источник.ДокументОснование._5LB_Врозницу Тогда
					 Возврат; //документы поступления в Розницу  не учитываем.
					КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//{-КОНЕЦ-Добавления} Автор: Тасмаджиев 06/06/2018//==============================================================================================
		
		//установим основную цену и товарный курс по поступлению:
		//Если ДатаОстатков = Источник.Дата Тогда //НМА 05.02.18
		//#***+Изменения*** Тасмаджиев 29/11/2018// ->>
		//Раскомментировал , создание Установки цен в валюте.
		ОбновитьТипыЦенОсновной(Источник,_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен,ТестовыйРежим); //НМА 05.02.18
		//#***-Изменения*** Тасмаджиев 29/11/2018// <<-
     
		    УстановитьТоварныйКурсПоПоступлению(Источник,ВалютаРегламентированногоУчета,ТестовыйРежим); //18.10.2017, Юра
		//КонецЕсли; //НМА 05.02.18
		РасчетЦенЗакупок(Источник,ДатаОстатков,СписокПредприятийХолдинга,СписокМагазинов_ПлюсОсновнойСклад,ВалютаРегламентированногоУчета,_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен,Неопределено,ТестовыйРежим,ДокументПроводится);
	Иначе
		//02.11.2017, Юра
		//Проблема в том, что памяти на сервере 1С для расчета по всей номенклатуре не хватает, поэтому найдем последние поступления за год для всей номенклатуры
		//и по каждому из этих документов будем делать расчеты
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	МАКСИМУМ(ПоступлениеТоваровУслугТовары.Ссылка.Дата) КАК Дата,
		               |	ПоступлениеТоваровУслугТовары.Номенклатура
		               |ПОМЕСТИТЬ НоменклатураИМаксимальныеДатыДокументовПоступления
		               |ИЗ
		               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		               |ГДЕ
		               |	ПоступлениеТоваровУслугТовары.Ссылка.Проведен
		               |	И ПоступлениеТоваровУслугТовары.Ссылка.Дата >= &ДатаГодНазад
		               |	И ПоступлениеТоваровУслугТовары.Номенклатура.ВидНоменклатуры = &ВидНоменклатурыТовар
		               |	И НЕ ПоступлениеТоваровУслугТовары.Номенклатура.емеЭтоБрак
		               |	И ПоступлениеТоваровУслугТовары.Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
		               |	И НЕ ПоступлениеТоваровУслугТовары.Номенклатура.ЭтоГруппа
					   //НМА 01.02.18 Задача от Шляхова. Исключить другие организации кроме 5ЛБ >>
					   |	И НЕ ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В (&СписокПредприятийХолдинга)
					   |	И ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер.Ссылка В(&НужныеСклады)
					   //НМА 01.02.18 Задача от Шляхова. Исключить другие организации кроме 5ЛБ <<
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПоступлениеТоваровУслугТовары.Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ПоступлениеТоваровУслугТовары.Ссылка
		               |ИЗ
		               |	НоменклатураИМаксимальныеДатыДокументовПоступления КАК НоменклатураИМаксимальныеДатыДокументовПоступления
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		               |		ПО НоменклатураИМаксимальныеДатыДокументовПоступления.Дата = ПоступлениеТоваровУслугТовары.Ссылка.Дата
		               |			И НоменклатураИМаксимальныеДатыДокументовПоступления.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ПоступлениеТоваровУслугТовары.Ссылка.Дата УБЫВ";

		Запрос.УстановитьПараметр("ВидНоменклатурыТовар",Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товар"));
		Запрос.УстановитьПараметр("ДатаГодНазад",НачалоДня(ТекущаяДата()-365*24*60*60));
		//НМА 01.02.18 Задача от Шляхова. Исключить другие организации кроме 5ЛБ >>
		Запрос.УстановитьПараметр("СписокПредприятийХолдинга",СписокПредприятийХолдинга);
		Запрос.УстановитьПараметр("НужныеСклады",СписокМагазинов_ПлюсОсновнойСклад);
		//НМА 01.02.18 Задача от Шляхова. Исключить другие организации кроме 5ЛБ <<
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			ДатаДляРасчетов = ДатаОстатков;
			РасчетЦенЗакупок(ВыборкаДетальныеЗаписи.Ссылка,ДатаДляРасчетов,СписокПредприятийХолдинга,СписокМагазинов_ПлюсОсновнойСклад,ВалютаРегламентированногоУчета,_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен,Неопределено,ТестовыйРежим,ДокументПроводится);
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

//01.11.2017, Юра
Процедура РасчетЦенЗакупок(Источник,ДатаОстатков,СписокПредприятийХолдинга,СписокМагазинов_ПлюсОсновнойСклад,ВалютаРегламентированногоУчета,_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен,СписокНоменклатуры=Неопределено,ТестовыйРежим,ДокументПроводится)
	
	СредняяЦенаЗакупки = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("СредняяЦенаЗакупки",Истина);
	ТипЦеныСЦЗ_Машина = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("СЦЗ_Машина",Истина);
		
	ТЗ = ОстаткиИДвиженияНоменклатурыДляКоторойНужноДелатьРасчетСреднейЦеныЗакупки(Источник,ДатаОстатков,СписокПредприятийХолдинга,СписокМагазинов_ПлюсОсновнойСклад,СредняяЦенаЗакупки,_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен,СписокНоменклатуры,ДокументПроводится);

	Если ТестовыйРежим Тогда
		Сообщить("Первоначальная таблица документов для расчета по FIFO (поступления за 360 дней с алгоритмом из описания)");
		ТекНом = "";
		МаксимальнаяЦенаНоменклатурыПоДокументу = 0; //НМА 12.02.18
		Для Каждого Строка Из ТЗ Цикл
			МаксимальнаяЦенаНоменклатурыПоДокументу = Строка.МаксимальнаяЦенаНоменклатурыПоДокументу; //НМА 12.02.18
			Если ТекНом = "" или ТекНом <> Строка.Номенклатура Тогда
				//НМА 08.02.18 учитывать количество документа без движений >>
				ТекНужноНабрать = Строка.ФактическийОстаток;
				Если Источник <> Неопределено Тогда
					Если ДокументПроводится Тогда
						ПараметрыОтбора = Новый Структура;
						ПараметрыОтбора.Вставить("Номенклатура", Строка.Номенклатура);
						//НМА 26.04.18 из упаковок в штуки >>
						ТЗОстаткиДокумента=Источник.Товары.Выгрузить(ПараметрыОтбора,"Номенклатура,СуммаИзДокумента,Количество,Коэффициент");
						Для Каждого СтрТЗОстаткиДокумента из ТЗОстаткиДокумента Цикл
							Если СтрТЗОстаткиДокумента.Коэффициент <> 1 Тогда 
								СтрТЗОстаткиДокумента.Количество = СтрТЗОстаткиДокумента.Количество * СтрТЗОстаткиДокумента.Коэффициент;
							КонецЕсли;
						КонецЦикла;
						//НМА 26.04.18 из упаковок в штуки <<
						ТЗОстаткиДокумента.Свернуть("Номенклатура","СуммаИзДокумента,Количество");
						ТекНужноНабрать = Строка.ФактическийОстаток + ТЗОстаткиДокумента.Итог("Количество");
						//НМА 12.02.18 >>
						//МаксимальнаяЦенаНоменклатурыПоТекущемуДокументу = Окр(ТЗОстаткиДокумента.Итог("СуммаИзДокумента")*ЕдИзмИКоэффициент(ТекНом)/ТекНужноНабрать,2);  //***раскомментить //НМА 30.03.18
						//Если МаксимальнаяЦенаНоменклатурыПоТекущемуДокументу > Строка.МаксимальнаяЦенаНоменклатурыПоДокументу Тогда     //***раскомментить //НМА 30.03.18
						//	МаксимальнаяЦенаНоменклатурыПоДокументу = МаксимальнаяЦенаНоменклатурыПоТекущемуДокументу;                  //***раскомментить //НМА 30.03.18
						//КонецЕсли;                                                                                                      //***раскомментить //НМА 30.03.18
						//НМА 12.02.18 <<
					КонецЕсли;
				КонецЕсли;
				//НМА 09.02.18 >>
				Если ТекНужноНабрать<=0 Тогда
					ТекНужноНабрать=1;
				КонецЕсли;
				//НМА 09.02.18 <<
				Сообщить("Номенклатура: "+Строка.Номенклатура+", фактический остаток: "+ТекНужноНабрать);
				//НМА 08.02.18 учитывать количество документа без движений <<
				//Сообщить("Номенклатура: "+Строка.Номенклатура+", фактический остаток: "+Строка.ФактическийОстаток); //НМА 08.02.18
				ТекНом = Строка.Номенклатура;
			КонецЕсли;
			Сообщить("		МаксимальнаяЦенаПоДокументу: "+МаксимальнаяЦенаНоменклатурыПоДокументу+", цена: "+Строка.ЦенаПоДокументу+", КоличествоВБазовыхЕдиницах: "+Строка.Количество+" Регистратор: "+Строка.Регистратор); //НМА 12.02.18
		КонецЦикла;
	КонецЕсли;

	//Теперь по этой табличке методом FIFO определим для каждой номенклатуры среднюю цену закупки. Результат поместим в новую ТаблицаЗначений:
	ТаблицаСЦЗ = Новый ТаблицаЗначений;
	ТаблицаСЦЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСЦЗ.Колонки.Добавить("Цена",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
	ТаблицаСЦЗ.Колонки.Добавить("ТипЦен",Новый ОписаниеТипов("СправочникСсылка.ТипыЦенНоменклатуры"));
	ТаблицаСЦЗ.Колонки.Добавить("Валюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаСЦЗ.Колонки.Добавить("ЕдиницаИзмерения",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	ТекНом = "";
	ТекНужноНабрать = 0;
	ТекКоличествоНабрали = 0;
	ТекСуммаНабрали = 0; 
	ТекКоличествоСЦенойБольше001 = 0;
	ТекСуммаСЦенойБольше001 = 0; 
	ТекущаяЦена = 0;
	МаксимальнаяЦенаНоменклатурыПоДокументу = 0; //НМА 12.02.18
	Для Каждого Строка Из ТЗ Цикл
		МаксимальнаяЦенаНоменклатурыПоДокументу = Строка.МаксимальнаяЦенаНоменклатурыПоДокументу; //НМА 12.02.18
		Если ТекНом = "" или ТекНом <> Строка.Номенклатура Тогда
			Если НЕ ТекНом = "" Тогда
				НашлиЦену = Окр(ТекСуммаСЦенойБольше001 / ?(ТекКоличествоСЦенойБольше001 = 0,1,ТекКоличествоСЦенойБольше001),2);//25.09.2017, Юра
				//Если НашлиЦену > 0 И НашлиЦену <> ТекущаяЦена Тогда//25.09.2017, Юра
				Если НашлиЦену > 0 Тогда //НМА 22.03.18
					//уже расчитанные данные по предыдущей номенклатуре
					НС = ТаблицаСЦЗ.Добавить();
					НС.Номенклатура = ТекНом;
					ЕдИзмИКоэффициент = ЕдИзмИКоэффициент(ТекНом);//03.11.2017, Юра
					НС.Цена = НашлиЦену * ЕдИзмИКоэффициент.Коэффициент;//НашлиЦену;
					НС.ЕдиницаИзмерения = ЕдИзмИКоэффициент.ЕдИзм;//Строка.ЕдиницаХраненияОстатков;
					НС.ТипЦен = СредняяЦенаЗакупки;
					НС.Валюта = ВалютаРегламентированногоУчета;
					Если ТестовыйРежим Тогда
						Сообщить("			учтенный остаток номенклатуры (поступления с ценой больше "+_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен+"): "+ТекНом+" = "+ТекКоличествоСЦенойБольше001);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ТекНом = Строка.Номенклатура;
			ТекНужноНабрать = Строка.ФактическийОстаток;
			//НМА 27.12.17 учитывать количество документа без движений >>
			Если Источник <> Неопределено Тогда
				Если ДокументПроводится Тогда
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Номенклатура", Строка.Номенклатура);
				    //НМА 26.04.18 из упаковок в штуки >>
					ТЗОстаткиДокумента=Источник.Товары.Выгрузить(ПараметрыОтбора,"Номенклатура,СуммаИзДокумента,Количество,Коэффициент");
					Для Каждого СтрТЗОстаткиДокумента из ТЗОстаткиДокумента Цикл
						Если СтрТЗОстаткиДокумента.Коэффициент <> 1 Тогда 
							СтрТЗОстаткиДокумента.Количество = СтрТЗОстаткиДокумента.Количество * СтрТЗОстаткиДокумента.Коэффициент;
						КонецЕсли;
					КонецЦикла;
					//НМА 26.04.18 из упаковок в штуки <<
					ТЗОстаткиДокумента.Свернуть("Номенклатура","СуммаИзДокумента,Количество");
					ТекНужноНабрать = Строка.ФактическийОстаток + ТЗОстаткиДокумента.Итог("Количество");
					//НМА 12.02.18 >>
					//МаксимальнаяЦенаНоменклатурыПоТекущемуДокументу = Окр(ТЗОстаткиДокумента.Итог("СуммаИзДокумента")*ЕдИзмИКоэффициент(ТекНом)/ТекНужноНабрать,2);  //***раскомментить //НМА 30.03.18
					//Если МаксимальнаяЦенаНоменклатурыПоТекущемуДокументу > Строка.МаксимальнаяЦенаНоменклатурыПоДокументу Тогда     //***раскомментить //НМА 30.03.18
					//	МаксимальнаяЦенаНоменклатурыПоДокументу = МаксимальнаяЦенаНоменклатурыПоТекущемуДокументу;                  //***раскомментить //НМА 30.03.18
					//КонецЕсли;                                                                                                      //***раскомментить //НМА 30.03.18
					//НМА 12.02.18 <<
				КонецЕсли;
			КонецЕсли;
			//НМА 09.02.18 >>
			Если ТекНужноНабрать<=0 Тогда
				ТекНужноНабрать=1;
			КонецЕсли;
			//НМА 09.02.18 <<
			//НМА 27.12.17 учитывать количество документа без движений <<
			ТекКоличествоНабрали = 0;
			ТекСуммаНабрали = 0;
			ТекКоличествоСЦенойБольше001 = 0;
			ТекСуммаСЦенойБольше001 = 0;
			ТекущаяЦена = Строка.ТекущаяЦена;//25.09.2017, Юра
			
			Если ТестовыйРежим Тогда
				Сообщить("Расчет по FIFO для номенклатуры "+ТекНом+":");
			КонецЕсли;
		КонецЕсли;
		
		Если ТекНужноНабрать > ТекКоличествоНабрали Тогда
			Набираем = Мин(ТекНужноНабрать - ТекКоличествоНабрали,Строка.Количество);
			ТекКоличествоНабрали = ТекКоличествоНабрали + Набираем;
			//НабираемСумму = Строка.МаксимальнаяЦенаНоменклатурыПоДокументу * Набираем; //НМА 12.02.18
			НабираемСумму = МаксимальнаяЦенаНоменклатурыПоДокументу * Набираем; //НМА 12.02.18
			ТекСуммаНабрали = ТекСуммаНабрали + НабираемСумму;
			
			Если Строка.ЦенаПоДокументу > _5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен Тогда
				ТекКоличествоСЦенойБольше001 = ТекКоличествоСЦенойБольше001 + Набираем;
				ТекСуммаСЦенойБольше001 = ТекСуммаСЦенойБольше001 + НабираемСумму; 
				Если ТестовыйРежим Тогда
					Сообщить("	берем из документа "+Строка.Регистратор +" кол-во "+Набираем+" на сумму "+НабираемСумму);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

	//и последний раз:
	Если НЕ ТекНом = "" Тогда
		НашлиЦену = Окр(ТекСуммаСЦенойБольше001 / ?(ТекКоличествоСЦенойБольше001 = 0,1,ТекКоличествоСЦенойБольше001),2);//25.09.2017, Юра
		//Если НашлиЦену > 0 И НашлиЦену <> ТекущаяЦена Тогда//25.09.2017, Юра
		Если НашлиЦену > 0 Тогда //НМА 22.03.18
			//уже расчитанные данные по предыдущей номенклатуре
			НС = ТаблицаСЦЗ.Добавить();
			НС.Номенклатура = ТекНом;
			ЕдИзмИКоэффициент = ЕдИзмИКоэффициент(ТекНом);//03.11.2017, Юра
			НС.Цена = НашлиЦену * ЕдИзмИКоэффициент.Коэффициент;//НашлиЦену;
			НС.ЕдиницаИзмерения = ЕдИзмИКоэффициент.ЕдИзм;//Строка.ЕдиницаХраненияОстатков;
			НС.ТипЦен = СредняяЦенаЗакупки;
			НС.Валюта = ВалютаРегламентированногоУчета;
			
			Если ТестовыйРежим Тогда
				Сообщить("			учтенный остаток номенклатуры (поступления с ценой больше "+_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен+"): "+ТекНом+" = "+ТекКоличествоСЦенойБольше001);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если ТестовыйРежим Тогда
		Сообщить("Результат по FIFO");
		Для Каждого Строка Из ТаблицаСЦЗ Цикл
			Сообщить("	Номенклатура: "+Строка.Номенклатура+", цена: "+Строка.Цена);
		КонецЦикла;
	КонецЕсли;
	
	//Результат поместим в новый документ УстановкаЦенНоменклатуры:
	Док = НайтиИлиСоздатьДокументУстановкаЦенНоменклатуры(Источник,ДатаОстатков,СредняяЦенаЗакупки); 
	Док.Товары.Загрузить(ТаблицаСЦЗ);
	Док.Комментарий = "Создан автоматически "+ТекущаяДата();
	Если Док.Товары.Количество() = 0 Тогда
		Если ТестовыйРежим Тогда
			Сообщить("Для типа цен "+СредняяЦенаЗакупки+" цены остались прежние, документ ""Установка цен номенклатуры"" создавать не нужно."); 
		КонецЕсли;
	Иначе
		Попытка
			Док.Записать(РежимЗаписиДокумента.Проведение);
			Если ТестовыйРежим Тогда 
				Сообщить("Для типа цены "+СредняяЦенаЗакупки+" создан документ "+Док.Ссылка);
			КонецЕсли;
		Исключение
			ТекстОшибки = "Не удалось обновить средние цены закупки. "+ОписаниеОшибки();
			Сообщить (ТекстОшибки);
			ЗаписьЖурналаРегистрации("Расчет средней цены закупки",УровеньЖурналаРегистрации.Ошибка,,Источник,ТекстОшибки,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
			Док.Записать();//просто запишем, чтобы смотрели
		КонецПопытки;
		
		//Теперь ещё установим цены для "дополнительной" номенклатуры (брак или установлен срок годности).
		УстановитьЦеныДляДопНоменклатуры(Док.Ссылка,ДатаОстатков,СредняяЦенаЗакупки,ТестовыйРежим);
	КонецЕсли;
	
	ДокСЦЗ_Машина = ОбновитьТипЦеныСЦЗ_Машина(ДатаОстатков,СписокПредприятийХолдинга,СписокМагазинов_ПлюсОсновнойСклад,СредняяЦенаЗакупки,ТипЦеныСЦЗ_Машина,ВалютаРегламентированногоУчета,ТестовыйРежим,Источник,,Истина);
	
	ДатаОстатков = ДатаОстатков + 1; //добавили 1 секунду потому, что будем менять цену по вкусам, и можем натолкнуться на то, что будут две одинаковые номенклатуры с одним и тем же видом цен, но с разными ценами
	УстановкаЦенПоВсемВкусам(ДатаОстатков,ТипЦеныСЦЗ_Машина,СписокМагазинов_ПлюсОсновнойСклад,ВалютаРегламентированногоУчета,ТестовыйРежим,Источник,,ДокументПроводится);
	
	//Теперь ещё установим цены для "дополнительной" номенклатуры (брак или установлен срок годности).
	УстановитьЦеныДляДопНоменклатуры(ДокСЦЗ_Машина.Ссылка,ДатаОстатков,ТипЦеныСЦЗ_Машина,ТестовыйРежим);
КонецПроцедуры

Функция ОстаткиИДвиженияНоменклатурыДляКоторойНужноДелатьРасчетСреднейЦеныЗакупки(ТекДок,ДатаОстатков,СписокПредприятийХолдинга,СписокМагазинов_ПлюсОсновнойСклад,СредняяЦенаЗакупки,_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен,СписокНоменклатуры,ДокументПроводится)
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура
	//               |ПОМЕСТИТЬ НужнаяНоменклатура
	//               |ИЗ
	//               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	//               |ГДЕ
	//               |	ПоступлениеТоваровУслугТовары.Ссылка = &ТекДок
	//               |	И НЕ ПоступлениеТоваровУслугТовары.Номенклатура.емеЭтоБрак
	//               |	И ПоступлениеТоваровУслугТовары.Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	//               |	И НЕ ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В (&СписокПредприятийХолдинга)
	//               |	И ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер В(&НужныеСклады)
	//               |	И ПоступлениеТоваровУслугТовары.ЦенаИзДокумента > &ПорогЦеныЗакупкиДляРасчетаЦен
	//               |
	//               |ОБЪЕДИНИТЬ ВСЕ
	//               |
	//               |ВЫБРАТЬ
	//               |	Номенклатура.Ссылка
	//               |ИЗ
	//               |	Справочник.Номенклатура КАК Номенклатура
	//               |ГДЕ
	//               |	ВЫБОР
	//               |			КОГДА &ТекДок = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	//               |				ТОГДА Номенклатура.ВидНоменклатуры = &ВидНоменклатурыТовар
	//               |						И НЕ Номенклатура.емеЭтоБрак
	//               |						И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	//               |			ИНАЧЕ ЛОЖЬ
	//               |		КОНЕЦ
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Номенклатура
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	//               |	ПоступлениеТоваровУслугТовары.Количество * ВЫБОР
	//               |		КОГДА ПоступлениеТоваровУслугТовары.Коэффициент = 0
	//               |			ТОГДА 1
	//               |		ИНАЧЕ ПоступлениеТоваровУслугТовары.Коэффициент
	//               |	КОНЕЦ КАК КоличествоВБазовыхЕдиницах,
	//               |	ПоступлениеТоваровУслугТовары.СуммаИзДокумента КАК СуммаВВалютеРегламентированногоУчета,
	//               |	ПоступлениеТоваровУслугТовары.Ссылка КАК Регистратор
	//               |ПОМЕСТИТЬ ДвиженияЗа360Дней
	//               |ИЗ
	//               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	//               |ГДЕ
	//               |	ПоступлениеТоваровУслугТовары.Ссылка.Проведен
	//               |	И НЕ ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В (&СписокПредприятийХолдинга)
	//               |	И ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер.Ссылка В(&НужныеСклады)
	//               |	И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаМинус360Дней И &ДатаОстатков
	//               |	И ПоступлениеТоваровУслугТовары.Номенклатура В
	//               |			(ВЫБРАТЬ
	//               |				НужнаяНоменклатура.Номенклатура
	//               |			ИЗ
	//               |				НужнаяНоменклатура КАК НужнаяНоменклатура)
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Номенклатура
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ДвиженияЗа360Дней.Номенклатура КАК Номенклатура,
	//               |	ДвиженияЗа360Дней.Регистратор,
	//               |	МАКСИМУМ(ДвиженияЗа360Дней.СуммаВВалютеРегламентированногоУчета / ДвиженияЗа360Дней.КоличествоВБазовыхЕдиницах) КАК МаксимальнаяЦенаНоменклатурыПоДокументу
	//               |ПОМЕСТИТЬ ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе
	//               |ИЗ
	//               |	ДвиженияЗа360Дней КАК ДвиженияЗа360Дней
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ДвиженияЗа360Дней.Номенклатура,
	//               |	ДвиженияЗа360Дней.Регистратор
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Номенклатура
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ДвиженияЗа360Дней.Номенклатура КАК Номенклатура,
	//               |	ДвиженияЗа360Дней.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
	//               |	ДвиженияЗа360Дней.Регистратор,
	//               |	ДвиженияЗа360Дней.СуммаВВалютеРегламентированногоУчета / ДвиженияЗа360Дней.КоличествоВБазовыхЕдиницах КАК ЦенаПоДокументу,
	//               |	ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе.МаксимальнаяЦенаНоменклатурыПоДокументу КАК МаксимальнаяЦенаНоменклатурыПоДокументу,
	//               |	ДвиженияЗа360Дней.КоличествоВБазовыхЕдиницах КАК КоличествоВБазовыхЕдиницахПоДокументу,
	//               |	ВЫБОР
	//               |		КОГДА НужнаяНоменклатураСОстатком.КоличествоКонечныйОстаток > 0
	//               |			ТОГДА НужнаяНоменклатураСОстатком.КоличествоКонечныйОстаток
	//               |		ИНАЧЕ 1
	//               |	КОНЕЦ КАК ФактическийОстаток
	//               |ПОМЕСТИТЬ ДанныеПоПоступлениямСФактическимОстаткомИМаксимальнойЦеной
	//               |ИЗ
	//               |	ДвиженияЗа360Дней КАК ДвиженияЗа360Дней
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе КАК ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе
	//               |		ПО ДвиженияЗа360Дней.Номенклатура = ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе.Номенклатура
	//               |			И ДвиженияЗа360Дней.Регистратор = ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе.Регистратор
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
	//               |				,
	//               |				&ДатаОстатков,
	//               |				Период,
	//               |				ДвиженияИГраницыПериода,
	//               |				Номенклатура В
	//               |						(ВЫБРАТЬ
	//               |							НужнаяНоменклатура.Номенклатура
	//               |						ИЗ
	//               |							НужнаяНоменклатура КАК НужнаяНоменклатура)
	//               |					И Склад.Ссылка В (&НужныеСклады)) КАК НужнаяНоменклатураСОстатком
	//               |		ПО ДвиженияЗа360Дней.Номенклатура = НужнаяНоменклатураСОстатком.Номенклатура
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	//               |	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	//               |ПОМЕСТИТЬ ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней
	//               |ИЗ
	//               |	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	//               |ГДЕ
	//               |	ЦеныНоменклатуры.Регистратор ССЫЛКА Документ.УстановкаЦенНоменклатуры
	//               |	И ЦеныНоменклатуры.ТипЦен = &СЦЗ_Артем
	//               |	И ЦеныНоменклатуры.Период МЕЖДУ &ДатаМинус360Дней И &ДатаОстатков
	//               |	И ЦеныНоменклатуры.Номенклатура В
	//               |			(ВЫБРАТЬ
	//               |				НужнаяНоменклатура.Номенклатура
	//               |			ИЗ
	//               |				НужнаяНоменклатура КАК НужнаяНоменклатура)
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ЦеныНоменклатуры.Номенклатура
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Номенклатура,
	//               |	Период
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	//               |	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	//               |	ЦеныНоменклатуры.Цена / ВЫБОР
	//               |		КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент = 0
	//               |			ТОГДА 1
	//               |		ИНАЧЕ ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент
	//               |	КОНЕЦ КАК ЦенаСЦЗ_Артем
	//               |ПОМЕСТИТЬ ЦеныСЦЗ_АртемЗа360Дней
	//               |ИЗ
	//               |	ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней КАК ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	//               |		ПО ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней.Номенклатура = ЦеныНоменклатуры.Номенклатура
	//               |			И ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней.Период = ЦеныНоменклатуры.Период
	//               |ГДЕ
	//               |	ЦеныНоменклатуры.Регистратор ССЫЛКА Документ.УстановкаЦенНоменклатуры
	//               |	И ЦеныНоменклатуры.ТипЦен = &СЦЗ_Артем
	//               |	И ЦеныНоменклатуры.Период МЕЖДУ &ДатаМинус360Дней И &ДатаОстатков
	//               |	И ЦеныНоменклатуры.Номенклатура В
	//               |			(ВЫБРАТЬ
	//               |				НужнаяНоменклатура.Номенклатура
	//               |			ИЗ
	//               |				НужнаяНоменклатура КАК НужнаяНоменклатура)
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ЦеныНоменклатуры.Номенклатура,
	//               |	ЦеныНоменклатуры.Цена / ВЫБОР
	//               |		КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент = 0
	//               |			ТОГДА 1
	//               |		ИНАЧЕ ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент
	//               |	КОНЕЦ
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Номенклатура,
	//               |	Период
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЦеныСЦЗ_АртемЗа360Дней.Номенклатура КАК Номенклатура,
	//               |	ЦеныСЦЗ_АртемЗа360Дней.Период КАК Период,
	//               |	МАКСИМУМ(ТоварыНаСкладахОстаткиИОбороты.Период) КАК ДатаОстатка,
	//               |	ЦеныСЦЗ_АртемЗа360Дней.ЦенаСЦЗ_Артем
	//               |ПОМЕСТИТЬ ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков
	//               |ИЗ
	//               |	ЦеныСЦЗ_АртемЗа360Дней КАК ЦеныСЦЗ_АртемЗа360Дней
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
	//               |				,
	//               |				,
	//               |				Регистратор,
	//               |				ДвиженияИГраницыПериода,
	//               |				Номенклатура В
	//               |					(ВЫБРАТЬ
	//               |						НужнаяНоменклатура.Номенклатура
	//               |					ИЗ
	//               |						НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ТоварыНаСкладахОстаткиИОбороты
	//               |		ПО ЦеныСЦЗ_АртемЗа360Дней.Номенклатура = ТоварыНаСкладахОстаткиИОбороты.Номенклатура
	//               |			И ЦеныСЦЗ_АртемЗа360Дней.Период >= ТоварыНаСкладахОстаткиИОбороты.Период
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ЦеныСЦЗ_АртемЗа360Дней.Номенклатура,
	//               |	ЦеныСЦЗ_АртемЗа360Дней.Период,
	//               |	ЦеныСЦЗ_АртемЗа360Дней.ЦенаСЦЗ_Артем
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Номенклатура,
	//               |	Период
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |	ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Номенклатура,
	//               |	ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Период,
	//               |	ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоНаДатуустановкиЦены,
	//               |	ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.ЦенаСЦЗ_Артем,
	//               |	ЦеныНоменклатуры.Регистратор
	//               |ПОМЕСТИТЬ ДанныеПоСЦЗ_Артем
	//               |ИЗ
	//               |	ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков КАК ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
	//               |				,
	//               |				,
	//               |				Регистратор,
	//               |				ДвиженияИГраницыПериода,
	//               |				Номенклатура В
	//               |					(ВЫБРАТЬ
	//               |						НужнаяНоменклатура.Номенклатура
	//               |					ИЗ
	//               |						НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ТоварыНаСкладахОстаткиИОбороты
	//               |		ПО ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Номенклатура = ТоварыНаСкладахОстаткиИОбороты.Номенклатура
	//               |			И ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.ДатаОстатка = ТоварыНаСкладахОстаткиИОбороты.Период
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	//               |		ПО ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Номенклатура = ЦеныНоменклатуры.Номенклатура
	//               |			И ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Период = ЦеныНоменклатуры.Период
	//               |ГДЕ
	//               |	ЦеныНоменклатуры.Регистратор ССЫЛКА Документ.УстановкаЦенНоменклатуры
	//               |	И ЦеныНоменклатуры.ТипЦен = &СЦЗ_Артем
	//               |	И ЦеныНоменклатуры.Период МЕЖДУ &ДатаМинус360Дней И &ДатаОстатков
	//               |	И ЦеныНоменклатуры.Номенклатура В
	//               |			(ВЫБРАТЬ
	//               |				НужнаяНоменклатура.Номенклатура
	//               |			ИЗ
	//               |				НужнаяНоменклатура КАК НужнаяНоменклатура)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ДанныеПоПоступлениям.Номенклатура КАК Номенклатура,
	//               |	ДанныеПоПоступлениям.Регистратор,
	//               |	ДанныеПоПоступлениям.Регистратор.Дата КАК РегистраторДата,
	//               |	ДанныеПоПоступлениям.ЦенаПоДокументу,
	//               |	ДанныеПоПоступлениям.МаксимальнаяЦенаНоменклатурыПоДокументу КАК МаксимальнаяЦенаНоменклатурыПоДокументу,
	//               |	ДанныеПоПоступлениям.КоличествоВБазовыхЕдиницахПоДокументу КАК Количество,
	//               |	ДанныеПоПоступлениям.ЕдиницаХраненияОстатков,
	//               |	ДанныеПоПоступлениям.ФактическийОстаток
	//               |ПОМЕСТИТЬ ГотоваяТаблицаБезТекущихЦен
	//               |ИЗ
	//               |	ДанныеПоПоступлениямСФактическимОстаткомИМаксимальнойЦеной КАК ДанныеПоПоступлениям
	//               |
	//               |ОБЪЕДИНИТЬ ВСЕ
	//               |
	//               |ВЫБРАТЬ
	//               |	ДанныеПоСЦЗ_Артем.Номенклатура,
	//               |	ДанныеПоСЦЗ_Артем.Регистратор,
	//               |	ДанныеПоСЦЗ_Артем.Регистратор.Дата,
	//               |	ДанныеПоСЦЗ_Артем.ЦенаСЦЗ_Артем,
	//               |	ДанныеПоСЦЗ_Артем.ЦенаСЦЗ_Артем,
	//               |	ДанныеПоСЦЗ_Артем.КоличествоНаДатуустановкиЦены,
	//               |	ДанныеПоСЦЗ_Артем.Номенклатура.ЕдиницаХраненияОстатков,
	//               |	ДанныеПоСЦЗ_Артем.КоличествоНаДатуустановкиЦены
	//               |ИЗ
	//               |	ДанныеПоСЦЗ_Артем КАК ДанныеПоСЦЗ_Артем
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ГотоваяТаблицаБезТекущихЦен.Номенклатура КАК Номенклатура,
	//               |	ГотоваяТаблицаБезТекущихЦен.Регистратор,
	//               |	ГотоваяТаблицаБезТекущихЦен.РегистраторДата КАК РегистраторДата,
	//               |	ГотоваяТаблицаБезТекущихЦен.ЦенаПоДокументу,
	//               |	ГотоваяТаблицаБезТекущихЦен.МаксимальнаяЦенаНоменклатурыПоДокументу,
	//               |	ГотоваяТаблицаБезТекущихЦен.Количество,
	//               |	ГотоваяТаблицаБезТекущихЦен.ЕдиницаХраненияОстатков,
	//               |	ГотоваяТаблицаБезТекущихЦен.ФактическийОстаток,
	//               |	естьNULL(ЦеныНоменклатурыСрезПоследних.Цена,0) КАК ТекущаяЦена
	//               |ИЗ
	//               |	ГотоваяТаблицаБезТекущихЦен КАК ГотоваяТаблицаБезТекущихЦен
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаОстатков, ТипЦен = &СредняяЦенаЗакупки) КАК ЦеныНоменклатурыСрезПоследних
	//               |		ПО ГотоваяТаблицаБезТекущихЦен.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	Номенклатура,
	//               |	РегистраторДата УБЫВ";
	

	////НМА 28.12.17 по запросу Шляхова Александра должен быть весь товар из номенклатурной группы >>
	//Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	Номенклатура.НоменклатурнаяГруппа
	//|ПОМЕСТИТЬ СписокНоменклатурныхГрупп
	//|ИЗ
	//|	Справочник.Номенклатура КАК Номенклатура
	//|ГДЕ
	//|	ВЫБОР
	//|			КОГДА &ВсяНоменклатура
	//|				ТОГДА Номенклатура.ВидНоменклатуры = &ВидНоменклатурыТовар
	//|						И НЕ Номенклатура.емеЭтоБрак
	//|						И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	//|			ИНАЧЕ Номенклатура.Ссылка В (&СписокНоменклатурыДокумента)
	//|		КОНЕЦ
	//|	И НЕ Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	//|;
	//|ВЫБРАТЬ
	////НМА 28.12.17 по запросу Шляхова Александра должен быть весь товар из номенклатурной группы <<
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ НужнаяНоменклатура
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка = &ТекДок
	               |	И НЕ ПоступлениеТоваровУслугТовары.Номенклатура.емеЭтоБрак
	               |	И ПоступлениеТоваровУслугТовары.Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	               |	И НЕ ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В (&СписокПредприятийХолдинга)
	               |	И ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер В(&НужныеСклады)
	               |	И ПоступлениеТоваровУслугТовары.ЦенаИзДокумента > &ПорогЦеныЗакупкиДляРасчетаЦен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Номенклатура.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ВсяНоменклатура
	               |					И &ТекДок = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	               |				ТОГДА Номенклатура.ВидНоменклатуры = &ВидНоменклатурыТовар
	               |						И НЕ Номенклатура.емеЭтоБрак
	               |						И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	               |			КОГДА НЕ &ВсяНоменклатура
	               |				ТОГДА Номенклатура.Ссылка В (&СписокНоменклатуры)
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ
				   ////НМА 28.12.17 по запросу Шляхова Александра должен быть весь товар из номенклатурной группы >>
				   //|	И Номенклатура.НоменклатурнаяГруппа В
				   //|			(ВЫБРАТЬ
				   //|				СписокНоменклатурныхГрупп.НоменклатурнаяГруппа
				   //|			ИЗ
				   //|				СписокНоменклатурныхГрупп КАК СписокНоменклатурныхГрупп)
				   ////НМА 28.12.17 по запросу Шляхова Александра должен быть весь товар из номенклатурной группы <<
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.Количество * ВЫБОР
	               |		КОГДА ПоступлениеТоваровУслугТовары.Коэффициент = 0
	               |			ТОГДА 1
	               |		ИНАЧЕ ПоступлениеТоваровУслугТовары.Коэффициент
	               |	КОНЕЦ КАК КоличествоВБазовыхЕдиницах,
	               |	ПоступлениеТоваровУслугТовары.СуммаИзДокумента КАК СуммаВВалютеРегламентированногоУчета,
	               |	ПоступлениеТоваровУслугТовары.Ссылка КАК Регистратор
	               |ПОМЕСТИТЬ ДвиженияЗа360Дней
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Проведен
	               |	И НЕ ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В (&СписокПредприятийХолдинга)
	               |	И ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер.Ссылка В(&НужныеСклады)
	               |	И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаМинус360Дней И &ДатаОстатков
	               |	И ПоступлениеТоваровУслугТовары.Номенклатура В
	               |			(ВЫБРАТЬ
	               |				НужнаяНоменклатура.Номенклатура
	               |			ИЗ
	               |				НужнаяНоменклатура КАК НужнаяНоменклатура)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДвиженияЗа360Дней.Номенклатура КАК Номенклатура,
	               |	ДвиженияЗа360Дней.Регистратор,
	               |	МАКСИМУМ(ДвиженияЗа360Дней.СуммаВВалютеРегламентированногоУчета / ДвиженияЗа360Дней.КоличествоВБазовыхЕдиницах) КАК МаксимальнаяЦенаНоменклатурыПоДокументу
	               |ПОМЕСТИТЬ ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе
	               |ИЗ
	               |	ДвиженияЗа360Дней КАК ДвиженияЗа360Дней
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДвиженияЗа360Дней.Номенклатура,
	               |	ДвиженияЗа360Дней.Регистратор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДвиженияЗа360Дней.Номенклатура КАК Номенклатура,
	               |	ДвиженияЗа360Дней.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
	               |	ДвиженияЗа360Дней.Регистратор,
	               |	ДвиженияЗа360Дней.СуммаВВалютеРегламентированногоУчета / ДвиженияЗа360Дней.КоличествоВБазовыхЕдиницах КАК ЦенаПоДокументу,
	               |	ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе.МаксимальнаяЦенаНоменклатурыПоДокументу КАК МаксимальнаяЦенаНоменклатурыПоДокументу,
	               |	ДвиженияЗа360Дней.КоличествоВБазовыхЕдиницах КАК КоличествоВБазовыхЕдиницахПоДокументу,
				   //НМА 08.02.18 Отключил учет без минусов, т.к. учитываем с минусами >> 
				   //|	ВЫБОР
				   //|		КОГДА НужнаяНоменклатураСОстатком.КоличествоКонечныйОстаток > 0
				   //|			ТОГДА НужнаяНоменклатураСОстатком.КоличествоКонечныйОстаток
				   //|		ИНАЧЕ 1
				   //|	КОНЕЦ КАК ФактическийОстаток
				   |	ЕСТЬNULL(НужнаяНоменклатураСОстатком.КоличествоКонечныйОстаток, 0) КАК ФактическийОстаток
				   //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусами <<
	               |ПОМЕСТИТЬ ДанныеПоПоступлениямСФактическимОстаткомИМаксимальнойЦеной
	               |ИЗ
	               |	ДвиженияЗа360Дней КАК ДвиженияЗа360Дней
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе КАК ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе
	               |		ПО ДвиженияЗа360Дней.Номенклатура = ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе.Номенклатура
	               |			И ДвиженияЗа360Дней.Регистратор = ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе.Регистратор
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
	               |				,
	               |				&ДатаОстатков, 
		           |				Период,
	               |				ДвиженияИГраницыПериода,
	               |				Номенклатура В
	               |						(ВЫБРАТЬ
	               |							НужнаяНоменклатура.Номенклатура
	               |						ИЗ
	               |							НужнаяНоменклатура КАК НужнаяНоменклатура)
	               |					И Склад.Ссылка В (&НужныеСклады)) КАК НужнаяНоменклатураСОстатком
	               |		ПО ДвиженияЗа360Дней.Номенклатура = НужнаяНоменклатураСОстатком.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	               |	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	               |ПОМЕСТИТЬ ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |ГДЕ
	               |	ЦеныНоменклатуры.Регистратор ССЫЛКА Документ.УстановкаЦенНоменклатуры
	               |	И ЦеныНоменклатуры.ТипЦен = &СЦЗ_Артем
	               |	И ЦеныНоменклатуры.Период МЕЖДУ &ДатаМинус360Дней И &ДатаОстатков
	               |	И ЦеныНоменклатуры.Номенклатура В
	               |			(ВЫБРАТЬ
	               |				НужнаяНоменклатура.Номенклатура
	               |			ИЗ
	               |				НужнаяНоменклатура КАК НужнаяНоменклатура)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЦеныНоменклатуры.Номенклатура
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	               |	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	               |	ЦеныНоменклатуры.Цена / ВЫБОР
	               |		КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент = 0
	               |			ТОГДА 1
	               |		ИНАЧЕ ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент
	               |	КОНЕЦ КАК ЦенаСЦЗ_Артем
	               |ПОМЕСТИТЬ ЦеныСЦЗ_АртемЗа360Дней
	               |ИЗ
	               |	ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней КАК ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |		ПО ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней.Номенклатура = ЦеныНоменклатуры.Номенклатура
	               |			И ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней.Период = ЦеныНоменклатуры.Период
	               |ГДЕ
	               |	ЦеныНоменклатуры.Регистратор ССЫЛКА Документ.УстановкаЦенНоменклатуры
	               |	И ЦеныНоменклатуры.ТипЦен = &СЦЗ_Артем
	               |	И ЦеныНоменклатуры.Период МЕЖДУ &ДатаМинус360Дней И &ДатаОстатков
	               |	И ЦеныНоменклатуры.Номенклатура В
	               |			(ВЫБРАТЬ
	               |				НужнаяНоменклатура.Номенклатура
	               |			ИЗ
	               |				НужнаяНоменклатура КАК НужнаяНоменклатура)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЦеныНоменклатуры.Номенклатура,
	               |	ЦеныНоменклатуры.Цена / ВЫБОР
	               |		КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент = 0
	               |			ТОГДА 1
	               |		ИНАЧЕ ЦеныНоменклатуры.ЕдиницаИзмерения.Коэффициент
	               |	КОНЕЦ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныСЦЗ_АртемЗа360Дней.Номенклатура КАК Номенклатура,
	               |	ЦеныСЦЗ_АртемЗа360Дней.Период КАК Период,
	               |	МАКСИМУМ(ТоварыНаСкладахОстаткиИОбороты.Период) КАК ДатаОстатка,
	               |	ЦеныСЦЗ_АртемЗа360Дней.ЦенаСЦЗ_Артем
	               |ПОМЕСТИТЬ ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков
	               |ИЗ
	               |	ЦеныСЦЗ_АртемЗа360Дней КАК ЦеныСЦЗ_АртемЗа360Дней
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
	               |				,
	               |				,
	               |				Регистратор,
	               |				ДвиженияИГраницыПериода,
	               |				Номенклатура В
	               |					(ВЫБРАТЬ
	               |						НужнаяНоменклатура.Номенклатура
	               |					ИЗ
	               |						НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ТоварыНаСкладахОстаткиИОбороты
	               |		ПО ЦеныСЦЗ_АртемЗа360Дней.Номенклатура = ТоварыНаСкладахОстаткиИОбороты.Номенклатура
	               |			И ЦеныСЦЗ_АртемЗа360Дней.Период >= ТоварыНаСкладахОстаткиИОбороты.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЦеныСЦЗ_АртемЗа360Дней.Номенклатура,
	               |	ЦеныСЦЗ_АртемЗа360Дней.Период,
	               |	ЦеныСЦЗ_АртемЗа360Дней.ЦенаСЦЗ_Артем
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Номенклатура,
	               |	ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Период,
	               |	ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоНаДатуустановкиЦены,
	               |	ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.ЦенаСЦЗ_Артем,
	               |	ЦеныНоменклатуры.Регистратор
	               |ПОМЕСТИТЬ ДанныеПоСЦЗ_Артем
	               |ИЗ
	               |	ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков КАК ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
	               |				,
	               |				,
	               |				Регистратор,
	               |				ДвиженияИГраницыПериода,
	               |				Номенклатура В
	               |					(ВЫБРАТЬ
	               |						НужнаяНоменклатура.Номенклатура
	               |					ИЗ
	               |						НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ТоварыНаСкладахОстаткиИОбороты
	               |		ПО ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Номенклатура = ТоварыНаСкладахОстаткиИОбороты.Номенклатура
	               |			И ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.ДатаОстатка = ТоварыНаСкладахОстаткиИОбороты.Период
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |		ПО ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Номенклатура = ЦеныНоменклатуры.Номенклатура
	               |			И ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков.Период = ЦеныНоменклатуры.Период
	               |ГДЕ
	               |	ЦеныНоменклатуры.Регистратор ССЫЛКА Документ.УстановкаЦенНоменклатуры
	               |	И ЦеныНоменклатуры.ТипЦен = &СЦЗ_Артем
	               |	И ЦеныНоменклатуры.Период МЕЖДУ &ДатаМинус360Дней И &ДатаОстатков
	               |	И ЦеныНоменклатуры.Номенклатура В
	               |			(ВЫБРАТЬ
	               |				НужнаяНоменклатура.Номенклатура
	               |			ИЗ
	               |				НужнаяНоменклатура КАК НужнаяНоменклатура)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеПоПоступлениям.Номенклатура КАК Номенклатура,
	               |	ДанныеПоПоступлениям.Регистратор,
	               |	ДанныеПоПоступлениям.Регистратор.Дата КАК РегистраторДата,
	               |	ДанныеПоПоступлениям.ЦенаПоДокументу,
	               |	ДанныеПоПоступлениям.МаксимальнаяЦенаНоменклатурыПоДокументу КАК МаксимальнаяЦенаНоменклатурыПоДокументу,
	               |	ДанныеПоПоступлениям.КоличествоВБазовыхЕдиницахПоДокументу КАК Количество,
	               |	ДанныеПоПоступлениям.ЕдиницаХраненияОстатков,
	               |	ДанныеПоПоступлениям.ФактическийОстаток
	               |ПОМЕСТИТЬ ГотоваяТаблицаБезТекущихЦен
	               |ИЗ
	               |	ДанныеПоПоступлениямСФактическимОстаткомИМаксимальнойЦеной КАК ДанныеПоПоступлениям
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ДанныеПоСЦЗ_Артем.Номенклатура,
	               |	ДанныеПоСЦЗ_Артем.Регистратор,
	               |	ДанныеПоСЦЗ_Артем.Регистратор.Дата,
	               |	ДанныеПоСЦЗ_Артем.ЦенаСЦЗ_Артем,
	               |	ДанныеПоСЦЗ_Артем.ЦенаСЦЗ_Артем,
	               |	ДанныеПоСЦЗ_Артем.КоличествоНаДатуустановкиЦены,
	               |	ДанныеПоСЦЗ_Артем.Номенклатура.ЕдиницаХраненияОстатков,
	               |	ДанныеПоСЦЗ_Артем.КоличествоНаДатуустановкиЦены
	               |ИЗ
	               |	ДанныеПоСЦЗ_Артем КАК ДанныеПоСЦЗ_Артем
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГотоваяТаблицаБезТекущихЦен.Номенклатура КАК Номенклатура,
	               |	ГотоваяТаблицаБезТекущихЦен.Регистратор,
	               |	ГотоваяТаблицаБезТекущихЦен.РегистраторДата КАК РегистраторДата,
	               |	ГотоваяТаблицаБезТекущихЦен.ЦенаПоДокументу,
	               |	ГотоваяТаблицаБезТекущихЦен.МаксимальнаяЦенаНоменклатурыПоДокументу,
	               |	ГотоваяТаблицаБезТекущихЦен.Количество,
	               |	ГотоваяТаблицаБезТекущихЦен.ЕдиницаХраненияОстатков,
	               |	ГотоваяТаблицаБезТекущихЦен.ФактическийОстаток,
	               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ТекущаяЦена
	               |ИЗ
	               |	ГотоваяТаблицаБезТекущихЦен КАК ГотоваяТаблицаБезТекущихЦен
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаОстатков, ТипЦен = &СредняяЦенаЗакупки) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО ГотоваяТаблицаБезТекущихЦен.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура,
	               |	РегистраторДата УБЫВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ НужнаяНоменклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ДвиженияЗа360Дней
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ДвиженияЗа360ДнейМаксимальныеЦеныОднойНоменкатурыВОдномДокументе
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ДанныеПоПоступлениямСФактическимОстаткомИМаксимальнойЦеной
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ДатыУстановкиЦеныСЦЗ_АртемЗа360Дней
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ЦеныСЦЗ_АртемЗа360Дней
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ЦеныСЦЗ_АртемЗа360ДнейИДатыОстатков
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ДанныеПоСЦЗ_Артем
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ГотоваяТаблицаБезТекущихЦен";

	//Примечание. Ставим в колонку "КоличествоОстаток" столько, сколько есть остаток на дату расчета.
	//Но для ДанныеПоСЦЗ_Артем ставим весь остаток на дату установки цены СЦЗ_Артем, ибо нам по алгоритму не надо смотреть более поздние документы.
	Запрос.УстановитьПараметр("ТекДок",?(ТекДок=Неопределено,Документы.ПоступлениеТоваровУслуг.ПустаяСсылка(),ТекДок));
	
	Запрос.УстановитьПараметр("ВсяНоменклатура",?(ЗначениеЗаполнено(СписокНоменклатуры),Ложь,Истина));//01.11.2017, Юра
	Запрос.УстановитьПараметр("СписокНоменклатуры",?(ЗначениеЗаполнено(СписокНоменклатуры),СписокНоменклатуры,Новый СписокЗначений));//01.11.2017, Юра
	//НМА 02.02.18 Задача Шляхова Александра (для оперативного проведения) >>
	Если ?(ТекДок=Неопределено,Дата(1, 1, 1),ТекДок.Дата) > ТекущаяДата() Тогда //НМА 02.02.18 Задача Шляхова Александра (при оперативном проведении документа)
		ДатаОстатков = ТекДок.Дата; //НМА 02.02.18 Задача Шляхова Александра (для оперативного проведения)
	Иначе //НМА 02.02.18 при неоперативном проведении документа
		ДатаОстатков = ТекущаяДата(); //НМА 02.02.18 Задача Шляхова Александра (для неоперативного проведения) 
	КонецЕсли;
	//НМА 02.02.18 Задача Шляхова Александра (для оперативного проведения) <<
	Запрос.УстановитьПараметр("ДатаОстатков",ДатаОстатков);
	Запрос.УстановитьПараметр("ДатаМинус360Дней", ДатаОстатков - 360*3600*24);
	Запрос.УстановитьПараметр("ВидНоменклатурыТовар",Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товар"));
	Запрос.УстановитьПараметр("СписокПредприятийХолдинга",СписокПредприятийХолдинга);
	Запрос.УстановитьПараметр("НужныеСклады",СписокМагазинов_ПлюсОсновнойСклад);
	Запрос.УстановитьПараметр("СЦЗ_Артем",Справочники.ТипыЦенНоменклатуры.СЦЗ_Артем);
	Запрос.УстановитьПараметр("ПорогЦеныЗакупкиДляРасчетаЦен",_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен);//09.10.2017, Юра
	Запрос.УстановитьПараметр("СредняяЦенаЗакупки",СредняяЦенаЗакупки);//25.09.2017, Юра
	
	Запрос.УстановитьПараметр("СписокНоменклатурыДокумента",ТекДок.Товары.ВыгрузитьКолонку("Номенклатура")); //НМА 28.12.17
	
	//Рез = Запрос.Выполнить();
	//РезТЗ = Рез.Выгрузить();
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

//30.08.2017, Юра
Процедура ОбновитьТипыЦенОсновной(Источник,_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен,ТестовыйРежим) 
	//было до 03.11.2017, Юра
	////20.09.2017, Юра
	//ТабНоменклатурыДокумента = Источник.Товары.Выгрузить(,"Номенклатура,Количество,Коэффициент,Сумма,СуммаИзДокумента");
	//ТабНоменклатурыДокумента.Свернуть("Номенклатура,Коэффициент","Количество,Сумма,СуммаИзДокумента");
	//
	//ВалютаДокумента = Источник.ВалютаДокумента;
	//СуммаВключаетНДС = Источник.СуммаВключаетНДС;
	//НаименованиеТипаЦен = "Основной" + ?(ВалютаДокумента.Код = "840","$","") + ?(ВалютаДокумента.Код = "978","EUR","");
	//ТипЦены = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию(НаименованиеТипаЦен,Истина);
	//
	////25.09.2017, Юра
	////Определим текущие цены:
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	//			   
	//			   //Текущие цены будем получать в минимальной единице измерения 31.10.2017, Юра
	//               //|	ЦеныНоменклатурыСрезПоследних.Цена
	//			   |	Выразить(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК Число(15,2)) КАК Цена
	//			   
	//               |ИЗ
	//               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	//               |			&ДатаДок,
	//               |			Номенклатура В (&СписокНоменклатуры)
	//               |				И ТипЦен = &ТипЦены) КАК ЦеныНоменклатурыСрезПоследних";
	//			   
	//Запрос.УстановитьПараметр("ДатаДок",Источник.Дата);
	//Запрос.УстановитьПараметр("ТипЦены",ТипЦены);
	//Запрос.УстановитьПараметр("СписокНоменклатуры", ТабНоменклатурыДокумента.ВыгрузитьКолонку("Номенклатура"));
	//ТекущиеЦены = Запрос.Выполнить().Выгрузить();
	//	
	////Результат поместим в новый документ УстановкаЦенНоменклатуры:
	//Док = НайтиИлиСоздатьДокументУстановкаЦенНоменклатуры(Источник,Источник.Дата,ТипЦены);
	//Док.Комментарий = "Создан автоматически "+ТекущаяДата();
	//
	//Для Каждого Строка Из ТабНоменклатурыДокумента Цикл //Источник.Товары Цикл //20.09.2017, Юра
	//	КоличествоВБазовыхЕдиницах = Строка.Количество*?(Строка.Коэффициент=0,1,Строка.Коэффициент);
	//	
	//	//Если Строка.Сумма > _5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен Тогда//22.09.2017, Юра
	//	Если Строка.СуммаИзДокумента/КоличествоВБазовыхЕдиницах > _5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен Тогда//22.09.2017, Юра
	//		//так, конечно, нельзя, но заказчик трубует ... потом исправлять будем 18.09.2017, Юра
	//		//СуммаВВалютеДокумента = (Строка.Сумма + Строка.СуммаНДС * ?(СуммаВключаетНДС,0,1));
	//		СуммаВВалютеДокумента = Строка.СуммаИзДокумента/Источник.КратностьВзаиморасчетов/Источник.КурсВзаиморасчетов;
	//		НоваяЦена = Окр(СуммаВВалютеДокумента / КоличествоВБазовыхЕдиницах,2); //Строка.Цена + Строка.СуммаНДС * ?(СуммаВключаетНДС,0,1);
	//			
	//		СтрокиТекЦен = ТекущиеЦены.НайтиСтроки(Новый Структура("Номенклатура",Строка.Номенклатура));
	//		Если СтрокиТекЦен.Количество() = 0 или СтрокиТекЦен.Получить(0).Цена <> НоваяЦена Тогда
	//			НС = Док.Товары.Добавить();
	//			НС.Номенклатура = Строка.Номенклатура;
	//			НС.Цена = НоваяЦена;
	//			НС.ТипЦен = ТипЦены;
	//			НС.Валюта = ВалютаДокумента;
	//			НС.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаХраненияОстатков;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
	
	//Если Док.Товары.Количество() = 0 Тогда
	//	Если ТестовыйРежим Тогда
	//		Сообщить("Для типа цен "+ТипЦены+" цены остались прежние, документ ""Установка цен номенклатуры"" создавать не нужно."); 
	//	КонецЕсли;
	//Иначе
	//	Попытка
	//		Док.Записать(РежимЗаписиДокумента.Проведение);
	//		Если ТестовыйРежим Тогда 
	//			Сообщить("Для типа цены "+ТипЦены+" создан документ "+Док.Ссылка);
	//		КонецЕсли;
	//	Исключение
	//		ТекстОшибки = "Не удалось обновить основную цену. "+ОписаниеОшибки();
	//		Сообщить (ТекстОшибки);
	//		ЗаписьЖурналаРегистрации("Расчет основной цены",УровеньЖурналаРегистрации.Ошибка,,Источник,ТекстОшибки,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
	//		
	//		Док.Записать();//просто запишем, чтобы смотрели
	//	КонецПопытки;
	//КонецЕсли;
	
	//Стало после 03.11.2017, Юра
	ВалютаДокумента = Источник.ВалютаДокумента;
	СуммаВключаетНДС = Источник.СуммаВключаетНДС;
	//***{+Добавления}*** Тасмаджиев 29/11/2018// ->>
	Если ВалютаДокумента.Код = "840" ИЛИ ВалютаДокумента.Код = "978" Тогда
		//***{-Добавления}*** Тасмаджиев 29/11/2018// <<-
		
		НаименованиеТипаЦен = "Основной" + ?(ВалютаДокумента.Код = "840","$","") + ?(ВалютаДокумента.Код = "978","EUR","");
		ТипЦены = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию(НаименованиеТипаЦен,Истина);
		
		//Результат поместим в новый документ УстановкаЦенНоменклатуры:
		Док = НайтиИлиСоздатьДокументУстановкаЦенНоменклатуры(Источник,Источник.Дата,ТипЦены);
		Док.Комментарий = "Создан автоматически "+ТекущаяДата();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПоступлениеТоваровУслугТовары.Номенклатура,
		|	МАКСИМУМ(ПоступлениеТоваровУслугТовары.ЦенаИзДокумента) КАК ЦенаИзДокумента
		|ПОМЕСТИТЬ НоменклатураСМаксимальнойЦеной
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровУслугТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураСМаксимальнойЦеной.Номенклатура КАК Номенклатура,
		//|	НоменклатураСМаксимальнойЦеной.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СуммаИзДокумента, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Ссылка.КурсВзаиморасчетов, 1) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Ссылка.КратностьВзаиморасчетов, 1) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Количество, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Коэффициент, 1) КАК ЧИСЛО(15, 2)) КАК НоваяЦена,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)) КАК ТекущаяЦена
		|ИЗ
		|	НоменклатураСМаксимальнойЦеной КАК НоменклатураСМаксимальнойЦеной
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|		ПО НоменклатураСМаксимальнойЦеной.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура
		|			И НоменклатураСМаксимальнойЦеной.ЦенаИзДокумента = ПоступлениеТоваровУслугТовары.ЦенаИзДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаДок, ТипЦен = &ТипЦены) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО НоменклатураСМаксимальнойЦеной.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|ГДЕ
		|	ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
		|	И ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СуммаИзДокумента, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Количество, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Коэффициент, 1) > &_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен" ;
		
		//|	ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Количество, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Коэффициент, 1) КАК КоличествоВБазовыхЕдиницах,
		//|	ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СуммаИзДокумента, 0) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Ссылка.КурсВзаиморасчетов, 1) / ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Ссылка.КратностьВзаиморасчетов, 1) КАК СуммаВВалютеДокумента,
		
		Запрос.УстановитьПараметр("_5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен", _5ЛБ_ПорогЦеныЗакупкиДляРасчетаЦен);
		Запрос.УстановитьПараметр("Ссылка", Источник);
		Запрос.УстановитьПараметр("ДатаДок",Источник.Дата);
		Запрос.УстановитьПараметр("ТипЦены",ТипЦены);
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.НоваяЦена <> ВыборкаДетальныеЗаписи.ТекущаяЦена Тогда
				НС = Док.Товары.Добавить();
				НС.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				ЕдИзмИКоэффициент = ЕдИзмИКоэффициент(ВыборкаДетальныеЗаписи.Номенклатура);//03.11.2017, Юра
				НС.Цена = ВыборкаДетальныеЗаписи.НоваяЦена * ЕдИзмИКоэффициент.Коэффициент;
				НС.ЕдиницаИзмерения = ЕдИзмИКоэффициент.ЕдИзм;
				НС.ТипЦен = ТипЦены;
				НС.Валюта = ВалютаДокумента;
				
			КонецЕсли;
		КонецЦикла;
		
		Если Док.Товары.Количество() = 0 Тогда
			Если ТестовыйРежим Тогда
				Сообщить("Для типа цен "+ТипЦены+" цены остались прежние, документ ""Установка цен номенклатуры"" создавать не нужно."); 
			КонецЕсли;
		Иначе
			Попытка
				Док.Записать(РежимЗаписиДокумента.Проведение);
				Если ТестовыйРежим Тогда 
					Сообщить("Для типа цены "+ТипЦены+" создан документ "+Док.Ссылка);
				КонецЕсли;
			Исключение
				ТекстОшибки = "Не удалось обновить основную цену. "+ОписаниеОшибки();
				Сообщить (ТекстОшибки);
				ЗаписьЖурналаРегистрации("Расчет основной цены",УровеньЖурналаРегистрации.Ошибка,,Источник,ТекстОшибки,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
				
				Док.Записать();//просто запишем, чтобы смотрели
			КонецПопытки;
		КонецЕсли;
		
		//***{+Добавления}*** Тасмаджиев 29/11/2018// ->>
	КонецЕсли;
	//***{-Добавления}*** Тасмаджиев 29/11/2018// <<-
КонецПроцедуры

////20.09.2017, Юра
//Процедура УстановитьТоварныйКурс(Источник,ВалютаРегламентированногоУчета,ТестовыйРежим=Ложь)  
//	//Источник = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент().Ссылка;
//	
//	ТабНоменклатурыДокумента = Источник.Товары.Выгрузить(,"Номенклатура");
//	ТабНоменклатурыДокумента.Свернуть("Номенклатура");
//	
//	ВалютаДокумента = Источник.ВалютаДокумента;
//	КурсВалютыДокументаПоЦБ = КурсВалютыПоЦБ(ВалютаДокумента,Источник.Дата);
//	Доллар = Справочники.Валюты.НайтиПоКоду("840"); //USD
//	КурсДоллараПоЦБ = КурсВалютыПоЦБ(Доллар,Источник.Дата);
//	Если НЕ ВалютаДокумента = ВалютаРегламентированногоУчета Тогда
//		СписокНоменклатуры = ТабНоменклатурыДокумента.ВыгрузитьКолонку("Номенклатура");
//		
//		//25.09.2017, Юра
//		//Определим текущий товарный курс:
//		Запрос = Новый Запрос;
//		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
//		               |	КурсоваяНаценкаСрезПоследних.Номенклатура,
//		               |	КурсоваяНаценкаСрезПоследних.Валюта,
//		               |	КурсоваяНаценкаСрезПоследних.ТоварныйКурс
//		               |ИЗ
//		               |	РегистрСведений.КурсоваяНаценка.СрезПоследних(&ДатаДокумента, Номенклатура В (&СписокНоменклатуры)) КАК КурсоваяНаценкаСрезПоследних";
//		Запрос.УстановитьПараметр("ДатаДокумента",Источник.Дата);
//		Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
//		ТекущийТоварныйКурс = Запрос.Выполнить().Выгрузить();
//				
//		//Сначала определим в каких валютах поступала номенклатура за последние 360 дней
//		Запрос = Новый Запрос;
//		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
//		               |	ПоступлениеТоваровУслугТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
//		               |	ПоступлениеТоваровУслугТовары.Номенклатура
//		               |ИЗ
//		               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
//		               |ГДЕ
//		               |	ПоступлениеТоваровУслугТовары.Ссылка.Проведен
//		               |	И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаМинус360Дней И &ДатаДокумента
//		               |	И ПоступлениеТоваровУслугТовары.Номенклатура В(&СписокНоменклатуры)";
//		Запрос.УстановитьПараметр("ДатаДокумента",Источник.Дата);
//		Запрос.УстановитьПараметр("ДатаМинус360Дней", Источник.Дата - 360*3600*24);
//		Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
//		НоменклатураСВалютойПоступленияЗа360Дней = Запрос.Выполнить().Выгрузить();
//		
//		Для Каждого Строка Из ТабНоменклатурыДокумента Цикл //Источник.Товары Цикл
//			ТоварныйКурс = 0;
//			Валюта = Справочники.Валюты.ПустаяСсылка();
//			
//			ВалютыПоступлений = НоменклатураСВалютойПоступленияЗа360Дней.НайтиСтроки(Новый Структура("Номенклатура",Строка.Номенклатура));
//			КоличествоВалют = ВалютыПоступлений.Количество();
//			БылиРубли = НоменклатураСВалютойПоступленияЗа360Дней.НайтиСтроки(Новый Структура("Номенклатура,ВалютаДокумента",Строка.Номенклатура,ВалютаРегламентированногоУчета)).Количество() > 0;
//			
//			Если КоличествоВалют = 1 ИЛИ (КоличествоВалют = 2 И БылиРубли) Тогда
//				ТоварныйКурс = Источник.КратностьВзаиморасчетов * Источник.КурсВзаиморасчетов;
//				Валюта = ВалютаДокумента;
//			Иначе
//				//то есть продавали как минимум в 2-х разных валютах-не рублях
//				//в этом случае заказчик требует привести всё к долларам
//				Если ВалютаДокумента = Доллар Тогда
//					ТоварныйКурс = Источник.КратностьВзаиморасчетов * Источник.КурсВзаиморасчетов;
//				Иначе
//					ТоварныйКурс = Источник.КратностьВзаиморасчетов * Источник.КурсВзаиморасчетов * КурсДоллараПоЦБ / КурсВалютыДокументаПоЦБ;
//				КонецЕсли;
//				Валюта = Доллар;
//			КонецЕсли;
//			
//			СтрокиТекТовКурса = ТекущийТоварныйКурс.НайтиСтроки(Новый Структура("Номенклатура,Валюта",Строка.Номенклатура,Валюта));
//			Если СтрокиТекТовКурса.Количество() = 0 или СтрокиТекТовКурса.Получить(0).ТоварныйКурс <> ТоварныйКурс Тогда
//				//Записываем товарный курс в регистр:
//				МенЗап = РегистрыСведений.КурсоваяНаценка.СоздатьМенеджерЗаписи();
//				МенЗап.Период = Источник.Дата;
//				МенЗап.Номенклатура = Строка.Номенклатура;
//				МенЗап.Валюта = Валюта;
//				МенЗап.Курс = КурсВалютыДокументаПоЦБ;
//				МенЗап.ТоварныйКурс = ТоварныйКурс;
//				МенЗап.Наценка = 0;
//				//МенЗап.Регистратор
//				МенЗап.Записать();
//				Если ТестовыйРежим Тогда 
//					Сообщить("Для номенклатуры "+Строка.Номенклатура+" установлен товарный курс = "+ТоварныйКурс);
//				КонецЕсли;
//			КонецЕсли;
//		КонецЦикла;
//	КонецЕсли;
//КонецПроцедуры

//18.10.2017, Юра
Процедура УстановитьТоварныйКурсПоПоступлению(Источник,ВалютаРегламентированногоУчета,ТестовыйРежим=Ложь) Экспорт  
	//Источник = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент().Ссылка;
	
	//НМА 28.12.17 по запросу Шляхова Александра должен быть весь товар из номенклатурной группы >>
	ТабНоменклатурыДокумента = Источник.Товары.Выгрузить(,"Номенклатура"); //Код Юры
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	Номенклатура.НоменклатурнаяГруппа
	//|ПОМЕСТИТЬ СписокНоменклатурныхГрупп
	//|ИЗ
	//|	Справочник.Номенклатура КАК Номенклатура
	//|ГДЕ
	//|	ВЫБОР
	//|			КОГДА &ВсяНоменклатура
	//|				ТОГДА Номенклатура.ВидНоменклатуры = &ВидНоменклатурыТовар
	//|						И НЕ Номенклатура.емеЭтоБрак
	//|						И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	//|			ИНАЧЕ Номенклатура.Ссылка В (&СписокНоменклатуры)
	//|		КОНЕЦ
	//|	И НЕ Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	Номенклатура.Ссылка КАК Номенклатура,
	//|	Номенклатура.НоменклатурнаяГруппа
	//|ИЗ
	//|	Справочник.Номенклатура КАК Номенклатура
	//|ГДЕ
	//|	НЕ Номенклатура.емеЭтоБрак
	//|	И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	//|	И Номенклатура.НоменклатурнаяГруппа В
	//|			(ВЫБРАТЬ
	//|				СписокНоменклатурныхГрупп.НоменклатурнаяГруппа
	//|			ИЗ
	//|				СписокНоменклатурныхГрупп КАК СписокНоменклатурныхГрупп)";
	//Запрос.УстановитьПараметр("СписокНоменклатуры",Источник.Товары.ВыгрузитьКолонку("Номенклатура"));
	//Запрос.УстановитьПараметр("ВидНоменклатурыТовар",Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товар"));
	//Запрос.УстановитьПараметр("ВсяНоменклатура",Ложь);
	//ТабНоменклатурыДокумента = Запрос.Выполнить().Выгрузить();
	////НМА 28.12.17 по запросу Шляхова Александра должен быть весь товар из номенклатурной группы <<

	ТабНоменклатурыДокумента.Свернуть("Номенклатура");
	Если НЕ Источник.ВалютаДокумента = ВалютаРегламентированногоУчета Тогда
		Для Каждого Строка Из ТабНоменклатурыДокумента Цикл
			МенЗап = РегистрыСведений.ТоварныйКурсПоПоступлению.СоздатьМенеджерЗаписи();
			МенЗап.Период = Источник.Дата;
			МенЗап.Номенклатура = Строка.Номенклатура;
			МенЗап.Валюта = Источник.ВалютаДокумента;
			МенЗап.ТоварныйКурсПоПоступлению = Источник.КурсВзаиморасчетов * Источник.КратностьВзаиморасчетов;
			МенЗап.Документ = Источник.Ссылка;
			МенЗап.Записать();
			Если ТестовыйРежим Тогда 
				Сообщить("Для номенклатуры "+Строка.Номенклатура+" установлен товарный курс по поступлению = "+МенЗап.ТоварныйКурсПоПоступлению);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

//19.09.2017, Юра
Функция КурсВалютыПоЦБ(ТекВалюта,ДатаСреза)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	КурсыВалютСрезПоследних.Курс * КурсыВалютСрезПоследних.Кратность КАК КурсВалюты
	                |ИЗ
	                |	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаСреза, Валюта = &ТекВалюта) КАК КурсыВалютСрезПоследних";
	Запрос.УстановитьПараметр("ТекВалюта", ТекВалюта);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.КурсВалюты;
	Иначе
		Возврат 1;
	КонецЕсли;
КонецФункции

//19.09.2017, Юра
Функция ОбновитьТипЦеныСЦЗ_Машина(ДатаОстатков,СписокПредприятийХолдинга,СписокМагазинов_ПлюсОсновнойСклад,СредняяЦенаЗакупки,ТипЦеныСЦЗ_Машина,ВалютаРегламентированногоУчета,ТестовыйРежим,ДокументОснование="",Номенклатура="",ПроцентИзмененияСчитатьОтТоварногоКурсаПоПоступлению) 
	Если ТестовыйРежим Тогда
		Сообщить("Начали расчет СЦЗ_Машина в "+ТекущаяДата());
	КонецЕсли;
	//Результат поместим в новый документ УстановкаЦенНоменклатуры:
	Док = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	//Док.Дата = ДатаОстатков; //НМА 26.12.17 по запросу Шляхова Александра
	Док.Дата = ТекущаяДата();  //НМА 26.12.17 по запросу Шляхова Александра
	Док.УстановитьНовыйНомер(); //НМА 20.12.17
	Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Док.НеПроводитьНулевыеЗначения = Истина;
	НовДокСтр = Док.ТипыЦен.Добавить();
	НовДокСтр.ТипЦен = ТипЦеныСЦЗ_Машина;
	Док.Комментарий = "Создан автоматически "+ТекущаяДата();
		
	//Определим ПорогКурсовойНаценки:
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	КурсоваяНаценкаПорогСрезПоследних.ПроцентЗакупка
	                |ИЗ
	                |	РегистрСведений.КурсоваяНаценкаПорог.СрезПоследних(&ДатаОстатков, ) КАК КурсоваяНаценкаПорогСрезПоследних";
	Запрос.УстановитьПараметр("ДатаОстатков", ДатаОстатков);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ПорогКурсовойНаценки = ВыборкаДетальныеЗаписи.ПроцентЗакупка;
	Иначе
		ПорогКурсовойНаценки = 0;
	КонецЕсли;
	
	Если ТестовыйРежим Тогда
		Сообщить("Порог курсовой наценки = "+ПорогКурсовойНаценки);
	КонецЕсли;
	//на ДатаОстатков определим номенклатуру (без брака и срока годности)
	//+ товарный курс по поступлению
	//+ товарный курс в валюте товарного курса
	//+ курс валюты ЦБ в валюте товарного курса
	//+ имеющуюся СредняяЦенаЗакупки 
	//+ имеющуюся СЦЗ_Машина
	Запрос = Новый Запрос;
	//НМА 19.12.17 вся номенклатура из номенклатурной группы >>
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура.НоменклатурнаяГруппа
	               |ПОМЕСТИТЬ СписокНоменклатурныхГрупп
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ВсяНоменклатура
	               |				ТОГДА Номенклатура.ВидНоменклатуры = &ВидНоменклатурыТовар
	               |						И НЕ Номенклатура.емеЭтоБрак
	               |						И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	               |			ИНАЧЕ Номенклатура.Ссылка В (&СписокНоменклатуры)
	               |		КОНЕЦ
				   |	И НЕ Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	               |
	               |;
				 //  ******************
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура.Ссылка КАК Номенклатура,
	               |	Номенклатура.НоменклатурнаяГруппа
	               |ПОМЕСТИТЬ НужнаяНоменклатура
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	НЕ Номенклатура.емеЭтоБрак
	               |	И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	                //НМА 05.02.18 По запросу Шляхова Александра (для товаров без номенклатурных групп)	   
	               |	И (Номенклатура.Ссылка В (&СписокНоменклатуры)
	               |			ИЛИ Номенклатура.НоменклатурнаяГруппа В
	               |				(ВЫБРАТЬ
	               |					СписокНоменклатурныхГрупп.НоменклатурнаяГруппа
	               |				ИЗ
	               |					СписокНоменклатурныхГрупп КАК СписокНоменклатурныхГрупп))
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
    //НМА 19.12.17 вся номенклатура из номенклатурной группы <<

	//Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |	Номенклатура.Ссылка КАК Номенклатура
	//               |ПОМЕСТИТЬ НужнаяНоменклатура
	//               |ИЗ
	//               |	Справочник.Номенклатура КАК Номенклатура
	//               |ГДЕ
	//               |	ВЫБОР
	//               |			КОГДА &ВсяНоменклатура
	//               |				ТОГДА Номенклатура.ВидНоменклатуры = &ВидНоменклатурыТовар
	//               |						И НЕ Номенклатура.емеЭтоБрак
	//               |						И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	//               |			ИНАЧЕ Номенклатура.Ссылка В (&СписокНоменклатуры)
	//               |		КОНЕЦ
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Номенклатура
	//               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НужнаяНоменклатура.Номенклатура,
	               |	ТоварныйКурсПоПоступлениюСрезПоследних.ТоварныйКурсПоПоступлению,
	               |	КурсоваяНаценкаСрезПоследних.ТоварныйКурс,
	               |	ВЫБОР
	               |		КОГДА &ВалютаИзДокумента = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	               |			ТОГДА ЕстьNULL(КурсоваяНаценкаСрезПоследних.Валюта,&ВалютаРегламентированногоУчета)
	               |		ИНАЧЕ &ВалютаИзДокумента
	               |	КОНЕЦ КАК Валюта
	               |ПОМЕСТИТЬ НоменклатураСТоварнымиКурсами
	               |ИЗ
	               |	НужнаяНоменклатура КАК НужнаяНоменклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйКурсПоПоступлению.СрезПоследних(
	               |				&ДатаОстатков,
	               |				Номенклатура В
	               |					(ВЫБРАТЬ
	               |						НужнаяНоменклатура.Номенклатура
	               |					ИЗ
	               |						НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ТоварныйКурсПоПоступлениюСрезПоследних
	               |		ПО НужнаяНоменклатура.Номенклатура = ТоварныйКурсПоПоступлениюСрезПоследних.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсоваяНаценка.СрезПоследних(
	               |				&ДатаОстатков,
	               |				Номенклатура В
	               |					(ВЫБРАТЬ
	               |						НужнаяНоменклатура.Номенклатура
	               |					ИЗ
	               |						НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК КурсоваяНаценкаСрезПоследних
	               |		ПО НужнаяНоменклатура.Номенклатура = КурсоваяНаценкаСрезПоследних.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НоменклатураСТоварнымиКурсами.Номенклатура,
	               |	НоменклатураСТоварнымиКурсами.Валюта,
	               |	НоменклатураСТоварнымиКурсами.ТоварныйКурсПоПоступлению,
	               |	НоменклатураСТоварнымиКурсами.ТоварныйКурс,
	               |	КурсыВалютСрезПоследних.Курс * КурсыВалютСрезПоследних.Кратность КАК КурсЦБ
	               |ПОМЕСТИТЬ НоменклатураСТоварнымиКурсамиИКурсомЦБ
	               |ИЗ
	               |	НоменклатураСТоварнымиКурсами КАК НоменклатураСТоварнымиКурсами
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОстатков, ) КАК КурсыВалютСрезПоследних
	               |		ПО НоменклатураСТоварнымиКурсами.Валюта = КурсыВалютСрезПоследних.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НоменклатураСТоварнымиКурсамиИКурсомЦБ.Номенклатура,
	               |	НоменклатураСТоварнымиКурсамиИКурсомЦБ.Валюта,
	               |	ЕСТЬNULL(НоменклатураСТоварнымиКурсамиИКурсомЦБ.ТоварныйКурсПоПоступлению, 0) КАК ТоварныйКурсПоПоступлению,
	               |	ЕСТЬNULL(НоменклатураСТоварнымиКурсамиИКурсомЦБ.ТоварныйКурс, 0) КАК ТоварныйКурс,
	               |	НоменклатураСТоварнымиКурсамиИКурсомЦБ.КурсЦБ,
				   
				   //Текущие цены будем получать в минимальной единице измерения 31.10.2017, Юра
				   //|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихСредняяЦенаЗакупки.Цена, 0) КАК СредняяЦенаЗакупки,
				   //|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихСЦЗ_Машина.Цена, 0) КАК СЦЗ_Машина
				   |	Выразить(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихСредняяЦенаЗакупки.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихСредняяЦенаЗакупки.ЕдиницаИзмерения.Коэффициент, 1) КАК Число(15,2)) КАК СредняяЦенаЗакупки,
	               |	Выразить(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихСЦЗ_Машина.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследнихСЦЗ_Машина.ЕдиницаИзмерения.Коэффициент, 1) КАК Число(15,2)) КАК СЦЗ_Машина
				   
	               |ИЗ
	               |	НоменклатураСТоварнымиКурсамиИКурсомЦБ КАК НоменклатураСТоварнымиКурсамиИКурсомЦБ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&ДатаОстатков,
	               |				ТипЦен = &СредняяЦенаЗакупки
	               |					И Номенклатура В
	               |						(ВЫБРАТЬ
	               |							НужнаяНоменклатура.Номенклатура
	               |						ИЗ
	               |							НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ЦеныНоменклатурыСрезПоследнихСредняяЦенаЗакупки
	               |		ПО НоменклатураСТоварнымиКурсамиИКурсомЦБ.Номенклатура = ЦеныНоменклатурыСрезПоследнихСредняяЦенаЗакупки.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&ДатаОстатков,
	               |				ТипЦен = &ТипЦеныСЦЗ_Машина
	               |					И Номенклатура В
	               |						(ВЫБРАТЬ
	               |							НужнаяНоменклатура.Номенклатура
	               |						ИЗ
	               |							НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ЦеныНоменклатурыСрезПоследнихСЦЗ_Машина
	               |		ПО НоменклатураСТоварнымиКурсамиИКурсомЦБ.Номенклатура = ЦеныНоменклатурыСрезПоследнихСЦЗ_Машина.Номенклатура";
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Запрос.УстановитьПараметр("СписокНоменклатуры",ДокументОснование.Товары.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("ВсяНоменклатура",Ложь);
	ИначеЕсли ЗначениеЗаполнено(Номенклатура) Тогда
		СписокНоменклатуры = СписокНоменклатурыИзНоменклатуры(Номенклатура);//31.10.2017, Юра
		Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
		Запрос.УстановитьПараметр("ВсяНоменклатура",Ложь);
	Иначе
		Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры = Новый СписокЗначений());
		Запрос.УстановитьПараметр("ВсяНоменклатура",Истина);
	КонецЕсли;
	//Запрос.УстановитьПараметр("ДатаОстатков",ДатаОстатков); //НМА 26.12.17 по запросу Шляхова Александра
	Запрос.УстановитьПараметр("ДатаОстатков",ТекущаяДата()); //НМА 26.12.17 по запросу Шляхова Александра
	Запрос.УстановитьПараметр("ВидНоменклатурыТовар",Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товар"));
	Запрос.УстановитьПараметр("СписокПредприятийХолдинга",СписокПредприятийХолдинга);
	Запрос.УстановитьПараметр("НужныеСклады",СписокМагазинов_ПлюсОсновнойСклад);
	Запрос.УстановитьПараметр("СредняяЦенаЗакупки",СредняяЦенаЗакупки);
	Запрос.УстановитьПараметр("ТипЦеныСЦЗ_Машина",ТипЦеныСЦЗ_Машина);
	//20.10.2017, Юра
	Если ЗначениеЗаполнено(ДокументОснование) и НЕ Метаданные.Документы[ДокументОснование.Метаданные().Имя].Реквизиты.Найти("ВалютаДокумента")=Неопределено Тогда 
		Запрос.УстановитьПараметр("ВалютаИзДокумента",ДокументОснование.ВалютаДокумента);
	Иначе 
		Запрос.УстановитьПараметр("ВалютаИзДокумента",Справочники.Валюты.ПустаяСсылка());
	КонецЕсли;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",ВалютаРегламентированногоУчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СЦЗ_Машина = 0; //если не изменится, то менять не будем
		
		Если ВыборкаДетальныеЗаписи.Валюта = ВалютаРегламентированногоУчета Тогда
			//20.10.2017, Юра
			Если ТестовыйРежим Тогда
				Сообщить("Для номенклатуры "+ВыборкаДетальныеЗаписи.Номенклатура +" на дату: "+ДатаОстатков+" валюта: "+ВыборкаДетальныеЗаписи.Валюта);
				Сообщить("	текущая цена ""СредняяЦенаЗакупки"": "+ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки);
				Сообщить("	текущая цена ""СЦЗ_Машина"": "+ВыборкаДетальныеЗаписи.СЦЗ_Машина);
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.СЦЗ_Машина <> ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки Тогда 
				СЦЗ_Машина = ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки;
			КонецЕсли;
		Иначе
			//НМА 19.12.17 вся номенклатура из номенклатурной группы >>
			//ТоварныйКурсПоПоступлению = ДокументОснование.КурсВзаиморасчетов * ДокументОснование.КратностьВзаиморасчетов;
			Если ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению = 0 и ВыборкаДетальныеЗаписи.ТоварныйКурс<>0 Тогда
				ПроцентИзмененияКурса = ОКР((ВыборкаДетальныеЗаписи.КурсЦБ / ВыборкаДетальныеЗаписи.ТоварныйКурс -1)*100,2);
			ИначеЕсли ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению = 0 и ВыборкаДетальныеЗаписи.ТоварныйКурс = 0 Тогда
				ПроцентИзмененияКурса = 0;
			Иначе
				ПроцентИзмененияКурса = ОКР((ВыборкаДетальныеЗаписи.КурсЦБ / ВыборкаДетальныеЗаписи["ТоварныйКурс"+?(ПроцентИзмененияСчитатьОтТоварногоКурсаПоПоступлению,"ПоПоступлению","")] -1)*100,2);//19.10.2017, Юра	
			КонецЕсли;
			СЦЗ_Машина = ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки; //НМА 28.12.17 вся номенклатура из номенклатурной группы. по запросу Шляхова Александра 12.01.18
			//НМА 19.12.17 вся номенклатура из номенклатурной группы <<
			//ПроцентИзмененияКурса = ОКР((ВыборкаДетальныеЗаписи.КурсЦБ / ВыборкаДетальныеЗаписи["ТоварныйКурс"+?(ПроцентИзмененияСчитатьОтТоварногоКурсаПоПоступлению,"ПоПоступлению","")] -1)*100,2);//19.10.2017, Юра
			Если ТестовыйРежим Тогда
				Сообщить("Для номенклатуры "+ВыборкаДетальныеЗаписи.Номенклатура +" на дату: "+ДатаОстатков+" товарный курс"+?(ПроцентИзмененияСчитатьОтТоварногоКурсаПоПоступлению," по поступлению: ",": ") +ВыборкаДетальныеЗаписи["ТоварныйКурс"+?(ПроцентИзмененияСчитатьОтТоварногоКурсаПоПоступлению,"ПоПоступлению","")]+", валюта: "+ВыборкаДетальныеЗаписи.Валюта+", Курс ЦБ: "+ВыборкаДетальныеЗаписи.КурсЦБ+". Разница: "+ПроцентИзмененияКурса+"%");
				Сообщить("	ТоварныйКурсПоПоступлению: " +ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению);//19.10.2017, Юра
				Сообщить("	ТоварныйКурс: " +ВыборкаДетальныеЗаписи.ТоварныйКурс);//19.10.2017, Юра
				Сообщить("	текущая цена ""СредняяЦенаЗакупки"": "+ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки);//19.10.2017, Юра
				Сообщить("	текущая цена ""СЦЗ_Машина"": "+ВыборкаДетальныеЗаписи.СЦЗ_Машина);
			КонецЕсли;
			
			ТоварныйКурс = 0;
			Если Sqrt(ПроцентИзмененияКурса * ПроцентИзмененияКурса) < ПорогКурсовойНаценки Тогда
				//Порог не превысили, но надо чтобы СЦЗ_Машина была не меньше чем СредняяЦенаЗакупки
				Если ВыборкаДетальныеЗаписи.СЦЗ_Машина = 0 ИЛИ ВыборкаДетальныеЗаписи.СЦЗ_Машина < ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки Тогда //НМА 12.01.18 по запросу Шляхова Александра
					СЦЗ_Машина = ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки;
				КонецЕсли;
				//19.10.2017, Юра
				Если ПроцентИзмененияСчитатьОтТоварногоКурсаПоПоступлению Тогда
					ТоварныйКурс = ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению;
				КонецЕсли;
			ИначеЕсли ВыборкаДетальныеЗаписи.КурсЦБ <= ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению Тогда
				ТоварныйКурс = ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению; //18.10.2017, Юра
				СЦЗ_Машина = ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки;
			ИначеЕсли ВыборкаДетальныеЗаписи.КурсЦБ > ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению Тогда
				ТоварныйКурс = ВыборкаДетальныеЗаписи.КурсЦБ;
				Если ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению > 0 Тогда 
					СЦЗ_Машина = ОКР(ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки * ВыборкаДетальныеЗаписи.КурсЦБ / ВыборкаДетальныеЗаписи.ТоварныйКурсПоПоступлению,2);
				Иначе
					СЦЗ_Машина = ВыборкаДетальныеЗаписи.СредняяЦенаЗакупки;
				КонецЕсли;
			КонецЕсли;
			
			Если ТестовыйРежим И СЦЗ_Машина <> 0 Тогда
				Сообщить("	расчетная цена ""СЦЗ_Машина"": "+СЦЗ_Машина);
			КонецЕсли;
			
			//Если ТоварныйКурс менялся, запишем его:
			Если ЗначениеЗаполнено(ТоварныйКурс) Тогда 
				МенЗап = РегистрыСведений.КурсоваяНаценка.СоздатьМенеджерЗаписи();
				МенЗап.Период = ДатаОстатков;
				МенЗап.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				МенЗап.Валюта = ВыборкаДетальныеЗаписи.Валюта;
				МенЗап.Курс = ВыборкаДетальныеЗаписи.КурсЦБ;
				МенЗап.ТоварныйКурс = ТоварныйКурс;
				МенЗап.Наценка = 0;
				МенЗап.Записать();
				
				Если ТестовыйРежим Тогда 
					//Сообщить("Для номенклатуры "+ВыборкаДетальныеЗаписи.Номенклатура+" установлен новый товарный курс = "+ТоварныйКурс);
					Сообщить("	установлен новый товарный курс = "+ТоварныйКурс+", валюта: "+ВыборкаДетальныеЗаписи.Валюта);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//Если СЦЗ_Машина изменилась, запишем новую цену:
		Если ЗначениеЗаполнено(СЦЗ_Машина) И СЦЗ_Машина <> ВыборкаДетальныеЗаписи.СЦЗ_Машина Тогда //НМА 28.12.17 вся номенклатура из номенклатурной группы
		//Если ЗначениеЗаполнено(СЦЗ_Машина) Тогда //НМА 28.12.17 вся номенклатура из номенклатурной группы
			Если Док.Товары.Найти(ВыборкаДетальныеЗаписи.Номенклатура,"Номенклатура") = Неопределено Тогда
				НС = Док.Товары.Добавить();
				НС.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				НС.Валюта = ВалютаРегламентированногоУчета;
				ЕдИзмИКоэффициент = ЕдИзмИКоэффициент(ВыборкаДетальныеЗаписи.Номенклатура);//03.11.2017, Юра
				НС.ЕдиницаИзмерения = ЕдИзмИКоэффициент.ЕдИзм;//ВыборкаДетальныеЗаписи.Номенклатура.ЕдиницаХраненияОстатков;
				НС.Цена = СЦЗ_Машина * ЕдИзмИКоэффициент.Коэффициент;//СЦЗ_Машина;
				НС.ТипЦен = ТипЦеныСЦЗ_Машина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
		
	Если Док.Товары.Количество() = 0 Тогда
		Если ТестовыйРежим Тогда
			Сообщить("Для типа цен "+ТипЦеныСЦЗ_Машина+" цены остались прежние, документ ""Установка цен номенклатуры"" создавать не нужно."); 
		КонецЕсли;
	Иначе
		Попытка
			Док.Записать(РежимЗаписиДокумента.Проведение);
			Если ТестовыйРежим Тогда 
				Сообщить("Для типа цены "+ТипЦеныСЦЗ_Машина+" создан документ "+Док.Ссылка);
			КонецЕсли;
		Исключение
			ТекстОшибки = "Не удалось обновить тип цен "+ТипЦеныСЦЗ_Машина+". "+ОписаниеОшибки();
			Сообщить (ТекстОшибки);
			ЗаписьЖурналаРегистрации("Расчет типа цены "+ТипЦеныСЦЗ_Машина,УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
			Док.Записать();//просто запишем, чтобы смотрели
		КонецПопытки;
	КонецЕсли;
	Если ТестовыйРежим Тогда
		Сообщить("Закончили расчет СЦЗ_Машина в "+ТекущаяДата());
	КонецЕсли;
	Возврат Док; 
	
КонецФункции

//05.09.2017, Юра
//Установим цены для "дополнительной" номенклатуры (брак или установлен срок годности).
Процедура УстановитьЦеныДляДопНоменклатуры(ОсновнойДокументУстановкиЦен,ДатаОстатков,ТипЦены,ТестовыйРежим=Ложь)  
	Если ТестовыйРежим Тогда
		Сообщить("Начали расчет "+ТипЦены+" для доп.номенклатуры в "+ТекущаяДата());
	КонецЕсли;
	Запрос = Новый Запрос;
	//Некорректный запрос, он сравнивает цены из переданного документа для основной номенклатуры с текущей ценой доп. номенклатуры. Нужно на дату остатков сравнивать тек.цены основной и доп.номенклатуры 07.11.2017, Юра
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ТЧосновногоДокумента.Номенклатура КАК Номенклатура,
	//               |	ТЧосновногоДокумента.Цена КАК Цена,
	//               |	ТЧосновногоДокумента.ТипЦен КАК ТипЦен,
	//               |	ТЧосновногоДокумента.Валюта КАК Валюта,
	//               |	ТЧосновногоДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	//               |ПОМЕСТИТЬ ОснТаблица
	//               |ИЗ
	//               |	&ТЧосновногоДокумента КАК ТЧосновногоДокумента
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Номенклатура
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	СпрНоменклатура.Ссылка КАК Номенклатура,
	//               |	ОснТаблица.Цена КАК Цена,
	//               |	ОснТаблица.ТипЦен КАК ТипЦен,
	//               |	ОснТаблица.Валюта КАК Валюта,
	//               |	ОснТаблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	//               |ПОМЕСТИТЬ ГотовыеДанныеБезСравненияСТекущейЦеной
	//               |ИЗ
	//               |	Справочник.Номенклатура КАК СпрНоменклатура
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ ОснТаблица КАК ОснТаблица
	//               |		ПО СпрНоменклатура.емеСсылкаНаОсновнуюНоменклатуру = ОснТаблица.Номенклатура
	//               |ГДЕ
	//               |	(СпрНоменклатура.емеЭтоБрак
	//               |			ИЛИ НЕ СпрНоменклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1))
	//               |	И СпрНоменклатура.емеСсылкаНаОсновнуюНоменклатуру В
	//               |			(ВЫБРАТЬ
	//               |				ОснТаблица.Номенклатура
	//               |			ИЗ
	//               |				ОснТаблица КАК ОснТаблица)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ГотовыеДанныеБезСравненияСТекущейЦеной.Номенклатура,
	//               |	ГотовыеДанныеБезСравненияСТекущейЦеной.Цена,
	//               |	ГотовыеДанныеБезСравненияСТекущейЦеной.ТипЦен,
	//               |	ГотовыеДанныеБезСравненияСТекущейЦеной.Валюта,
	//               |	ГотовыеДанныеБезСравненияСТекущейЦеной.ЕдиницаИзмерения,
	//			   
	//			   //Текущие цены будем получать в минимальной единице измерения 31.10.2017, Юра
	//			   //|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ТекущаяЦена
	//			   |	Выразить(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК Число(15,2)) КАК ТекущаяЦена
	//               |ИЗ
	//               |	ГотовыеДанныеБезСравненияСТекущейЦеной КАК ГотовыеДанныеБезСравненияСТекущейЦеной
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаОстатков, ТипЦен = &ТипЦены) КАК ЦеныНоменклатурыСрезПоследних
	//               |		ПО ГотовыеДанныеБезСравненияСТекущейЦеной.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	//               |ГДЕ
	//			   //Текущие цены будем получать в минимальной единице измерения 31.10.2017, Юра
	//               //|	ГотовыеДанныеБезСравненияСТекущейЦеной.Цена <> ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)";
	//			   |	ГотовыеДанныеБезСравненияСТекущейЦеной.Цена <> ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1)";
	
	//Новая версия 07.11.2017, Юра
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЧосновногоДокумента.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ОсновнаяНоменклатура
	               |ИЗ
	               |	&ТЧосновногоДокумента КАК ТЧосновногоДокумента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК ОснНоменклатура,
	               |	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)) КАК ТекЦенаОснНоменклатуры
	               |ПОМЕСТИТЬ ЦеныОсновнойНоменклатуры
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |			&ДатаОстатков,
	               |			Валюта = &Валюта
	               |				И ТипЦен = &ТипЦены
	               |				И Номенклатура В
	               |					(ВЫБРАТЬ
	               |						ОсновнаяНоменклатура.Номенклатура
	               |					ИЗ
	               |						ОсновнаяНоменклатура КАК ОсновнаяНоменклатура)) КАК ЦеныНоменклатурыСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СпрНоменклатура.Ссылка КАК ДопНоменклатура,
	               |	СпрНоменклатура.емеСсылкаНаОсновнуюНоменклатуру КАК ОснНоменклатура,
	               |	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК ЧИСЛО(15, 2)) КАК ЦенаДопНоменклатуры
	               |ПОМЕСТИТЬ ДопНоменклатураСТекущейЦеной
	               |ИЗ
	               |	Справочник.Номенклатура КАК СпрНоменклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&ДатаОстатков,
	               |				Валюта = &Валюта
	               |					И ТипЦен = &ТипЦены) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = СпрНоменклатура.Ссылка)
	               |ГДЕ
	               |	(СпрНоменклатура.емеЭтоБрак
	               |			ИЛИ НЕ СпрНоменклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1))
	               |	И СпрНоменклатура.емеСсылкаНаОсновнуюНоменклатуру В
	               |			(ВЫБРАТЬ
	               |				ОсновнаяНоменклатура.Номенклатура
	               |			ИЗ
	               |				ОсновнаяНоменклатура КАК ОсновнаяНоменклатура)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДопНоменклатураСТекущейЦеной.ДопНоменклатура,
	               |	ДопНоменклатураСТекущейЦеной.ОснНоменклатура,
	               |	ДопНоменклатураСТекущейЦеной.ЦенаДопНоменклатуры,
	               |	ЦеныОсновнойНоменклатуры.ТекЦенаОснНоменклатуры
	               
	               |ИЗ
	               |	ДопНоменклатураСТекущейЦеной КАК ДопНоменклатураСТекущейЦеной
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныОсновнойНоменклатуры КАК ЦеныОсновнойНоменклатуры
	               |		ПО ДопНоменклатураСТекущейЦеной.ОснНоменклатура = ЦеныОсновнойНоменклатуры.ОснНоменклатура
	               |			И ДопНоменклатураСТекущейЦеной.ЦенаДопНоменклатуры <> ЦеныОсновнойНоменклатуры.ТекЦенаОснНоменклатуры";
	Запрос.УстановитьПараметр("ТЧосновногоДокумента",ОсновнойДокументУстановкиЦен.Товары.Выгрузить());
	//Запрос.УстановитьПараметр("ДатаОстатков",ДатаОстатков);//25.09.2017, Юра //НМА 26.12.17 по запросу Шляхова Александра
	Запрос.УстановитьПараметр("ДатаОстатков",ТекущаяДата()); //НМА 26.12.17 по запросу Шляхова Александра
	Запрос.УстановитьПараметр("ТипЦены",ТипЦены);//25.09.2017, Юра
	Запрос.УстановитьПараметр("Валюта",ТипЦены.ВалютаЦены);//07.11.2017, Юра
	
	//	ТаблицаДляДопНоменклатуры = Запрос.Выполнить().Выгрузить();//07.11.2017, Юра
	//	Если ТаблицаДляДопНоменклатуры.Количество() > 0 Тогда//07.11.2017, Юра
	
	//Результат поместим в документ УстановкаЦенНоменклатуры:
	ДокДоп = НайтиИлиСоздатьДокументУстановкаЦенНоменклатуры(ОсновнойДокументУстановкиЦен,ДатаОстатков,ТипЦены,"дополнительн");
	
	//07.11.2017, Юра
	//ДокДоп.Товары.Загрузить(ТаблицаДляДопНоменклатуры);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НС = ДокДоп.Товары.Добавить();
		НС.Номенклатура = ВыборкаДетальныеЗаписи.ДопНоменклатура;
		ЕдИзмИКоэффициент = ЕдИзмИКоэффициент(ВыборкаДетальныеЗаписи.ДопНоменклатура);
		НС.Цена = ВыборкаДетальныеЗаписи.ТекЦенаОснНоменклатуры * ЕдИзмИКоэффициент.Коэффициент;
		НС.ЕдиницаИзмерения = ЕдИзмИКоэффициент.ЕдИзм;
		НС.ТипЦен = ТипЦены;
		НС.Валюта = ТипЦены.ВалютаЦены;
	КонецЦикла;
	
	ДокДоп.Комментарий = "Создан автоматически "+ТекущаяДата()+" для дополнительной номенклатуры";
	Если ДокДоп.Товары.Количество() = 0 Тогда
		Если ТестовыйРежим Тогда
			Сообщить("Для типа цен "+ТипЦены+" для дополнительной номенклатуры цены остались прежние, документ ""Установка цен номенклатуры"" создавать не нужно.");
		КонецЕсли;
	Иначе
		Попытка
			Сек = 1; //НМА 31.01.18 Таймаут 1 секунда
			ОбщегоНазначения5LB.глТаймаут(Сек); //НМА 31.01.18 Таймаут 1 секунда
			ДокДоп.Дата = ТекущаяДата(); //НМА 31.01.18 Таймаут 1 секунда
			ДокДоп.Записать(РежимЗаписиДокумента.Проведение);
			Если ТестовыйРежим Тогда 
				Сообщить("Для типа цены "+ТипЦены+" создан документ для дополнительной номенклатуры "+ДокДоп.Ссылка);
			КонецЕсли;
		Исключение
			ТекстОшибки = "Для типа цен "+ТипЦены+" для дополнительной номенклатуры не удалось обновить цены. "+ОписаниеОшибки();
			Сообщить (ТекстОшибки);
			ЗаписьЖурналаРегистрации("Расчет для типа цен "+ТипЦены+" для дополнительной номенклатуры",УровеньЖурналаРегистрации.Ошибка,,ОсновнойДокументУстановкиЦен,ТекстОшибки,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
			ДокДоп.Записать();//просто запишем, чтобы смотрели
		КонецПопытки;
	КонецЕсли;
	//КонецЕсли;
	
	Если ТестовыйРежим Тогда
		Сообщить("Закончили расчет "+ТипЦены+" для доп.номенклатуры в "+ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

//25.09.2017, Юра
//Выравнивание цен по вкусам для СЦЗ_Машина. Тут остатки берем реальные.
//Привязка по вкусам идет по реквизиту "НоменклатурнаяГруппа" ... и не надо меня косо смотреть, это не я придумал
//Учитываем в остатках и расчет делаем для нормальной номенклатуры. Для доп. номенклатуры (брак или со сроком годности) цена будет автоматом выравниваться чуть позднее.
Процедура УстановкаЦенПоВсемВкусам(ДатаОстатков,ТипЦены,СписокМагазинов_ПлюсОсновнойСклад,ВалютаРегламентированногоУчета,ТестовыйРежим=Ложь,ДокументОснование="",Номенклатура="",ДокументПроводится=Ложь) 
	Если ТестовыйРежим Тогда
		Сообщить("Начали расчет "+ТипЦены+" по вкусам в "+ТекущаяДата());
	КонецЕсли;
	
	ДокЦен = НайтиИлиСоздатьДокументУстановкаЦенНоменклатуры(ДокументОснование,ДатаОстатков,ТипЦены,"вкус");
	ДокЦен.Комментарий = "Создан автоматически "+ТекущаяДата()+" для выравнивания цен по вкусам";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура.НоменклатурнаяГруппа
	               |ПОМЕСТИТЬ СписокНоменклатурныхГрупп
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ВсяНоменклатура
	               |				ТОГДА Номенклатура.ВидНоменклатуры = &ВидНоменклатурыТовар
	               |						И НЕ Номенклатура.емеЭтоБрак
	               |						И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	               |			ИНАЧЕ Номенклатура.Ссылка В (&СписокНоменклатуры)
	               |		КОНЕЦ
				   |	И НЕ Номенклатура.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	               |
	               |;
				 //  ******************
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура.Ссылка КАК Номенклатура,
	               |	Номенклатура.НоменклатурнаяГруппа
	               |ПОМЕСТИТЬ НужнаяНоменклатура
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	НЕ Номенклатура.емеЭтоБрак
	               |	И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
	               |	И Номенклатура.НоменклатурнаяГруппа В
	               |			(ВЫБРАТЬ
	               |				СписокНоменклатурныхГрупп.НоменклатурнаяГруппа
	               |			ИЗ
	               |				СписокНоменклатурныхГрупп КАК СписокНоменклатурныхГрупп)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НужнаяНоменклатура.Номенклатура,
	               |	НужнаяНоменклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
				   
				   //Добавил округление 31.10.2017, Юра
	               |	Выразить(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК Число(15,2)) КАК ТекущаяЦена,
				   
				   //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусами >>
				   //|	СУММА(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * ВЫБОР                                   //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусам
				   //|			КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) > 0                         //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусам
				   //|				ТОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)                         //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусам
				   //|			ИНАЧЕ 0                                                                                 //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусам
				   //|		КОНЕЦ / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1)) КАК Сумма, //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусам
				   //|	СУММА(ВЫБОР                                                              //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусами
				   //|			КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) > 0  //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусами
				   //|				ТОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)  //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусами
				   //|			ИНАЧЕ 0                                                          //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусами
				   //|		КОНЕЦ) КАК КоличествоОстаток                                         //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусами
				   |	СУММА(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1)) КАК Сумма,
				   |	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)) КАК КоличествоОстаток
				   //НМА 01.02.18 Отключил учет без минусов, т.к. учитываем с минусами <<
	               |ИЗ
	               |	НужнаяНоменклатура КАК НужнаяНоменклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&ДатаОстатков,
	               |				ТипЦен = &ТипЦены
	               |					И Номенклатура В
	               |						(ВЫБРАТЬ
	               |							НужнаяНоменклатура.Номенклатура
	               |						ИЗ
	               |							НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО НужнаяНоменклатура.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				&ДатаОстатков,
	               |				Склад В (&СписокМагазинов_ПлюсОсновнойСклад)
	               |					И Номенклатура В
	               |						(ВЫБРАТЬ
	               |							НужнаяНоменклатура.Номенклатура
	               |						ИЗ
	               |							НужнаяНоменклатура КАК НужнаяНоменклатура)) КАК ТоварыНаСкладахОстатки
	               |		ПО НужнаяНоменклатура.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НужнаяНоменклатура.НоменклатурнаяГруппа,
	               |	НужнаяНоменклатура.Номенклатура,
	               |	Выразить(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК Число(15,2))
	               |ИТОГИ ПО
	               |	НоменклатурнаяГруппа";
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Запрос.УстановитьПараметр("СписокНоменклатуры",ДокументОснование.Товары.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("ВсяНоменклатура",Ложь);
	ИначеЕсли ЗначениеЗаполнено(Номенклатура) Тогда
		СписокНоменклатуры = СписокНоменклатурыИзНоменклатуры(Номенклатура);//31.10.2017, Юра
		Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
		Запрос.УстановитьПараметр("ВсяНоменклатура",Ложь);
	Иначе
		Запрос.УстановитьПараметр("ВсяНоменклатура",Истина);
		Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры = Новый СписокЗначений());
		
	КонецЕсли;
	Запрос.УстановитьПараметр("ВидНоменклатурыТовар",Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товар"));
	//Запрос.УстановитьПараметр("ДатаОстатков",ДатаОстатков); //НМА 26.12.17 по запросу Шляхова Александра
	Запрос.УстановитьПараметр("ДатаОстатков",ТекущаяДата());  //НМА 26.12.17 по запросу Шляхова Александра
	Запрос.УстановитьПараметр("ТипЦены",ТипЦены);
	Запрос.УстановитьПараметр("СписокМагазинов_ПлюсОсновнойСклад",СписокМагазинов_ПлюсОсновнойСклад);
	
	Рез = Запрос.Выполнить();
	Выборка1 = рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ЦеныПоНоменклатурнымГруппам = Новый Структура("НоменклатурнаяГруппа
	//НМА 27.12.17 учитывать количество документа без движений >>
	Источник = ДокументОснование;
	Если Источник <> Неопределено Тогда
		Если ДокументПроводится Тогда
			//НМА 26.04.18 из упаковок в штуки >>
			ТЗОстаткиДокумента=Источник.Товары.Выгрузить(,"Номенклатура,Количество,Коэффициент");
			Для Каждого СтрТЗОстаткиДокумента из ТЗОстаткиДокумента Цикл
				Если СтрТЗОстаткиДокумента.Коэффициент <> 1 Тогда 
					СтрТЗОстаткиДокумента.Количество = СтрТЗОстаткиДокумента.Количество * СтрТЗОстаткиДокумента.Коэффициент;
				КонецЕсли;
			КонецЦикла;
			//НМА 26.04.18 из упаковок в штуки <<
			ТЗОстаткиДокумента.Свернуть("Номенклатура","Количество"); //НМА 01.02.18
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТЗОстаткиДокумента.Номенклатура,
			|	ТЗОстаткиДокумента.Количество
			|ПОМЕСТИТЬ ТЗОстаткиДокумента
			|ИЗ
			|	&ТЗОстаткиДокумента КАК ТЗОстаткиДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СпрНоменклатура.Ссылка КАК Номенклатура,
			|	ТЗОстаткиДокумента.Количество
			|ПОМЕСТИТЬ ИзДокумента
			|ИЗ
			|	ТЗОстаткиДокумента КАК ТЗОстаткиДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
			|		ПО ТЗОстаткиДокумента.Номенклатура = СпрНоменклатура.Ссылка
			|ГДЕ
			|	НЕ СпрНоменклатура.емеЭтоБрак
			|	И СпрНоменклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 0) <> 0
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 0)
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ Цены
			|ИЗ
			|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|			&Дата,
			|			Номенклатура В (&ТЗОстаткиДокумента)
			|				И ТипЦен = &ТипЦены
			|				И НЕ Номенклатура.емеЭтоБрак
			|				И Номенклатура.емеСрокГодностиДляДополнительных = ДАТАВРЕМЯ(1, 1, 1)) КАК ЦеныНоменклатурыСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИзДокумента.Номенклатура,
			|	ИзДокумента.Количество,
			|	ЕСТЬNULL(Цены.Цена, 0) КАК Цена,
			|	ЕСТЬNULL(Цены.Цена, 0) * ИзДокумента.Количество КАК Сумма,
			|	ИзДокумента.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
			|ИЗ
			|	ИзДокумента КАК ИзДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
			|		ПО ИзДокумента.Номенклатура = Цены.Номенклатура";
			Запрос.УстановитьПараметр("Дата", ТекущаяДата());
			Запрос.УстановитьПараметр("ТипЦены",ТипЦены);
			Запрос.УстановитьПараметр("ТЗОстаткиДокумента", ТЗОстаткиДокумента);
			РезультатЗапроса = Запрос.Выполнить();
			ТЗОстаткиДокументаСЦенами = РезультатЗапроса.Выгрузить();
			ТЗОстаткиДокументаСЦенами.Свернуть("НоменклатурнаяГруппа","Количество,Сумма"); //НМА 11.01.18
		КонецЕсли;
	КонецЕсли;
	//НМА 27.12.17 учитывать количество документа без движений <<
	Пока Выборка1.Следующий() Цикл
		//НМА 27.12.17 учитывать количество документа без движений >>
		ФактическийОстатокНоменклатурнойГруппы = Выборка1.КоличествоОстаток;
		ФактическаяСуммаНоменклатурнойГруппы   = Выборка1.Сумма; //НМА 11.01.18
		Если Источник <> Неопределено Тогда
			Если ДокументПроводится Тогда
				НайденнаяСтрокаНоменклатурнаяГруппа = ТЗОстаткиДокументаСЦенами.Найти(Выборка1.НоменклатурнаяГруппа, "НоменклатурнаяГруппа");
				Если НайденнаяСтрокаНоменклатурнаяГруппа <> Неопределено Тогда
					ФактическийОстатокНоменклатурнойГруппы = Выборка1.КоличествоОстаток + НайденнаяСтрокаНоменклатурнаяГруппа.Количество;
					ФактическаяСуммаНоменклатурнойГруппы   = Выборка1.Сумма + НайденнаяСтрокаНоменклатурнаяГруппа.Сумма; //НМА 11.01.18
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
		////НМА 09.02.18 >>
		//Если ФактическийОстатокНоменклатурнойГруппы<0 Тогда
		//	ФактическийОстатокНоменклатурнойГруппы=0;
		//КонецЕсли;
		//Если ФактическаяСуммаНоменклатурнойГруппы<0 Тогда 
		//	ФактическаяСуммаНоменклатурнойГруппы=0;
		//КонецЕсли;
		////НМА 09.02.18 <<
		//НоваяЦена = ОКР(Выборка1.Сумма/?(Выборка1.КоличествоОстаток=0,1,Выборка1.КоличествоОстаток),2); //НМА 27.12.17
		НоваяЦена = ОКР(ФактическаяСуммаНоменклатурнойГруппы/?(ФактическийОстатокНоменклатурнойГруппы=0,1,ФактическийОстатокНоменклатурнойГруппы),2); //НМА 11.01.18
		//НМА 27.12.17 учитывать количество документа без движений <<
		
		Если ТестовыйРежим Тогда
			Сообщить("Выравнивание цен по вкусам для номенклатурной группы "+Выборка1.НоменклатурнаяГруппа);
		КонецЕсли;
		Выборка2 = Выборка1.Выбрать();
		Пока Выборка2.Следующий() Цикл
			//НМА 27.12.17 учитывать количество документа без движений >>
			ФактическийОстаток = Выборка2.КоличествоОстаток;
			Если Источник <> Неопределено Тогда
				Если ДокументПроводится Тогда
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Номенклатура", Выборка2.Номенклатура);
					//НМА 26.04.18 из упаковок в штуки >>
					ТЗОстаткиДокумента=Источник.Товары.Выгрузить(ПараметрыОтбора,"Номенклатура,Количество,Коэффициент");
					Для Каждого СтрТЗОстаткиДокумента из ТЗОстаткиДокумента Цикл
						Если СтрТЗОстаткиДокумента.Коэффициент <> 1 Тогда 
							СтрТЗОстаткиДокумента.Количество = СтрТЗОстаткиДокумента.Количество * СтрТЗОстаткиДокумента.Коэффициент;
						КонецЕсли;
					КонецЦикла;
					//НМА 26.04.18 из упаковок в штуки <<
					ТЗОстаткиДокумента.Свернуть("Номенклатура","Количество");
					ФактическийОстаток = Выборка2.КоличествоОстаток+ТЗОстаткиДокумента.Итог("Количество");
				КонецЕсли;
			КонецЕсли;
			//НМА 09.02.18 >>
			Если ФактическийОстаток<0 Тогда
				ФактическийОстаток=0;	
			КонецЕсли;
			//НМА 09.02.18 <<
			//НМА 27.12.17 учитывать количество документа без движений <<
			ТекКоличествоНабрали = 0;

			Если ТестовыйРежим Тогда 
				//Сообщить("	номенклатура: "+Выборка2.Номенклатура+", остаток: "+Выборка2.КоличествоОстаток+", старая цена: "+Выборка2.ТекущаяЦена+", новая цена: "+НоваяЦена); //НМА 27.12.17 
				Сообщить("	номенклатура: "+Выборка2.Номенклатура+", остаток: "+ФактическийОстаток+", старая цена: "+Выборка2.ТекущаяЦена+", новая цена: "+НоваяЦена); //НМА 27.12.17 учитывать количество документа без движений
			КонецЕсли;
			Если НоваяЦена > 0 и НоваяЦена <> Выборка2.ТекущаяЦена Тогда
				НС = ДокЦен.Товары.Добавить();
				НС.Номенклатура = Выборка2.Номенклатура;
				ЕдИзмИКоэффициент = ЕдИзмИКоэффициент(Выборка2.Номенклатура);//03.11.2017, Юра
				НС.Цена = НоваяЦена * ЕдИзмИКоэффициент.Коэффициент;//НоваяЦена;
				НС.ЕдиницаИзмерения = ЕдИзмИКоэффициент.ЕдИзм;//Выборка2.Номенклатура.ЕдиницаХраненияОстатков;
				НС.ТипЦен = ТипЦены;
				НС.Валюта = ВалютаРегламентированногоУчета;
				
			КонецЕсли;
			//ВсегоКоличество = ВсегоКоличество + Выборка2.КоличествоОстаток;
			//ВсегоСумма = ВсегоСумма + Выборка2.КоличествоОстаток * Выборка2.Цена;
		КонецЦикла;
	КонецЦикла;
	
	Если ДокЦен.Товары.Количество() = 0 Тогда
		Если ТестовыйРежим Тогда
			Сообщить("Для типа цен "+ТипЦены+" для выравнивания цен по вкусам цены остались прежние, документ ""Установка цен номенклатуры"" создавать не нужно."); 
		КонецЕсли;
	Иначе
		Попытка
			Сек = 1; //НМА 31.01.18 Таймаут 1 секунда
			ОбщегоНазначения5LB.глТаймаут(Сек); //НМА 31.01.18 Таймаут 1 секунда
			ДокЦен.Дата = ТекущаяДата(); //НМА 31.01.18 Таймаут 1 секунда
			ДокЦен.Записать(РежимЗаписиДокумента.Проведение);
			Если ТестовыйРежим Тогда 
				Сообщить("Для типа цены "+ТипЦены+" создан документ для выравнивания цен по вкусам: "+ДокЦен.Ссылка);
			КонецЕсли;
		Исключение
			ТекстОшибки = "Не удалось выравнить цены по вкусам. "+ОписаниеОшибки();
			Сообщить (ТекстОшибки);
			ЗаписьЖурналаРегистрации("Выравнивание цен по вкусам",УровеньЖурналаРегистрации.Ошибка,,ДокументОснование,ТекстОшибки,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
			ДокЦен.Записать();//просто запишем, чтобы смотрели
		КонецПопытки;
	КонецЕсли;
	
	Если ТестовыйРежим Тогда
		Сообщить("Закончили расчет "+ТипЦены+" по вкусам в "+ТекущаяДата());
	КонецЕсли;

КонецПроцедуры

//09.10.2017, Юра
Функция НайтиИлиСоздатьДокументУстановкаЦенНоменклатуры(ДокОсн,ДатаОстатков, ТипЦены, Комментарий="") 
	ЭтоНовыйДок = Ложь; //НМА 27.12.17
	Если НЕ ЗначениеЗаполнено(ДокОсн) Тогда
		ТекДокОбъект = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
		ЭтоНовыйДок = Истина; //НМА 27.12.17
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	УстановкаЦенНоменклатурыТипыЦен.Ссылка
		               |ИЗ
		               |	Документ.УстановкаЦенНоменклатуры.ТипыЦен КАК УстановкаЦенНоменклатурыТипыЦен
		               |ГДЕ
		               |	УстановкаЦенНоменклатурыТипыЦен.ТипЦен.Ссылка = &ТипЦены
					   //|	И УстановкаЦенНоменклатурыТипыЦен.Ссылка.Дата = &ДатаОстатков //НМА 27.12.17
					   //|	И ВЫБОР
					   //|			КОГДА НЕ УстановкаЦенНоменклатурыТипыЦен.ТипЦен.Наименование ПОДОБНО ""Основной%""
					   //|				ТОГДА УстановкаЦенНоменклатурыТипыЦен.Ссылка.Дата = &ДатаОстатков
					   //|			ИНАЧЕ ИСТИНА
					   //|		КОНЕЦ
		               |	И НЕ УстановкаЦенНоменклатурыТипыЦен.Ссылка.ПометкаУдаления
		               |	И УстановкаЦенНоменклатурыТипыЦен.Ссылка.ДокументОснование = &ДокументОснование
		               |	И ВЫБОР
		               |			КОГДА &Комментарий = ""%%""
		               |				ТОГДА НЕ УстановкаЦенНоменклатурыТипыЦен.Ссылка.Комментарий ПОДОБНО ""%дополнительн%""
		               |						И НЕ УстановкаЦенНоменклатурыТипыЦен.Ссылка.Комментарий ПОДОБНО ""%вкус%""
		               |			ИНАЧЕ УстановкаЦенНоменклатурыТипыЦен.Ссылка.Комментарий ПОДОБНО &Комментарий
		               |		КОНЕЦ";
		Запрос.УстановитьПараметр("ДокументОснование", ДокОсн.Ссылка);
		//Запрос.УстановитьПараметр("ДатаОстатков",ДатаОстатков); //НМА 26.12.17 по запросу Шляхова Александра
		Запрос.УстановитьПараметр("ТипЦены", ТипЦены);
		Запрос.УстановитьПараметр("Комментарий","%"+Комментарий+"%");
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаКоличествоЗаписей = ВыборкаДетальныеЗаписи.Количество();
		Если ВыборкаКоличествоЗаписей = 0 Тогда
			ТекДокОбъект = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
			ЭтоНовыйДок = Истина; //НМА 27.12.17
		Иначе
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТекДокОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
				ТекДокОбъект.Товары.Очистить();
				Если ВыборкаКоличествоЗаписей > 1  Тогда
					ТекДокОбъект.Записать(?(ТекДокОбъект.Проведен,РежимЗаписиДокумента.ОтменаПроведения,РежимЗаписиДокумента.Запись));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ТекДокОбъект.ДокументОснование = ДокОсн.Ссылка;
	КонецЕсли;
	//НМА 26.12.17 по запросу Шляхова Александра >>
	Если Найти(ТипЦены.Наименование,"Основной") = 0 Тогда
		ТекДокОбъект.Дата = ТекущаяДата();
	Иначе
		ТекДокОбъект.Дата = ДатаОстатков;
	КонецЕсли;
	//НМА 26.12.17 по запросу Шляхова Александра <<
	//ТекДокОбъект.Дата = ДатаОстатков; //НМА 26.12.17 по запросу Шляхова Александра
	//НМА 27.12.17 >>
	Если ЭтоНовыйДок Тогда
		//НМА 28.12.17 Обновим нумерацию документа Установка цен номенклатуры >>
		Попытка
			ОбновитьНумерациюОбъектов(Метаданные.Документы.УстановкаЦенНоменклатуры);
		Исключение
		КонецПопытки;
		//НМА 28.12.17 Обновим нумерацию документа Установка цен номенклатуры <<
		ТекДокОбъект.УстановитьНовыйНомер();
		Если Комментарий = "дополнительн" Тогда
			ТекДокОбъект.Номер = "д"+Прав(ТекДокОбъект.Номер,10);
		КонецЕсли;
		ТекДокОбъект.НеПроводитьНулевыеЗначения = Истина;
	КонецЕсли;
	//НМА 27.12.17 <<
	ТекДокОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ТекДокОбъект.НеПроводитьНулевыеЗначения = Истина;
	Если ТекДокОбъект.ТипыЦен.Количество() = 0 Тогда
		НовДокСтр = ТекДокОбъект.ТипыЦен.Добавить();
		НовДокСтр.ТипЦен = ТипЦены;
	КонецЕсли;

	Возврат ТекДокОбъект;
	
КонецФункции

Функция СписокПредприятийХолдинга(ИННголовы,КППголовы) Экспорт 
	СписокПредприятийХолдинга = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Ссылка
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	(Контрагенты.ИНН = &ИНН И Контрагенты.КПП = &КПП)
	               |			ИЛИ (Контрагенты.ГоловнойКонтрагент.ИНН = &ИНН
	               |				И Контрагенты.ГоловнойКонтрагент.КПП = &КПП)";
	Запрос.УстановитьПараметр("ИНН",ИННголовы);
	Запрос.УстановитьПараметр("КПП",КППголовы);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокПредприятийХолдинга.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Возврат СписокПредприятийХолдинга;
КонецФункции

Функция СписокМагазинов_ПлюсОсновнойСклад() Экспорт
	СписокМагазинов_ПлюсОсновнойСклад = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Склад.Ссылка
	               |ИЗ
	               |	Справочник.Склады КАК Склад
	               |ГДЕ
	               |	(Склад.Ссылка = &ОсновнойСклад
	               |			ИЛИ Склад.Родитель = &ПапкаМагазинов)";
	Запрос.УстановитьПараметр("ОсновнойСклад",Справочники.Склады.НайтиПоНаименованию("Основной",Истина));
	Запрос.УстановитьПараметр("ПапкаМагазинов", Справочники.Склады.НайтиПоНаименованию("Магазины",Истина));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокМагазинов_ПлюсОсновнойСклад.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Возврат СписокМагазинов_ПлюсОсновнойСклад;
КонецФункции

//31.10.2017, Юра
Функция СписокНоменклатурыИзНоменклатуры(Номенклатура)
	СП = Новый СписокЗначений();
	Если Номенклатура.ЭтоГруппа Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Номенклатура.Ссылка
		               |ИЗ
		               |	Справочник.Номенклатура КАК Номенклатура
		               |ГДЕ
		               |	НЕ Номенклатура.ЭтоГруппа
		               |	И Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)";
		Запрос.УстановитьПараметр("Ссылка", Номенклатура);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СП.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	Иначе
		СП.Добавить(Номенклатура);
	КонецЕсли;
	Возврат СП;
КонецФункции

//07.11.2017, Юра
//Так нельзя делать (вызывается в цикле). По-хорошему нужно всё в запросе считать. Но мне осталось работать 2 дня до увольнения, поэтому переделывать основные запросы не хочу, чтобы их не сломать.
Функция ЕдИзмИКоэффициент(Номенклатура)
	ЕдИзмИКоэффициент = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЕдиницыИзмерения.Ссылка КАК ЕдИмз,
	               |	ЕдиницыИзмерения.Коэффициент
	               |ИЗ
	               |	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	               |ГДЕ
	               |	ЕдиницыИзмерения.Владелец = &Номенклатура
	               |	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору", Номенклатура.БазоваяЕдиницаИзмерения);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЕдИзмИКоэффициент.Вставить("ЕдИзм",ВыборкаДетальныеЗаписи.ЕдИмз);
		ЕдИзмИКоэффициент.Вставить("Коэффициент",ВыборкаДетальныеЗаписи.Коэффициент);
	Иначе
		ЕдИзмИКоэффициент.Вставить("ЕдИзм",Справочники.ЕдиницыИзмерения.ПустаяСсылка());
		ЕдИзмИКоэффициент.Вставить("Коэффициент",1);
	КонецЕсли;
	Возврат ЕдИзмИКоэффициент;
КонецФункции

//НМА 27.12.17
Процедура _5LB_ПриПроведенииПоступленияТоваровОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

#КонецОбласти

