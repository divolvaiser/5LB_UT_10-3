// Copyright (C) 2012-2016 Engineer Mareev Enterprises

Процедура ЭкспортОстатков() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	//	Если файл ERPEngine.xml находится не в C:\inetpub\ERPWebInterface\Settings\	укажите путь до него
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	//НМА 05.09.17 >>	
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Сообщить("Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		Возврат;
	КонецЕсли;
	//НМА 05.09.17 <<
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	ЭкспортироватьВсеОстатки(ERPData);
	
	EmeWmsERPEngine.Disconnect(ERPData);
КонецПроцедуры

// Процедура ЭкспортироватьВсеОстатки экспортирует остатки товаров.
Процедура ЭкспортироватьВсеОстатки(ERPData)
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "
	|ВЫБРАТЬ
	|	Ссылка КАК Склад
	|ПОМЕСТИТЬ ВТ_Склады
	|ИЗ
	|	Справочник.Склады
	|ГДЕ
	|	НЕ ПометкаУдаления;
	|
	|ВЫБРАТЬ
	|	Склад
	|ИЗ
	|	ВТ_Склады
	|;
	|
	|ВЫБРАТЬ
	|	Остатки.Склад КАК Склад,
	|	Остатки.Номенклатура КАК Номенклатура,
	|	СУММА(Остатки.КоличествоОстаток) КАК ВНаличии
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаОстатков) Остатки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Склады
	|		ПО Остатки.Склад = ВТ_Склады.Склад
	|СГРУППИРОВАТЬ ПО 
	|	Остатки.Склад,
	|	Остатки.Номенклатура
	|;
	|
	|ВЫБРАТЬ
	|	Обороты.Склад КАК Склад,
	|	Обороты.Регистратор КАК Регистратор,
	|	Обороты.Номенклатура КАК Номенклатура,
	|	СУММА(Обороты.КоличествоПриход) КАК ПриходТовара,
	|	СУММА(Обороты.КоличествоРасход) КАК РасходТовара
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Обороты(&НачалоПериода, &КонецПериода, Регистратор) Обороты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Склады
	|		ПО Обороты.Склад = ВТ_Склады.Склад
	|СГРУППИРОВАТЬ ПО 
	|	Обороты.Склад,
	|	Обороты.Регистратор,
	|	Обороты.Номенклатура";
	Запрос.УстановитьПараметр("ДатаОстатков",	НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоДня(НачалоДня(ТекущаяДата()) - 1));
	Запрос.УстановитьПараметр("КонецПериода",	НачалоДня(ТекущаяДата()) - 1);
	
	РезультатЗапроса	= Запрос.ВыполнитьПакет();
	Выборка				= РезультатЗапроса[1].Выбрать();
	ТаблицаОстатков		= РезультатЗапроса[2].Выгрузить();
	ТаблицаДвижений		= РезультатЗапроса[3].Выгрузить();
	
	ДатаВыгрузки		= НачалоДня(НачалоДня(ТекущаяДата()) - 1);
	
	ОдинСкладВEME = Ложь;
	СозданЗаголовок = Ложь;
	EmeWmsERPEngine.BeginExport(ERPData, "erp", "wms", "remains");
	Попытка
		ИдОстатков		= 1;
		ИдДвижений		= 1;
		Пока Выборка.Следующий() Цикл
			
			Если ОдинСкладВEME Тогда
				Если Не СозданЗаголовок Тогда
					EmeWmsERPEngine.AppendHeaderLine(ERPData);
					ERPData.header.id =			"WRH" + "." + Формат(ДатаВыгрузки, "ДФ=ггггММдд");
					ERPData.header.whs_code =	"WRH";
					ERPData.header.formed_at =	Формат(КонецДня(ДатаВыгрузки), "ДФ=ггггММддЧЧммсс");
					СозданЗаголовок = Истина;
				КонецЕсли
			Иначе
				Если Выборка.Склад.EmeWmsУчет = Null Тогда
					Продолжить
				КонецЕсли;
					
				Если Не Выборка.Склад.EmeWmsУчет Тогда
					Продолжить
				КонецЕсли;
				
				EmeWmsERPEngine.AppendHeaderLine(ERPData);
				ERPData.header.id =			СокрЛП(Выборка.Склад.EmeWmsКод) + "." + Формат(ДатаВыгрузки, "ДФ=ггггММдд");
				ERPData.header.whs_code =	СокрЛП(Выборка.Склад.EmeWmsКод);
				ERPData.header.formed_at =	Формат(КонецДня(ДатаВыгрузки), "ДФ=ггггММддЧЧммсс");
			КонецЕсли;
			
			//	Строки по остаткам.
			EmeWmsERPEngine.SelectChild(ERPData, "registers");
			
			СтрокиОстатков	= ТаблицаОстатков.НайтиСтроки(Новый Структура("Склад", Выборка.Склад));
			Для Сч = 0 По СтрокиОстатков.Количество() - 1 Цикл
				
				Если СтрокиОстатков[Сч].Номенклатура.ПометкаУдаления Тогда
					Продолжить
				КонецЕсли;
				
				Если СтрокиОстатков[Сч].Номенклатура.ВидНоменклатуры.Наименование = "Услуга" Тогда
					Продолжить
				КонецЕсли;
				
				EmeWmsERPEngine.AppendChildLine(ERPData);
				ERPData.registers.id 			= СтрЗаменить(Строка(ИдОстатков), Символы.НПП, "");
				ERPData.registers.goods_id		= СтрокиОстатков[Сч].Номенклатура.УникальныйИдентификатор();
				ERPData.registers.goods_code	= СокрЛП(СтрокиОстатков[Сч].Номенклатура.Код);
				ERPData.registers.remains_qty	= СтрЗаменить(Строка(СтрокиОстатков[Сч].ВНаличии), Символы.НПП, "");
				ERPData.registers.mu_code 		= СокрЛП(СтрокиОстатков[Сч].Номенклатура.БазоваяЕдиницаИзмерения.Код);
				ERPData.registers.lot_no		= "-";
				ERPData.registers.vendor_code	= "AIST";
				ИдОстатков	= ИдОстатков + 1;
			КонецЦикла;

			EmeWmsERPEngine.SelectChild(ERPData, "operations");
			
			СтрокиДвижений	= ТаблицаДвижений.НайтиСтроки(Новый Структура("Склад", Выборка.Склад));
			Для Сч = 0 По СтрокиДвижений.Количество() - 1 Цикл
				
				Если СтрокиДвижений[Сч].Номенклатура.ПометкаУдаления Тогда
					Продолжить
				КонецЕсли;
				
				Если СтрокиДвижений[Сч].Номенклатура.ВидНоменклатуры.Наименование = "Услуга" Тогда
					Продолжить
				КонецЕсли;
				
				EmeWmsERPEngine.AppendChildLine(ERPData);
				ERPData.operations.id 			= СтрЗаменить(Строка(ИдДвижений), Символы.НПП, "");
				ERPData.operations.executed_at	= Формат(СтрокиДвижений[Сч].Регистратор.Дата, "ДФ=ггггММддЧЧммсс");
				ERPData.operations.goods_id		= СтрокиДвижений[Сч].Номенклатура.УникальныйИдентификатор();
				ERPData.operations.goods_code	= СокрЛП(СтрокиДвижений[Сч].Номенклатура.Код);
				ERPData.operations.receipt_qty	= СтрЗаменить(Строка(СтрокиДвижений[Сч].ПриходТовара), Символы.НПП, "");
				ERPData.operations.offwrite_qty	= СтрЗаменить(Строка(СтрокиДвижений[Сч].РасходТовара), Символы.НПП, "");
				ERPData.operations.mu_code		= СокрЛП(СтрокиДвижений[Сч].Номенклатура.БазоваяЕдиницаИзмерения.Код);
				ERPData.operations.vendor_code	= "AIST";
				ERPData.operations.doc_reg_no	= СокрЛП(СтрокиДвижений[Сч].Регистратор.Номер);
				СтрокиДокумента					= СтрокиДвижений[Сч].Регистратор.Товары.НайтиСтроки(Новый Структура("Номенклатура", СтрокиДвижений[Сч].Номенклатура));
				Если СтрокиДокумента.Количество() > 0 Тогда
					ERPData.operations.doc_line_no	= СтрЗаменить(Формат(СтрокиДокумента[0].НомерСтроки, "ЧДЦ=0"), Символы.НПП, "");
				КонецЕсли;	
				Если НЕ (ТипЗнч(СтрокиДвижений[Сч].Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ
						ТипЗнч(СтрокиДвижений[Сч].Регистратор) = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ
						ТипЗнч(СтрокиДвижений[Сч].Регистратор) = Тип("ДокументСсылка.СписаниеТоваров")) Тогда
					ERPData.operations.is_skip =	1;	
				ИначеЕсли ТипЗнч(СтрокиДвижений[Сч].Регистратор) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
					//ERPData.operations.ext_reg_no =	СтрокиДвижений[Сч].Регистратор.ЗаказКлиента.Номер + "/" + Формат(СтрокиДвижений[Сч].Регистратор.ЗаказКлиента.Дата, "ДФ=гггг");										
					Попытка
						ERPData.operations.ext_reg_no =	СтрокиДвижений[Сч].Регистратор.ЗаказПокупателя.Номер;										
					Исключение
						ERPData.operations.ext_reg_no =	"???";
					КонецПопытки;
				Иначе
					ERPData.operations.ext_reg_no =	СокрЛП(СтрокиДвижений[Сч].Регистратор.EmeWmsНомер);	
					Если НЕ ЗначениеЗаполнено(СтрокиДвижений[Сч].Регистратор.EmeWmsНомер) Тогда
						ERPData.operations.is_skip =	1;	
					КонецЕсли;	
				КонецЕсли;		
				ИдДвижений	= ИдДвижений + 1;
			КонецЦикла;	
		КонецЦикла;		
		
		EmeWmsERPEngine.CommitExport(ERPData);
		
		Сообщить("Остатки проэкспортированы");
		
	Исключение
		EmeWmsERPEngine.RollbackExport(ERPData);
		ВызватьИсключение(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры
