// Copyright (C) 2012-2016 Engineer Mareev Enterprises

Процедура ИмпортироватьКомплектацииНоменклатуры(ERPData) Экспорт
	 
	ЗаголовкиСообщений = Новый ТаблицаЗначений();
	EmeWmsERPEngine.GetHeaders(ERPData, "wms", "erp", "repack", "NEW,WRN", ЗаголовкиСообщений);
	
	Счетчик = 0;
	Для Каждого ЗаголовокСообщения Из ЗаголовкиСообщений Цикл
		
		//	ВАЖНО! Транзакция источника сообщения должна быть внешней	
		EmeWmsERPEngine.BeginImport(ERPData, "wms", "erp", "repack", ЗаголовокСообщения.id);
		Попытка
			НовоеСообщение = (ЗаголовокСообщения.state = "NEW");
			Трассировка = "";
			ТемаСообщения = "";
			НачатьТранзакцию();
			Попытка
				Пока EmeWmsERPEngine.NextHeaderLine(ERPData) <> 0 Цикл
					ИмпортироватьКомплектациюНоменклатуры(ERPData, Трассировка, ТемаСообщения);
					Счетчик = Счетчик + 1;
				КонецЦикла;
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ВызватьИсключение(ОписаниеОшибки());
			КонецПопытки;
			EmeWmsERPEngine.CommitImport(ERPData);
			Если НовоеСообщение И ТемаСообщения <> "" Тогда
				EmeWmsУтилиты.СообщитьПоПочте(
					ТемаСообщения,
					"ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС +
					"ID: " + ЗаголовокСообщения.id + Символы.ПС +
					"No: " + ЗаголовокСообщения.repack_erp_no + Символы.ПС +
					Трассировка);
			КонецЕсли
		Исключение
			EmeWmsERPEngine.RollbackImport(ERPData);
			Ошибка = ОписаниеОшибки();
			Сообщить(Ошибка);
			ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Импорт сообщений REPACK: " + Ошибка);
			EmeWmsУтилиты.СообщитьПоПочте(
				"Критическая ошибка импорта сообщения REPACK",
				"ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС +
				"ID: " + ЗаголовокСообщения.id + Символы.ПС +
				"No: " + ЗаголовокСообщения.repack_erp_no + Символы.ПС +
				Ошибка);
		КонецПопытки;
	КонецЦикла;
	 		
	Если Счетчик <> 0 Тогда
		Сообщить("Проимпортировали сообщения REPACK (" + Счетчик + "шт)");
	КонецЕсли
	
КонецПроцедуры

Процедура ИмпортироватьКомплектациюНоменклатуры(ERPData, Трассировка, ТемаСообщения)
	
	//*** Делаем проверки ***
	
	//	Проверим наличие комплектации товара
	КомплектацияСсылка = EmeWmsУтилиты.ПолучитьКомплектациюТовара(ERPData.header.id);
	Если КомплектацияСсылка.Пустая() Тогда
		EmeWmsERPEngine.ErrorHeader(ERPData, "REPBAD");
		Возврат
	КонецЕсли;
	
	//	Соберем товары и количества в карту соответствий (ключ - ссылка на товар, значение - количество)
	КоличестваТоваров = Новый Соответствие();
	EmeWmsERPEngine.SelectChild(ERPData, "lines");
	Пока EmeWmsERPEngine.NextChildLine(ERPData) Цикл
		
		УИДТовара = ERPData.lines.src_goods_id;
		Если УИДТовара = "" Тогда
			EmeWmsERPEngine.ErrorChild(ERPData, "SRCNUL");
			Продолжить
		КонецЕсли;
		
		ТоварСсылка = EmeWmsУтилиты.ПолучитьСсылкуНаТовар(УИДТовара);
		Если ТоварСсылка.Пустая() Тогда
			EmeWmsERPEngine.ErrorChild(ERPData, "SRCBAD");
			Продолжить
		КонецЕсли;
		
		Количество = ERPData.lines.src_quantity;
		СтароеКоличество = КоличестваТоваров.Получить(ТоварСсылка);
		Если СтароеКоличество = Неопределено Тогда
			НовоеКоличество = Количество;
		Иначе
			НовоеКоличество = СтароеКоличество + Количество;
		КонецЕсли;
		
		КоличестваТоваров.Вставить(ТоварСсылка, НовоеКоличество);
		
	КонецЦикла;
	
	//	Если были ошибки в номенклатуре - выйдем
	Если EmeWmsERPEngine.HasErrors(ERPData) Тогда
		Возврат
	КонецЕсли;
	
	//	Трассировка начальных количеств
	Трассировка = Трассировка + Символы.ПС + "Переупаковка EME " + ERPData.header.repack_wms_no + Символы.ПС;
	EmeWmsУтилиты.ТрассировкаКоличествТоваров(Трассировка, КоличестваТоваров);
	EmeWmsERPEngine.Success(ERPData);
	
	//	Трассировка комплектаций
	Трассировка = Трассировка + Символы.ПС + КомплектацияСсылка + Символы.ПС;
	EmeWmsУтилиты.ТрассировкаТабличнойЧастиТоваров(Трассировка, КомплектацияСсылка.Комплектующие);
	
	//	Сверимся
	EmeWmsУтилиты.ВычестьКоличестваТоваровПоДокументу(КоличестваТоваров, КомплектацияСсылка.Комплектующие);
	Если КоличестваТоваров.Количество() <> 0 Тогда
		Трассировка = Трассировка + Символы.ПС + "Остался нераспределенный товар:" + Символы.ПС;
		EmeWmsУтилиты.ТрассировкаКоличествТоваров(Трассировка, КоличестваТоваров);
		ТемаСообщения = "Избыток/недостача товара в комплектации номенклатуры " + ERPData.header.repack_erp_no;
		EmeWmsERPEngine.WarningHeader(ERPData, "QTYBAD");
		Возврат
	КонецЕсли;
	
	//*** Проверки сделали, пишем в базу данных 1C ***
	
	Комплектация = КомплектацияСсылка.ПолучитьОбъект();
	Комплектация.EmeWmsНомер = ERPData.header.repack_wms_no;
	Комплектация.EmeWmsДатаИмпорта = ТекущаяДата();
	Комплектация.Записать(РежимЗаписиДокумента.Проведение);
	
	EmeWmsERPEngine.Success(ERPData);
	
КонецПроцедуры

//Процедура ИмпортироватьКомплектациюНоменклатурыСтараяВерсия(ERPData, Трассировка, Сообщить)
//	
//	НомерПереупаковкиEME  		= ERPData.header.id;              //	Номер переупаковки EME
//	КодСклада					= ERPData.header.whs_code;        //	Код склада переупаковки
//	КодОрганизации   			= ERPData.header.vendor_code;     //	Код организации переупаковки

//	//	ПРОВЕРКА ШАПКИ ДОКУМЕНТА

//	//	Найдем оператора
//	//СсылкаНаОператора = Справочники.Пользователи.НайтиПоРеквизиту("ЛогинEME", ERPData.header.operator);
//	
//	//	Проверим наличие ранее проимпортированной переупаковки
//	ЗапросПоНомеруЕМЕ = Новый Запрос();
//	ЗапросПоНомеруЕМЕ.Текст =
//		"ВЫБРАТЬ
//		|	КомплектацияНоменклатуры.Ссылка КАК Ссылка
//		|ИЗ
//		|	Документ.КомплектацияНоменклатуры КАК КомплектацияНоменклатуры
//		|ГДЕ
//		|	КомплектацияНоменклатуры.EmeWmsНомер = &НомерПереупаковкиEME И
//		|	НЕ КомплектацияНоменклатуры.ПометкаУдаления";
//	ЗапросПоНомеруЕМЕ.УстановитьПараметр("НомерПереупаковкиEME", НомерПереупаковкиEME);
//	ВыборкаПоНомеруЕМЕ = ЗапросПоНомеруЕМЕ.Выполнить().Выбрать();
//	Если ВыборкаПоНомеруЕМЕ.Следующий() Тогда
//		EmeWmsERPEngine.ErrorHeader(ERPData, "IDEXST");
//		Возврат
//	КонецЕсли;
//	
//	//	Проверим наличие склада
//	Если Не ЗначениеЗаполнено(КодСклада) Тогда
//		EmeWmsERPEngine.ErrorHeader(ERPData, "WHSNUL");
//		Возврат
//	Иначе
//		СсылкаНаСклад = Справочники.Склады.НайтиПоРеквизиту("EmeWmsКод", КодСклада);
//		Если СсылкаНаСклад.Пустая() Тогда
//			EmeWmsERPEngine.ErrorHeader(ERPData, "WHSBAD");
//			Возврат
//		КонецЕсли
//	КонецЕсли;

//	//	Проверим наличие организации
//	Если Не ЗначениеЗаполнено(КодОрганизации) Тогда
//		EmeWmsERPEngine.ErrorHeader(ERPData, "VNDNUL");
//		Возврат
//	Иначе
//		//СсылкаНаОрганизацию	= Справочники.Организации.НайтиПоРеквизиту("КодEME", КодОрганизации);
//		//Если СсылкаНаОрганизацию.Пустая() Тогда               
//		//	EmeWmsERPEngine.ErrorHeader(ERPData, "VNDBAD");	
//		//КонецЕсли;
//		//СсылкаНаОрганизацию	= Справочники.Организации.НайтиПоНаименованию("Управленческая организация");
//	КонецЕсли;

//	//	Проверим товары
//	EmeWmsERPEngine.SelectChild(ERPData, "lines");
//	Пока EmeWmsERPEngine.NextChildLine(ERPData) Цикл
//		
//		КодТовара = ERPData.lines.dst_goods_code;
//		Если Не ЗначениеЗаполнено(КодТовара) Тогда
//			EmeWmsERPEngine.ErrorChild(ERPData, "GDSNUL");
//		Иначе
//			СсылкаНаТовар = EmeWmsУтилиты.ПолучитьСсылку("Номенклатура", КодТовара);
//			Если СсылкаНаТовар.Пустая() Тогда
//				EmeWmsERPEngine.ErrorChild(ERPData, "GDSBAD");
//			КонецЕсли;
//		КонецЕсли;
//		
//		Если ERPData.lines.dst_quantity = 0. Тогда
//			EmeWmsERPEngine.ErrorChild(ERPData, "QDSNUL");
//		КонецЕсли;
//			
//		КодТовара = ERPData.lines.src_goods_code;
//		Если Не ЗначениеЗаполнено(КодТовара) Тогда
//			EmeWmsERPEngine.ErrorChild(ERPData, "GSRNUL");
//		Иначе
//			СсылкаНаТовар = EmeWmsУтилиты.ПолучитьСсылку("Номенклатура", КодТовара);
//			Если СсылкаНаТовар.Пустая() Тогда
//				EmeWmsERPEngine.ErrorChild(ERPData, "GSRBAD");
//			КонецЕсли;
//		КонецЕсли;
//		
//		Если ERPData.lines.src_quantity = 0. Тогда
//			EmeWmsERPEngine.ErrorChild(ERPData, "QSRNUL");
//		КонецЕсли;
//	КонецЦикла;		

//	Если EmeWmsERPEngine.HasErrors(ERPData) Тогда
//		Ошибка = ОписаниеОшибки();
//		Сообщить(Ошибка);
//		Возврат;
//	КонецЕсли;
//	
//	//	Проверки сделали - пишем в БД
//	КомплектацияТоваров = Неопределено;
//	EmeWmsERPEngine.SelectChild(ERPData, "lines");
//	Пока EmeWmsERPEngine.NextChildLine(ERPData) Цикл
//		
//		Если КомплектацияТоваров = Неопределено Тогда
//			КомплектацияТоваров = Документы.КомплектацияНоменклатуры.СоздатьДокумент();
//			КомплектацияТоваров.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация;
//			КомплектацияТоваров.Дата = ТекущаяДата();
//			КомплектацияТоваров.ОтражатьВУправленческомУчете = Истина;
//			КомплектацияТоваров.ОтражатьВБухгалтерскомУчете = Истина;
//			КомплектацияТоваров.ОтражатьВНалоговомУчете = Истина;
//			КомплектацияТоваров.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
//			//КомплектацияТоваров.Ответственный = СсылкаНаОператора;
//			//КомплектацияТоваров.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.КомплектацияИзКомплектующих;
//			//КомплектацияТоваров.КомплектацияПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
//			КомплектацияТоваров.Склад = СсылкаНаСклад;
//			КомплектацияТоваров.Организация = Справочники.Организации.НайтиПоНаименованию("ОФ");
//			КомплектацияТоваров.Подразделение = Справочники.Подразделения.НайтиПоНаименованию("Отдел Закупок");
//			КомплектацияТоваров.Номенклатура = EmeWmsУтилиты.ПолучитьСсылку("Номенклатура", ERPData.lines.dst_goods_code);
//			КомплектацияТоваров.Количество = ERPData.lines.dst_quantity;
//			КомплектацияТоваров.Коэффициент = 1;
//			КомплектацияТоваров.ЕдиницаИзмерения = EmeWmsУтилиты.ПолучитьЕдиницуИзмерения(
//				КомплектацияТоваров.Номенклатура,
//				КомплектацияТоваров.Номенклатура.БазоваяЕдиницаИзмерения);
//			КомплектацияТоваров.EmeWmsНомер = НомерПереупаковкиEME;
//		КонецЕсли;
//		
//		СтрокаКомплектацииТоваров = КомплектацияТоваров.Комплектующие.Добавить();
//		СтрокаКомплектацииТоваров.Номенклатура = EmeWmsУтилиты.ПолучитьСсылку("Номенклатура", ERPData.lines.src_goods_code);
//		СтрокаКомплектацииТоваров.Количество = ERPData.lines.src_quantity;
//		СтрокаКомплектацииТоваров.Коэффициент = 1;
//		СтрокаКомплектацииТоваров.ЕдиницаИзмерения = EmeWmsУтилиты.ПолучитьЕдиницуИзмерения(
//			СтрокаКомплектацииТоваров.Номенклатура,
//			СтрокаКомплектацииТоваров.Номенклатура.БазоваяЕдиницаИзмерения);
//		
//	КонецЦикла;		
//	
//	КомплектацияТоваров.УстановитьНовыйНомер();
//	КомплектацияТоваров.Записать(РежимЗаписиДокумента.Запись);
//	
//	EmeWmsERPEngine.Success(ERPData);
//	
//КонецПроцедуры
