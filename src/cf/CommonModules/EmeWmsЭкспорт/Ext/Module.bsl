// Copyright (C) 2012-2016 Engineer Mareev Enterprises

//	Процедура Экспортировать экспортирует все сообщения в базу данных
Процедура Экспортировать() Экспорт
	
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	//	Если файл ERPEngine.xml находится не в C:\inetpub\ERPWebInterface\Settings\	укажите путь до него
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Сообщить("Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		Возврат;
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортПоступленийТоваров.ЭкспортироватьПоступление(ERPData);  //НМА 01.07.17
		EmeWmsЭкспортЗаказовПоставщикам.ЭкспортироватьЗаказыПоставщикам(ERPData);
		EmeWmsЭкспортЗаказовПокупателей.ЭкспортироватьЗаказыПокупателей(ERPData);
		EmeWmsЭкспортПеремещенийТоваров.ЭкспортироватьПеремещенияТоваровКакПриходы(ERPData);
		EmeWmsЭкспортПеремещенийТоваров.ЭкспортироватьПеремещенияТоваровКакОтгрузки(ERPData);
		EmeWmsЭкспортВозвратовТоваровОтПокупателей.ЭкспортироватьВозвратыТоваровОтПокупателей(ERPData);
		EmeWmsЭкспортВозвратовТоваровПоставщикам.ЭкспортироватьВозвратыТоваровПоставщикамКакПриходы(ERPData); //НМА 04.12.17
		EmeWmsЭкспортВозвратовТоваровПоставщикам.ЭкспортироватьВозвратыТоваровПоставщикамКакОтгрузки(ERPData); //НМА 04.12.17
		//EmeWmsЭкспортКомплектацийНоменклатуры.ЭкспортироватьКомплектацииНоменклатуры(ERPData);
	Исключение
			Ошибка = ОписаниеОшибки();
			Сообщить(Ошибка);
			ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
			ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
			ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
			EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
	КонецПопытки;
	
	EmeWmsERPEngine.Disconnect(ERPData);
	
КонецПроцедуры

//НМА 28.08.17 >>
Процедура РегламентЭкспортироватьЗаказыПоставщикам() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	//	Если файл ERPEngine.xml находится не в C:\inetpub\ERPWebInterface\Settings\	укажите путь до него
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Сообщить("Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		Возврат;
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Статус_УТ11 = &Статус_УТ11
	|	И ЗаказПоставщику.Дата >= &ДатаНачалаВыгрузки
	//|	И ЗаказПоставщику.ПометкаУдаления = ЛОЖЬ
	|	И ЗаказПоставщику.Проведен = ИСТИНА
	|	И ЗаказПоставщику.Склад.EmeWmsУчет = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщику.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", Константы.ДатаНачалаИспользованияИнтеграцииСEME_WMS.Получить());
	Запрос.УстановитьПараметр("Статус_УТ11", Перечисления.СтатусыЗаказовПоставщикам_УТ11.Подтвержден);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументКВыгрузке = ВыборкаДетальныеЗаписи.Ссылка;
		Если Не EmeWmsЭкспортЗаказовПоставщикам.ПомеченКЭкспорту(ДокументКВыгрузке) Тогда
			Для Каждого стр из ДокументКВыгрузке.Товары Цикл
				Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
					НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
				Иначе
					НоменклатураДляЭкспорта = стр.Номенклатура;
				КонецЕсли;
				Если Не НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
					EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта.ПолучитьОбъект());
					Сообщить(НоменклатураДляЭкспорта.Наименование+ "| помечен к экспорту");
				КонецЕсли;
			КонецЦикла;
			EmeWmsЭкспортЗаказовПоставщикам.ПометитьКЭкспорту(ДокументКВыгрузке.ПолучитьОбъект());
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортЗаказовПоставщикам.ЭкспортироватьЗаказыПоставщикам(ERPData);
	Исключение
		Ошибка = ОписаниеОшибки();
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
		ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
		ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
		EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
	КонецПопытки;
	EmeWmsERPEngine.Disconnect(ERPData);
	
КонецПроцедуры

Процедура РегламентЭкспортироватьЗаказыПокупателей() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	//	Если файл ERPEngine.xml находится не в C:\inetpub\ERPWebInterface\Settings\	укажите путь до него
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Сообщить("Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		Возврат;
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЗаказПокупателя.Ссылка КАК Ссылка
	//|ИЗ
	//|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	//|ГДЕ
	//|	ЗаказПокупателя.СтатусыСборкиЗаказа = &СтатусыСборкиЗаказа
	//|	И ЗаказПокупателя.Дата >= &ДатаНачалаВыгрузки
	//|	И ЗаказПокупателя.Проведен = ИСТИНА
	//|	И ЗаказПокупателя.СкладГруппа.EmeWmsУчет = ИСТИНА
	//|	И ВЫБОР
	//|			КОГДА ЗаказПокупателя.ПунктСамовывоза <> &ПустойСклад
	//|				ТОГДА ЗаказПокупателя.ДатаОплаты <> ДАТАВРЕМЯ(1, 1, 1)
	//|			ИНАЧЕ ИСТИНА
	//|		КОНЕЦ
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ЗаказПокупателя.Ссылка
	//|
	////|ОБЪЕДИНИТЬ
	////|
	////|ВЫБРАТЬ
	////|	ЗаказПокупателя.Ссылка
	////|ИЗ
	////|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	////|ГДЕ
	//////|	(ЗаказПокупателя.Статус = &СтатусЗаказа
	////|	ЗаказПокупателя.ПометкаУдаления = ИСТИНА
	//////|	ЗаказПокупателя.Статус = &СтатусЗаказа
	////|	И ЗаказПокупателя.Дата >= &ДатаНачалаВыгрузки
	////|	И ЗаказПокупателя.СкладГруппа.EmeWmsУчет = ИСТИНА
	//////|	И ЗаказПокупателя.СтатусыСборкиЗаказа <> &ОтправленНаСклад
	////|
	////|СГРУППИРОВАТЬ ПО
	////|	ЗаказПокупателя.Ссылка
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Ссылка
	//|АВТОУПОРЯДОЧИВАНИЕ";
	//Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", Константы.ДатаНачалаИспользованияИнтеграцииСEME_WMS.Получить());
	//Запрос.УстановитьПараметр("СтатусыСборкиЗаказа", Перечисления.СтатусыСборкиЗаказа.ГотовКСборке);
	//Запрос.УстановитьПараметр("СтатусЗаказа", Справочники.Пользователи.НайтиПоНаименованию("***ОТМЕНА***",Истина));
	//Запрос.УстановитьПараметр("ОтправленНаСклад", Перечисления.СтатусыСборкиЗаказа.ОтправленНаСклад);
	//Запрос.УстановитьПараметр("ПустойСклад",Справочники.Склады.ПустаяСсылка());
	//РезультатЗапроса = Запрос.Выполнить();
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	ДокументКВыгрузке = ВыборкаДетальныеЗаписи.Ссылка;
	//	Если Не EmeWmsЭкспортЗаказовПокупателей.ПомеченКЭкспорту(ДокументКВыгрузке) Тогда
	//		Для Каждого стр из ДокументКВыгрузке.Товары Цикл
	//			Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
	//				НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
	//			Иначе
	//				НоменклатураДляЭкспорта = стр.Номенклатура;
	//			КонецЕсли;
	//			Если Не НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
	//				EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта.ПолучитьОбъект());
	//				Сообщить(НоменклатураДляЭкспорта.Наименование+ "| помечен к экспорту");
	//			КонецЕсли;
	//		КонецЦикла;
	//		EmeWmsЭкспортЗаказовПокупателей.ПометитьКЭкспорту(ДокументКВыгрузке.ПолучитьОбъект());
	//	КонецЕсли;
	//КонецЦикла;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортЗаказовПокупателей.ЭкспортироватьЗаказыПокупателей(ERPData);
	Исключение
		Ошибка = ОписаниеОшибки();
		//Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
		ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
		ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
		EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
	КонецПопытки;
	EmeWmsERPEngine.Disconnect(ERPData);
	
КонецПроцедуры

//НМА 31.08.17 >>
Процедура РегламентЭкспортироватьПеремещенияНаМагазины() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	//	Если файл ERPEngine.xml находится не в C:\inetpub\ERPWebInterface\Settings\	укажите путь до него
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Сообщить("Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		Возврат;
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Дата >= &ДатаНачалаВыгрузки
	|	И ПеремещениеТоваров.ПометкаУдаления = ЛОЖЬ
	//|	И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПеремещениеТоваров.ДатаПлан, ДЕНЬ), ДЕНЬ, -1) <= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) //передавать все перемещения товаров
	|	И ПеремещениеТоваров.СкладОтправитель.EmeWmsУчет = ИСТИНА
	|	И ПеремещениеТоваров.СкладПолучатель.Родитель.Наименование = ""Магазины""
	|	И ПеремещениеТоваров.СтатусСборки = &СтатусыСборкиЗаказа
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваров.Ссылка
	|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ
	//|	ПеремещениеТоваров.Ссылка
	//|ИЗ
	//|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	//|ГДЕ
	//|	ПеремещениеТоваров.ПометкаУдаления = ИСТИНА
	//|	И ПеремещениеТоваров.Дата >= &ДатаНачалаВыгрузки
	//|	И ПеремещениеТоваров.СкладОтправитель.EmeWmsУчет = ИСТИНА
	//|	И ПеремещениеТоваров.СкладПолучатель.Родитель.Наименование = ""Магазины""
	//|	И ПеремещениеТоваров.СтатусСборки <> &ОтправленНаСклад
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ПеремещениеТоваров.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", Константы.ДатаНачалаИспользованияИнтеграцииСEME_WMS.Получить());
	Запрос.УстановитьПараметр("СтатусыСборкиЗаказа", Перечисления.СтатусыСборкиЗаказа.ГотовКСборке);
	Запрос.УстановитьПараметр("ОтправленНаСклад", Перечисления.СтатусыСборкиЗаказа.ОтправленНаСклад);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументКВыгрузке = ВыборкаДетальныеЗаписи.Ссылка;
		Если Не EmeWmsЭкспортПеремещенийТоваров.ПомеченКЭкспорту(ДокументКВыгрузке) Тогда
			Для Каждого стр из ДокументКВыгрузке.Товары Цикл
				Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
					НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
				Иначе
					НоменклатураДляЭкспорта = стр.Номенклатура;
				КонецЕсли;
				Если Не НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
					EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта.ПолучитьОбъект());
					Сообщить(НоменклатураДляЭкспорта.Наименование+ "| помечен к экспорту");
				КонецЕсли;
			КонецЦикла;
			EmeWmsЭкспортПеремещенийТоваров.ПометитьКЭкспорту(ДокументКВыгрузке.ПолучитьОбъект());
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортПеремещенийТоваров.ЭкспортироватьПеремещенияТоваровКакОтгрузки(ERPData);
	Исключение
		Ошибка = ОписаниеОшибки();
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
		ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
		ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
		EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
	КонецПопытки;
	EmeWmsERPEngine.Disconnect(ERPData);
КонецПроцедуры
//НМА 31.08.17 <<

//НМА 28.11.17 >>
Процедура РегламентЭкспортироватьПеремещенияИзМагазиновНаСклад_ASN_трансфер() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	//	Если файл ERPEngine.xml находится не в C:\inetpub\ERPWebInterface\Settings\	укажите путь до него
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Сообщить("Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Не найден файл ERPEngine.xml!"); //НМА 05.09.17
		Возврат;
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Дата >= &ДатаНачалаВыгрузки
	|	И ПеремещениеТоваров.ПометкаУдаления = ЛОЖЬ
	//|	И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПеремещениеТоваров.ДатаПлан, ДЕНЬ), ДЕНЬ, -1) <= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) //передавать все перемещения товаров
	|	И ПеремещениеТоваров.СкладОтправитель.Родитель.Наименование = ""Магазины""
	|	И ПеремещениеТоваров.СкладПолучатель.EmeWmsУчет = ИСТИНА
	|	И ПеремещениеТоваров.СтатусСборки = &СтатусыСборкиЗаказа
	|	И ПеремещениеТоваров.EmeWmsДатаИмпорта = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваров.Ссылка
	|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ
	//|	ПеремещениеТоваров.Ссылка
	//|ИЗ
	//|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	//|ГДЕ
	//|	ПеремещениеТоваров.ПометкаУдаления = ИСТИНА
	//|	И ПеремещениеТоваров.Дата >= &ДатаНачалаВыгрузки
	//|	И ПеремещениеТоваров.СкладОтправитель.EmeWmsУчет = ИСТИНА
	//|	И ПеремещениеТоваров.СкладПолучатель.Родитель.Наименование = ""Магазины""
	//|	И ПеремещениеТоваров.СтатусСборки <> &ОтправленНаСклад
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ПеремещениеТоваров.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", Константы.ДатаНачалаИспользованияИнтеграцииСEME_WMS.Получить());
	Запрос.УстановитьПараметр("СтатусыСборкиЗаказа", Перечисления.СтатусыСборкиЗаказа.Собран);
	Запрос.УстановитьПараметр("ОтправленНаСклад", Перечисления.СтатусыСборкиЗаказа.ОтправленНаСклад);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументКВыгрузке = ВыборкаДетальныеЗаписи.Ссылка;
		Если Не EmeWmsЭкспортПеремещенийТоваров.ПомеченКЭкспорту(ДокументКВыгрузке) Тогда
			Для Каждого стр из ДокументКВыгрузке.Товары Цикл
				Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
					НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
				Иначе
					НоменклатураДляЭкспорта = стр.Номенклатура;
				КонецЕсли;
				Если Не НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
					EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта.ПолучитьОбъект());
					Сообщить(НоменклатураДляЭкспорта.Наименование+ "| помечен к экспорту");
				КонецЕсли;
			КонецЦикла;
			EmeWmsЭкспортПеремещенийТоваров.ПометитьКЭкспорту(ДокументКВыгрузке.ПолучитьОбъект());
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортПеремещенийТоваров.ЭкспортироватьПеремещенияТоваровКакПриходы(ERPData);
	Исключение
		Ошибка = ОписаниеОшибки();
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
		ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
		ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
		EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
	КонецПопытки;
	EmeWmsERPEngine.Disconnect(ERPData);
КонецПроцедуры

Процедура РегламентЭкспортироватьВнутренниеПеремещения() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Не найден файл ERPEngine.xml!");
		Возврат;
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Дата >= &ДатаНачалаВыгрузки
	|	И ПеремещениеТоваров.ПометкаУдаления = ЛОЖЬ
	|	И ПеремещениеТоваров.СкладОтправитель.EmeWmsУчет = ИСТИНА
	|	И ПеремещениеТоваров.СкладПолучатель.EmeWmsУчет = ИСТИНА
	|	И ПеремещениеТоваров.СтатусСборки = &СтатусыСборкиЗаказа
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваров.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", Константы.ДатаНачалаИспользованияИнтеграцииСEME_WMS.Получить());
	Запрос.УстановитьПараметр("СтатусыСборкиЗаказа", Перечисления.СтатусыСборкиЗаказа.ГотовКСборке);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументКВыгрузке = ВыборкаДетальныеЗаписи.Ссылка;
		Если Не EmeWmsЭкспортПеремещенийТоваров.ПомеченКЭкспорту(ДокументКВыгрузке) Тогда
			Для Каждого стр из ДокументКВыгрузке.Товары Цикл
				Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
					НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
				Иначе
					НоменклатураДляЭкспорта = стр.Номенклатура;
				КонецЕсли;
				Если Не НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
					EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта.ПолучитьОбъект());
				КонецЕсли;
			КонецЦикла;
			EmeWmsЭкспортПеремещенийТоваров.ПометитьКЭкспорту(ДокументКВыгрузке.ПолучитьОбъект());
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортПеремещенийТоваров.ЭкспортироватьПеремещенияТоваровКакВнутренние(ERPData);
	Исключение
		Ошибка = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
		ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
		ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
	КонецПопытки;
	EmeWmsERPEngine.Disconnect(ERPData);
КонецПроцедуры


Процедура РегламентЭкспортироватьВозвратыТоваровОтПокупателя_ASN_возврат() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	//	Если файл ERPEngine.xml находится не в C:\inetpub\ERPWebInterface\Settings\	укажите путь до него
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Возврат
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Дата >= &ДатаНачалаВыгрузки
	|	И ВозвратТоваровОтПокупателя.ПометкаУдаления = ЛОЖЬ
	//|	И ВозвратТоваровОтПокупателя.Проведен = ИСТИНА
	|	И ВозвратТоваровОтПокупателя.СкладОрдер.EmeWmsУчет = ИСТИНА
	|	И ВозвратТоваровОтПокупателя.СтатусСборки = &СтатусСборки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровОтПокупателя.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", Константы.ДатаНачалаИспользованияИнтеграцииСEME_WMS.Получить());
	Запрос.УстановитьПараметр("СтатусСборки", Перечисления.СтатусыСборкиЗаказа.ГотовКСборке);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументКВыгрузке = ВыборкаДетальныеЗаписи.Ссылка;
		Если Не EmeWmsЭкспортЗаказовПоставщикам.ПомеченКЭкспорту(ДокументКВыгрузке) Тогда
			Для Каждого стр из ДокументКВыгрузке.Товары Цикл
				Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
					НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
				Иначе
					НоменклатураДляЭкспорта = стр.Номенклатура;
				КонецЕсли;
				Если Не НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
					EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта.ПолучитьОбъект());
					Сообщить(НоменклатураДляЭкспорта.Наименование+ "| помечен к экспорту");
				КонецЕсли;
			КонецЦикла;
			EmeWmsЭкспортВозвратовТоваровОтПокупателей.ПометитьКЭкспорту(ДокументКВыгрузке.ПолучитьОбъект());
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортВозвратовТоваровОтПокупателей.ЭкспортироватьВозвратыТоваровОтПокупателей(ERPData);
	Исключение
		Ошибка = ОписаниеОшибки();
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
		ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
		ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
		EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
	КонецПопытки;
	EmeWmsERPEngine.Disconnect(ERPData);
КонецПроцедуры
//НМА 28.11.17 <<

//НМА 07.12.17
Процедура РегламентЭкспортироватьВозвратыПоставщикам_ORDERS_возврат() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	//	Если файл ERPEngine.xml находится не в C:\inetpub\ERPWebInterface\Settings\	укажите путь до него
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Возврат
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВозвратПоставщику.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратПоставщику
	|ГДЕ
	|	ВозвратПоставщику.Статус = &Статус
	|	И ВозвратПоставщику.Дата >= &ДатаНачалаВыгрузки
	|	И ВозвратПоставщику.Склад.EmeWmsУчет = Истина
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратПоставщику.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", Константы.ДатаНачалаИспользованияИнтеграцииСEME_WMS.Получить());
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыВозвратовПоставщикам.Подтвержден);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументКВыгрузке = ВыборкаДетальныеЗаписи.Ссылка;
		Если Не EmeWmsЭкспортВозвратовТоваровПоставщикам.ПомеченКЭкспорту(ДокументКВыгрузке) Тогда
			Для Каждого стр из ДокументКВыгрузке.Товары Цикл
				Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
					НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
				Иначе
					НоменклатураДляЭкспорта = стр.Номенклатура;
				КонецЕсли;
				Если Не НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
					EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта);
					Сообщить(НоменклатураДляЭкспорта.Наименование+ "| помечен к экспорту");
				КонецЕсли;
			КонецЦикла;
			EmeWmsЭкспортВозвратовТоваровПоставщикам.ПометитьКЭкспорту(ДокументКВыгрузке);
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортВозвратовТоваровПоставщикам.ЭкспортироватьВозвратыТоваровПоставщикамКакОтгрузки(ERPData);
	Исключение
		Ошибка = ОписаниеОшибки();
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
		ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
		ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
		//EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
	КонецПопытки;
	EmeWmsERPEngine.Disconnect(ERPData);
КонецПроцедуры
//НМА 07.12.17

//НМА 27.10.16
//	Функция НоменклатураУжеЕстьВРегистре возвращает Истина, если товар присутствует в регитре EmeWmsПометкиКЭкспортуНоменклатуры.
Функция НоменклатураУжеЕстьВРегистре(Товар) Экспорт
	
	НаборЗаписей = РегистрыСведений.EmeWmsПометкиКЭкспортуНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Товар.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Возврат Истина;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции
//НМА 28.08.17 <<


Процедура РегламентЭкспортироватьПоступленияТоваров() Экспорт
	ERPData = Новый Структура;
	EmeWmsERPEngine.Create(ERPData);
	
	ERPData.Config = EmeWmsУтилиты.ПутьДоERPEngine();
	Если ERPData.Config = Неопределено Или ERPData.Config = "" Тогда
		Сообщить("Не найден файл ERPEngine.xml!"); 
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Не найден файл ERPEngine.xml!");
		Возврат;
	КонецЕсли;
	
	Ошибка = EmeWmsERPEngine.Connect(ERPData);
	Если Ошибка <> "" Тогда
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Экспорт в EME.WMS",,,,"Подключение к SQL базе данных: " + Ошибка);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Поступление.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Поступление
	|ГДЕ
	|	Поступление.Дата >= &ДатаНачалаВыгрузки
	|	И Поступление.ПометкаУдаления = ЛОЖЬ
	|	И Поступление.СкладОрдер.EmeWmsУчет = ИСТИНА
	|	И Поступление.СтатусПоступленияТоваров = ЗНАЧЕНИЕ(Перечисление.СтатусыПоступленийТоваровИУслуг.ВПути)
	|
	|СГРУППИРОВАТЬ ПО
	|	Поступление.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("ДатаНачалаВыгрузки", Константы.ДатаНачалаИспользованияИнтеграцииСEME_WMS.Получить());
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументКВыгрузке = ВыборкаДетальныеЗаписи.Ссылка;
		Если Не EmeWmsЭкспортПоступленийТоваров.ПомеченКЭкспорту(ДокументКВыгрузке) Тогда
			Если EmeWmsУтилиты.ШтрихкодаНет(ДокументКВыгрузке.Товары.Выгрузить(,"Номенклатура")) Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого стр из ДокументКВыгрузке.Товары Цикл
				Если стр.Номенклатура.емеЭтоДополнительнаяНоменклатура И ЗначениеЗаполнено(стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру) Тогда
					НоменклатураДляЭкспорта = стр.Номенклатура.емеСсылкаНаОсновнуюНоменклатуру;
				Иначе
					НоменклатураДляЭкспорта = стр.Номенклатура;
				КонецЕсли;
				Если Не НоменклатураУжеЕстьВРегистре(НоменклатураДляЭкспорта) И НоменклатураДляЭкспорта<>Справочники.Номенклатура.ПустаяСсылка() Тогда 
					EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(НоменклатураДляЭкспорта.ПолучитьОбъект());
					Сообщить(НоменклатураДляЭкспорта.Наименование+ "| помечен к экспорту");
				КонецЕсли;
			КонецЦикла;
			EmeWmsЭкспортПоступленийТоваров.ПометитьКЭкспорту(ДокументКВыгрузке.ПолучитьОбъект());
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		EmeWmsЭкспортНоменклатуры.ЭкспортироватьНоменклатуру(ERPData);
		EmeWmsЭкспортПоступленийТоваров.ЭкспортироватьПоступление(ERPData);
	Исключение
		Ошибка = ОписаниеОшибки();
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Экспорт сообщений: " + Ошибка);
		ТемаСообщения 	= "Критическая ошибка экспорта сообщений";
		ТекстСообщения 	= "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + Ошибка;
		EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
	КонецПопытки;
	EmeWmsERPEngine.Disconnect(ERPData);
	
КонецПроцедуры

