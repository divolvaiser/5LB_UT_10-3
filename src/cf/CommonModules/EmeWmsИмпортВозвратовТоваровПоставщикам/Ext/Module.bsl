//НМА 04.12.17

//	Процедура ИмпортироватьВозвратыТоваровПоставщикамКакОтгрузки импортирует возвраты товаров поставщикам.
Процедура ИмпортироватьВозвратыТоваровПоставщикамКакОтгрузки(ERPData) Экспорт
	
	ЗаголовкиСообщений = Новый ТаблицаЗначений();
	EmeWmsERPEngine.GetHeaders(ERPData, "wms", "erp", "despatch", "NEW,WRN", ЗаголовкиСообщений);
	
	Счетчик = 0;
	Для Каждого ЗаголовокСообщения Из ЗаголовкиСообщений Цикл
		
		//	ВАЖНО! Транзакция источника сообщения должна быть внешней	
		EmeWmsERPEngine.BeginImport(ERPData, "wms", "erp", "despatch", ЗаголовокСообщения.id);
		Попытка
			НовоеСообщение = (ЗаголовокСообщения.state = "NEW");
			Трассировка = "";
			ТемаСообщения = "";
			НачатьТранзакцию();
			Попытка
				Пока EmeWmsERPEngine.NextHeaderLine(ERPData) Цикл
					Если EmeWmsУтилиты.ЭтоВозврат(ERPData.header.order_no) Тогда
						ИмпортироватьВозвратТоваровПоставщикуКакОтгрузка(ERPData, Трассировка, ТемаСообщения);
						Счетчик = Счетчик + 1;
					КонецЕсли
				КонецЦикла;
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ВызватьИсключение(ОписаниеОшибки());
			КонецПопытки;
			EmeWmsERPEngine.CommitImport(ERPData);
			Если НовоеСообщение И ТемаСообщения <> "" Тогда
				ТекстСообщения = "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + "ID: " 
					+ ЗаголовокСообщения.id + Символы.ПС + "No: " + ЗаголовокСообщения.order_no + Символы.ПС + Трассировка;
				EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
			КонецЕсли
		Исключение
			EmeWmsERPEngine.RollbackImport(ERPData);
			Ошибка = ОписаниеОшибки();
			Сообщить(Ошибка);
			ЗаписьЖурналаРегистрации("Импорт из EME.WMS",,,,"Импорт сообщений DESPATCH-возврат: " + Ошибка);
			ТемаСообщения = "Критическая ошибка импорта сообщения DESPATCH-возврат";
			ТекстСообщения = "ИБ: " +  СтрокаСоединенияИнформационнойБазы() + Символы.ПС + "ID: " 
				+ ЗаголовокСообщения.id + Символы.ПС + "No: " + ЗаголовокСообщения.order_no + Символы.ПС + Ошибка;
			EmeWmsУтилиты.ОтправитьСообщениеПоЭлектроннойПочте(ТемаСообщения, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Если Счетчик <> 0 Тогда
		Сообщить("Проимпортировали сообщения DESPATCH-возврат (" + Счетчик + "шт)");
	КонецЕсли

КонецПроцедуры

Процедура ИмпортироватьВозвратТоваровПоставщикуКакОтгрузка(ERPData, Трассировка, ТемаСообщения)
	
	//	Проверим наличие перемещения товаров
	ВозвратТоваровПоставщикуСсылка = EmeWmsУтилиты.ПолучитьВозвратТоваровПоставщику(ERPData.header.id);
	//НМА 19.06.17 Проверка на битую ссылку (<Объект не найден>) >>
	Если ВозвратТоваровПоставщикуСсылка.Пустая() или ВозвратТоваровПоставщикуСсылка.ПолучитьОбъект()=Неопределено Тогда
		//НМА 19.06.17 Проверка на битую ссылку (<Объект не найден>) <<
		EmeWmsERPEngine.ErrorHeader(ERPData, "ORDBAD");
		Возврат;
	КонецЕсли;	
	
	//	Если были ошибки в номенклатуре - выйдем
	Если EmeWmsERPEngine.HasErrors(ERPData) Тогда
		Возврат;
	КонецЕсли;
	
	Если (ERPData.header.order_status = "Закрыт") ИЛИ (ERPData.header.order_status = "Подобран") Тогда
		
		Если Константы.EmeWmsИмпортDespatchПроставлятьСобрано.Получить() Тогда //НМА 06.12.17 константа EmeWmsИмпортDespatchПроставлятьСобрано
			//НМА 06.12.17 >>
			Если Константы.EmeWmsИмпортDespatchОбрабатыватьСРасхождениями.Получить() = Ложь Тогда
				Если ERPData.header.is_exist_no_loaded = 1 Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
			//НМА 06.12.17 <<
			
			
			//	Соберем товары и количества в карту соответствий (ключ - ссылка на товар, значение - количество)
			КоличестваТоваров = Новый Соответствие();
			EmeWmsERPEngine.SelectChild(ERPData, "lines");
			EmeWmsУтилиты.ПолучитьКоличестваТоваров(ERPData, КоличестваТоваров, "shipped_qty", Ложь);
			
			ТЗИзWMS = Новый ТаблицаЗначений;
	КвалификаторыЧисла = Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой);  
	ОписаниеЧисла = Новый ОписаниеТипов("Число", КвалификаторыЧисла);
	ТЗИзWMS.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЗИзWMS.Колонки.Добавить("КоличествоПринято",ОписаниеЧисла);
	ТЗИзWMS.Колонки.Добавить("КоличествоБрака",ОписаниеЧисла); 
	ТЗИзWMS.Колонки.Добавить("СрокГодности",Новый ОписаниеТипов("Дата"));
	ТЗИзWMS.Колонки.Добавить("ДатаПроизводства",Новый ОписаниеТипов("Дата"));
	ТЗИзWMS.Колонки.Добавить("Штрихкод",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(200)));
	ТЗИзWMS.Колонки.Добавить("ТипШтрихкода",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ТипыШтрихкодов"));
	ТЗИзWMS.Колонки.Добавить("ЭтоБрак",Новый ОписаниеТипов("Булево"));
	ТЗИзWMS.Колонки.Добавить("ЕдиницаИзмерения",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	ТолькоEMEСклад = Ложь;
	EmeWmsERPEngine.SelectChild(ERPData, "lines");
	EmeWmsУтилиты.ПолучитьТЗИзWMS(ERPData, ТЗИзWMS, ТолькоEMEСклад);
	ТЗИзWMS.Свернуть("Номенклатура,ЕдиницаИзмерения,ЭтоБрак","КоличествоПринято,КоличествоБрака"); //НМА  27.01.17
	ТЗИзWMS.Сортировать("КоличествоПринято Убыв, Номенклатура Возр"); //НМА  27.01.17

			
			////	Трассировка начальных количеств
			Трассировка = Трассировка + Символы.ПС + "Отгрузка по EME:" + Символы.ПС;
			EmeWmsУтилиты.ТрассировкаКоличествТоваров(Трассировка, КоличестваТоваров);
			Трассировка = Трассировка + ВозвратТоваровПоставщикуСсылка + Символы.ПС;
			EmeWmsУтилиты.ТрассировкаТабличнойЧастиТоваров(Трассировка, ВозвратТоваровПоставщикуСсылка.Товары);
			
			//	Сверим количества в возврате и уведомлении
			EmeWmsУтилиты.ВычестьКоличестваТоваровПоДокументу(КоличестваТоваров, ВозвратТоваровПоставщикуСсылка.Товары);
			Если КоличестваТоваров.Количество() <> 0 Тогда
				Трассировка = Трассировка + Символы.ПС + "Остался нераспределенный товар:" + Символы.ПС;
				EmeWmsУтилиты.ТрассировкаКоличествТоваров(Трассировка, КоличестваТоваров);
				ТемаСообщения = "Избыток/недостача товара в " + ERPData.header.order_no;
				EmeWmsERPEngine.WarningHeader(ERPData, "QTYBAD");
				Возврат;
			КонецЕсли;
			
			ВозвратТоваровПоставщику = ВозвратТоваровПоставщикуСсылка.ПолучитьОбъект();
			ВозвратТоваровПоставщику.Статус = Перечисления.СтатусыВозвратовПоставщикам.Закрыт;
			ВозвратТоваровПоставщику.Записать(РежимЗаписиДокумента.Проведение);
			
			EmeWmsERPEngine.Success(ERPData);
			
		КонецЕсли; //НМА 06.12.17 <<
		
	КонецЕсли;

КонецПроцедуры
