#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета по метаданным регистра накопления
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	//УниверсальныйОтчет.ИмяРегистра = "ЗаказыПокупателей";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	 ТекстЗапроса = 
	  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	  |	ИсточникДанных.ДоговорКонтрагента КАК ДоговорКонтрагента,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.ДоговорКонтрагента) КАК ДоговорКонтрагентаПредставление,
	  |	ИсточникДанных.ЗаказПокупателя КАК ЗаказПокупателя,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.ЗаказПокупателя) КАК ЗаказПокупателяПредставление,
	  |	ИсточникДанных.СтатусПартии КАК СтатусПартии,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.СтатусПартии) КАК СтатусПартииПредставление,
	  |	ИсточникДанных.Номенклатура КАК Номенклатура,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Номенклатура) КАК НоменклатураПредставление,
	  |	ИсточникДанных.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПредставление,
	  |	ИсточникДанных.Цена КАК Цена,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Цена) КАК ЦенаПредставление,
	  |	ИсточникДанных.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
	  |	ИсточникДанных.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.ПроцентСкидкиНаценки) КАК ПроцентСкидкиНаценкиПредставление,
	  |	ИсточникДанных.ПроцентАвтоматическихСкидок КАК ПроцентАвтоматическихСкидок,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.ПроцентАвтоматическихСкидок) КАК ПроцентАвтоматическихСкидокПредставление,
	  |	ИсточникДанных.УсловиеАвтоматическойСкидки КАК УсловиеАвтоматическойСкидки,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.УсловиеАвтоматическойСкидки) КАК УсловиеАвтоматическойСкидкиПредставление,
	  |	ИсточникДанных.ЗначениеУсловияАвтоматическойСкидки КАК ЗначениеУсловияАвтоматическойСкидки,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.ЗначениеУсловияАвтоматическойСкидки) КАК ЗначениеУсловияАвтоматическойСкидкиПредставление,
	  |	ИсточникДанных.СтавкаНДС КАК СтавкаНДС,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.СтавкаНДС) КАК СтавкаНДСПредставление,
	  |	ИсточникДанных.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Номенклатура.БазоваяЕдиницаИзмерения) КАК БазоваяЕдиницаИзмеренияПредставление,
	  |	ИсточникДанных.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
	  |	ИсточникДанных.КоличествоПриход КАК КоличествоПриход,
	  |	ИсточникДанных.КоличествоРасход КАК КоличествоРасход,
	  |	ИсточникДанных.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	  |	ИсточникДанных.КоличествоОборот КАК КоличествоОборот,
	  |	ИсточникДанных.СуммаВзаиморасчетовНачальныйОстаток КАК СуммаВзаиморасчетовНачальныйОстаток,
	  |	ИсточникДанных.СуммаВзаиморасчетовПриход КАК СуммаВзаиморасчетовПриход,
	  |	ИсточникДанных.СуммаВзаиморасчетовРасход КАК СуммаВзаиморасчетовРасход,
	  |	ИсточникДанных.СуммаВзаиморасчетовКонечныйОстаток КАК СуммаВзаиморасчетовКонечныйОстаток,
	  |	ИсточникДанных.СуммаВзаиморасчетовОборот КАК СуммаВзаиморасчетовОборот,
	  |	ИсточникДанных.СуммаУпрНачальныйОстаток КАК СуммаУпрНачальныйОстаток,
	  |	ВЫРАЗИТЬ(ВЫБОР
	  |			КОГДА (ИсточникДанных.ЗаказПокупателя.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные)) 
	  |         И (ИсточникДанных.ЗаказПокупателя.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.ПустаяСсылка))
	  |				ТОГДА ИсточникДанных.СуммаУпрПриход
	  |			ИНАЧЕ 0
	  |		КОНЕЦ КАК ЧИСЛО(15, 3)) КАК СуммаБезнал,
	  |	ВЫРАЗИТЬ(ВЫБОР
	  |			КОГДА (ИсточникДанных.ЗаказПокупателя.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные))
	  |         И (ИсточникДанных.ЗаказПокупателя.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.ПустаяСсылка))
	  |				ТОГДА 0
	  |			ИНАЧЕ ИсточникДанных.СуммаУпрПриход
	  |		КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ИтогоНалик,
	  |	ИсточникДанных.СуммаУпрПриход КАК СуммаУпрПриход,
	  |	ИсточникДанных.СуммаУпрРасход КАК СуммаУпрРасход,
	  |	ИсточникДанных.СуммаУпрКонечныйОстаток КАК СуммаУпрКонечныйОстаток,
	  |	ИсточникДанных.СуммаУпрОборот КАК СуммаУпрОборот,
	  |	ИсточникДанных.КоличествоНачальныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЕдиницОтчетовНачальныйОстаток,
	  |	ИсточникДанных.КоличествоПриход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЕдиницОтчетовПриход,
	  |	ИсточникДанных.КоличествоРасход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЕдиницОтчетовРасход,
	  |	ИсточникДанных.КоличествоКонечныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЕдиницОтчетовКонечныйОстаток,
	  |	ИсточникДанных.КоличествоОборот * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЕдиницОтчетовОборот,
	  |	ИсточникДанных.КоличествоНачальныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовыхЕдНачальныйОстаток,
	  |	ИсточникДанных.КоличествоПриход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовыхЕдПриход,
	  |	ИсточникДанных.КоличествоРасход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовыхЕдРасход,
	  |	ИсточникДанных.КоличествоКонечныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовыхЕдКонечныйОстаток,
	  |	ИсточникДанных.КоличествоОборот * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовыхЕдОборот,
	  |	ИсточникДанных.Регистратор КАК Регистратор,
	  |	ПРЕДСТАВЛЕНИЕ(ИсточникДанных.Регистратор) КАК РегистраторПредставление,
	  |	ИсточникДанных.Период КАК Период,
	  |	НАЧАЛОПЕРИОДА(ИсточникДанных.Период, ДЕНЬ) КАК ПериодДень,
	  |	НАЧАЛОПЕРИОДА(ИсточникДанных.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	  |	НАЧАЛОПЕРИОДА(ИсточникДанных.Период, ДЕКАДА) КАК ПериодДекада,
	  |	НАЧАЛОПЕРИОДА(ИсточникДанных.Период, МЕСЯЦ) КАК ПериодМесяц,
	  |	НАЧАЛОПЕРИОДА(ИсточникДанных.Период, КВАРТАЛ) КАК ПериодКвартал,
	  |	НАЧАЛОПЕРИОДА(ИсточникДанных.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	  |	НАЧАЛОПЕРИОДА(ИсточникДанных.Период, ГОД) КАК ПериодГод
	  |{ВЫБРАТЬ
	  |	ДоговорКонтрагента.*,
	  |	ЗаказПокупателя.*,
	  |	СтатусПартии.*,
	  |	Номенклатура.*,
	  |	ХарактеристикаНоменклатуры.*,
	  |	Цена,
	  |	ЕдиницаИзмерения.*,
	  |	ПроцентСкидкиНаценки,
	  |	ПроцентАвтоматическихСкидок,
	  |	УсловиеАвтоматическойСкидки.*,
	  |	ЗначениеУсловияАвтоматическойСкидки.*,
	  |	СтавкаНДС.*,
	  |	БазоваяЕдиницаИзмерения.*,
	  |	КоличествоНачальныйОстаток,
	  |	КоличествоПриход,
	  |	КоличествоРасход,
	  |	КоличествоКонечныйОстаток,
	  |	КоличествоОборот,
	  |	СуммаВзаиморасчетовНачальныйОстаток,
	  |	СуммаВзаиморасчетовПриход,
	  |	СуммаВзаиморасчетовРасход,
	  |	СуммаВзаиморасчетовКонечныйОстаток,
	  |	СуммаВзаиморасчетовОборот,
	  |	СуммаУпрНачальныйОстаток,
	  |	СуммаУпрПриход,
	  | СуммаБезНал,
	  | ИтогоНалик,
	  |	СуммаУпрРасход,
	  |	СуммаУпрКонечныйОстаток,
	  |	СуммаУпрОборот,
	  |	КоличествоЕдиницОтчетовНачальныйОстаток,
	  |	КоличествоЕдиницОтчетовПриход,
	  |	КоличествоЕдиницОтчетовРасход,
	  |	КоличествоЕдиницОтчетовКонечныйОстаток,
	  |	КоличествоЕдиницОтчетовОборот,
	  |	КоличествоБазовыхЕдНачальныйОстаток,
	  |	КоличествоБазовыхЕдПриход,
	  |	КоличествоБазовыхЕдРасход,
	  |	КоличествоБазовыхЕдКонечныйОстаток,
	  |	КоличествоБазовыхЕдОборот,
	  |	Регистратор.* КАК Регистратор,
	  |	Период КАК Период,
	  |	ПериодДень,
	  |	ПериодНеделя,
	  |	ПериодДекада,
	  |	ПериодМесяц,
	  |	ПериодКвартал,
	  |	ПериодПолугодие,
	  |	ПериодГод}
	  |ИЗ
	  |	РегистрНакопления.ЗаказыПокупателей.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор {(&Периодичность)}, , {(ДоговорКонтрагента).* КАК ДоговорКонтрагента, (ЗаказПокупателя).* КАК ЗаказПокупателя, (СтатусПартии).* КАК СтатусПартии, (Номенклатура).* КАК Номенклатура, (ХарактеристикаНоменклатуры).* КАК ХарактеристикаНоменклатуры, (Цена) КАК Цена, (ЕдиницаИзмерения).* КАК ЕдиницаИзмерения, (ПроцентСкидкиНаценки) КАК ПроцентСкидкиНаценки, (ПроцентАвтоматическихСкидок) КАК ПроцентАвтоматическихСкидок, (УсловиеАвтоматическойСкидки).* КАК УсловиеАвтоматическойСкидки, (ЗначениеУсловияАвтоматическойСкидки).* КАК ЗначениеУсловияАвтоматическойСкидки, (СтавкаНДС).* КАК СтавкаНДС, (Номенклатура.БазоваяЕдиницаИзмерения).* КАК БазоваяЕдиницаИзмерения}) КАК ИсточникДанных
	  |{ГДЕ
	  |	ИсточникДанных.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
	  |	ИсточникДанных.КоличествоПриход КАК КоличествоПриход,
	  |	ИсточникДанных.КоличествоРасход КАК КоличествоРасход,
	  |	ИсточникДанных.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	  |	ИсточникДанных.КоличествоОборот КАК КоличествоОборот,
	  |	ИсточникДанных.СуммаВзаиморасчетовНачальныйОстаток КАК СуммаВзаиморасчетовНачальныйОстаток,
	  |	ИсточникДанных.СуммаВзаиморасчетовПриход КАК СуммаВзаиморасчетовПриход,
	  |	ИсточникДанных.СуммаВзаиморасчетовРасход КАК СуммаВзаиморасчетовРасход,
	  |	ИсточникДанных.СуммаВзаиморасчетовКонечныйОстаток КАК СуммаВзаиморасчетовКонечныйОстаток,
	  |	ИсточникДанных.СуммаВзаиморасчетовОборот КАК СуммаВзаиморасчетовОборот,
	  |	ИсточникДанных.СуммаУпрНачальныйОстаток КАК СуммаУпрНачальныйОстаток,
	  |	ИсточникДанных.СуммаУпрПриход КАК СуммаУпрПриход,
	  |	ВЫРАЗИТЬ(ВЫБОР
	  |			КОГДА (ИсточникДанных.ЗаказПокупателя.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные)) 
	  |         И (ИсточникДанных.ЗаказПокупателя.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.ПустаяСсылка))
	  |				ТОГДА ИсточникДанных.СуммаУпрПриход
	  |			ИНАЧЕ 0
	  |		КОНЕЦ КАК ЧИСЛО(15, 3)) КАК СуммаБезнал,
	  |	ВЫРАЗИТЬ(ВЫБОР
	  |			КОГДА (ИсточникДанных.ЗаказПокупателя.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные))
	  |         И (ИсточникДанных.ЗаказПокупателя.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.ПустаяСсылка))
	  |				ТОГДА 0
	  |			ИНАЧЕ ИсточникДанных.СуммаУпрПриход
	  |		КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ИтогоНалик,
	  |	ИсточникДанных.СуммаУпрРасход КАК СуммаУпрРасход,
	  |	ИсточникДанных.СуммаУпрКонечныйОстаток КАК СуммаУпрКонечныйОстаток,
	  |	ИсточникДанных.СуммаУпрОборот КАК СуммаУпрОборот,
	  |	(ИсточникДанных.КоличествоНачальныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК КоличествоЕдиницОтчетовНачальныйОстаток,
	  |	(ИсточникДанных.КоличествоПриход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК КоличествоЕдиницОтчетовПриход,
	  |	(ИсточникДанных.КоличествоРасход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК КоличествоЕдиницОтчетовРасход,
	  |	(ИсточникДанных.КоличествоКонечныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК КоличествоЕдиницОтчетовКонечныйОстаток,
	  |	(ИсточникДанных.КоличествоОборот * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ИсточникДанных.Номенклатура.ЕдиницаДляОтчетов.Коэффициент) КАК КоличествоЕдиницОтчетовОборот,
	  |	(ИсточникДанных.КоличествоНачальныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоБазовыхЕдНачальныйОстаток,
	  |	(ИсточникДанных.КоличествоПриход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоБазовыхЕдПриход,
	  |	(ИсточникДанных.КоличествоРасход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоБазовыхЕдРасход,
	  |	(ИсточникДанных.КоличествоКонечныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоБазовыхЕдКонечныйОстаток,
	  |	(ИсточникДанных.КоличествоОборот * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК КоличествоБазовыхЕдОборот,
	  |	ИсточникДанных.Регистратор.* КАК Регистратор,
	  |	ИсточникДанных.Период КАК Период,
	  |	(НАЧАЛОПЕРИОДА(ИсточникДанных.Период, ДЕНЬ)) КАК ПериодДень,
	  |	(НАЧАЛОПЕРИОДА(ИсточникДанных.Период, НЕДЕЛЯ)) КАК ПериодНеделя,
	  |	(НАЧАЛОПЕРИОДА(ИсточникДанных.Период, ДЕКАДА)) КАК ПериодДекада,
	  |	(НАЧАЛОПЕРИОДА(ИсточникДанных.Период, МЕСЯЦ)) КАК ПериодМесяц,
	  |	(НАЧАЛОПЕРИОДА(ИсточникДанных.Период, КВАРТАЛ)) КАК ПериодКвартал,
	  |	(НАЧАЛОПЕРИОДА(ИсточникДанных.Период, ПОЛУГОДИЕ)) КАК ПериодПолугодие,
	  |	(НАЧАЛОПЕРИОДА(ИсточникДанных.Период, ГОД)) КАК ПериодГод}
	  |{УПОРЯДОЧИТЬ ПО
	  |	ДоговорКонтрагента.*,
	  |	ЗаказПокупателя.*,
	  |	СтатусПартии.*,
	  |	Номенклатура.*,
	  |	ХарактеристикаНоменклатуры.*,
	  |	Цена,
	  |	ЕдиницаИзмерения.*,
	  |	ПроцентСкидкиНаценки,
	  |	ПроцентАвтоматическихСкидок,
	  |	УсловиеАвтоматическойСкидки.*,
	  |	ЗначениеУсловияАвтоматическойСкидки.*,
	  |	СтавкаНДС.*,
	  |	БазоваяЕдиницаИзмерения.*,
	  |	КоличествоНачальныйОстаток,
	  |	КоличествоПриход,
	  |	КоличествоРасход,
	  |	КоличествоКонечныйОстаток,
	  |	КоличествоОборот,
	  |	СуммаВзаиморасчетовНачальныйОстаток,
	  |	СуммаВзаиморасчетовПриход,
	  |	СуммаВзаиморасчетовРасход,
	  |	СуммаВзаиморасчетовКонечныйОстаток,
	  |	СуммаВзаиморасчетовОборот,
	  |	СуммаУпрНачальныйОстаток,
	  |	СуммаУпрПриход,
	  | СуммаБезНал,
	  | ИтогоНалик,
	  |	СуммаУпрРасход,
	  |	СуммаУпрКонечныйОстаток,
	  |	СуммаУпрОборот,
	  |	КоличествоЕдиницОтчетовНачальныйОстаток,
	  |	КоличествоЕдиницОтчетовПриход,
	  |	КоличествоЕдиницОтчетовРасход,
	  |	КоличествоЕдиницОтчетовКонечныйОстаток,
	  |	КоличествоЕдиницОтчетовОборот,
	  |	КоличествоБазовыхЕдНачальныйОстаток,
	  |	КоличествоБазовыхЕдПриход,
	  |	КоличествоБазовыхЕдРасход,
	  |	КоличествоБазовыхЕдКонечныйОстаток,
	  |	КоличествоБазовыхЕдОборот,
	  |	Регистратор.*,
	  |	Период,
	  |	ПериодДень,
	  |	ПериодНеделя,
	  |	ПериодДекада,
	  |	ПериодМесяц,
	  |	ПериодКвартал,
	  |	ПериодПолугодие,
	  |	ПериодГод}
	  |ИТОГИ
	  |	СУММА(КоличествоНачальныйОстаток),
	  |	СУММА(КоличествоПриход),
	  |	СУММА(КоличествоРасход),
	  |	СУММА(КоличествоКонечныйОстаток),
	  |	СУММА(КоличествоОборот),
	  |	СУММА(СуммаВзаиморасчетовНачальныйОстаток),
	  |	СУММА(СуммаВзаиморасчетовПриход),
	  |	СУММА(СуммаВзаиморасчетовРасход),
	  |	СУММА(СуммаВзаиморасчетовКонечныйОстаток),
	  |	СУММА(СуммаВзаиморасчетовОборот),
	  |	СУММА(СуммаУпрНачальныйОстаток),
	  |	СУММА(СуммаУпрПриход),
      | СУММА(СуммаБезНал),
	  | СУММА(ИтогоНалик),
	  |	СУММА(СуммаУпрРасход),
	  |	СУММА(СуммаУпрКонечныйОстаток),
	  |	СУММА(СуммаУпрОборот),
	  |	СУММА(КоличествоЕдиницОтчетовНачальныйОстаток),
	  |	СУММА(КоличествоЕдиницОтчетовПриход),
	  |	СУММА(КоличествоЕдиницОтчетовРасход),
	  |	СУММА(КоличествоЕдиницОтчетовКонечныйОстаток),
	  |	СУММА(КоличествоЕдиницОтчетовОборот),
	  |	СУММА(КоличествоБазовыхЕдНачальныйОстаток),
	  |	СУММА(КоличествоБазовыхЕдПриход),
	  |	СУММА(КоличествоБазовыхЕдРасход),
	  |	СУММА(КоличествоБазовыхЕдКонечныйОстаток),
	  |	СУММА(КоличествоБазовыхЕдОборот)
	  |ПО
	  |	ОБЩИЕ
	  |{ИТОГИ ПО
	  |	ДоговорКонтрагента.*,
	  |	ЗаказПокупателя.*,
	  |	СтатусПартии.*,
	  |	Номенклатура.*,
	  |	ХарактеристикаНоменклатуры.*,
	  |	Цена,
	  |	ЕдиницаИзмерения.*,
	  |	ПроцентСкидкиНаценки,
	  |	ПроцентАвтоматическихСкидок,
	  |	УсловиеАвтоматическойСкидки.*,
	  |	ЗначениеУсловияАвтоматическойСкидки.*,
	  |	СтавкаНДС.*,
	  |	БазоваяЕдиницаИзмерения.*,
	  |	Регистратор.*,
	  |	Период,
	  |	ПериодДень,
	  |	ПериодНеделя,
	  |	ПериодДекада,
	  |	ПериодМесяц,
	  |	ПериодКвартал,
	  |	ПериодПолугодие,
	  |	ПериодГод}
	  |АВТОУПОРЯДОЧИВАНИЕ";
	 
	 // Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
    	
	УниверсальныйОтчет.ДобавитьПолеГруппировка("БазоваяЕдиницаИзмерения", "Номенклатура", "БазоваяЕдиницаИзмерения", "Базовая единица измерения");
	
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоЕдиницОтчетовНачальныйОстаток", "ИсточникДанных.КоличествоНачальныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / Номенклатура.ЕдиницаДляОтчетов.Коэффициент", "Количество (в ед. отчетов) (нач. ост.)");
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоЕдиницОтчетовПриход",           "ИсточникДанных.КоличествоПриход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / Номенклатура.ЕдиницаДляОтчетов.Коэффициент", "Количество (в ед. отчетов) (приход)");
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоЕдиницОтчетовРасход",           "ИсточникДанных.КоличествоРасход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / Номенклатура.ЕдиницаДляОтчетов.Коэффициент", "Количество (в ед. отчетов) (расход)");
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоЕдиницОтчетовКонечныйОстаток",  "ИсточникДанных.КоличествоКонечныйОстаток  * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / Номенклатура.ЕдиницаДляОтчетов.Коэффициент", "Количество (в ед. отчетов) (кон. ост.)");
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоЕдиницОтчетовОборот",           "ИсточникДанных.КоличествоОборот * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / Номенклатура.ЕдиницаДляОтчетов.Коэффициент", "Количество (в ед. отчетов) (оборот)");
	
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоБазовыхЕдНачальныйОстаток",     "ИсточникДанных.КоличествоНачальныйОстаток * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент", "Количество (в базовых единицах) (нач. ост.)");
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоБазовыхЕдПриход",               "ИсточникДанных.КоличествоПриход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент", "Количество (в базовых единицах) (приход)");
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоБазовыхЕдРасход",               "ИсточникДанных.КоличествоРасход * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент", "Количество (в базовых единицах) (расход)");
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоБазовыхЕдКонечныйОстаток",      "ИсточникДанных.КоличествоКонечныйОстаток  * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент", "Количество (в базовых единицах) (кон. ост.)");
	УниверсальныйОтчет.ДобавитьПолеРесурс("КоличествоБазовыхЕдОборот",               "ИсточникДанных.КоличествоОборот * ИсточникДанных.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент", "Количество (в базовых единицах) (оборот)");
		
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБазовыхЕдНачальныйОстаток", "Начальный остаток", Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазовыхЕд", "Количество (в базовых единицах)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБазовыхЕдПриход",           "Приход",            Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазовыхЕд", "Количество (в базовых единицах)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБазовыхЕдРасход",           "Расход",            Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазовыхЕд", "Количество (в базовых единицах)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБазовыхЕдКонечныйОстаток",  "Конечный остаток",  Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазовыхЕд", "Количество (в базовых единицах)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБазовыхЕдОборот",           "Оборот",            Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазовыхЕд", "Количество (в базовых единицах)");
	
	
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаУпрНачальныйОстаток",            "Начальный остаток (упр)",      Ложь, "ЧЦ=15; ЧДЦ=3", "СуммаУпрНачальныйОстаток", "Сумма (упр)");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаУпрПриход",                      "Сумма документа",      Ложь, "ЧЦ=15; ЧДЦ=3", "Сумма (упр)", "Сумма (упр)");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаБезНал",                         "Оплата по Б/Н",      Ложь, "ЧЦ=15; ЧДЦ=3",   "Сумма (упр)", "Сумма (упр)");
	УниверсальныйОтчет.ДобавитьПоказатель("ИтогоНалик",                          "Итого наличными",      Ложь, "ЧЦ=15; ЧДЦ=3", "Сумма (упр)", "Сумма (упр)");
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаУпрРасход",                      "Расход (упр)",      Ложь, "ЧЦ=15; ЧДЦ=3", "СуммаУпрРасход", "Сумма (упр)");
	//УниверсальныйОтчет.ДобавитьПоказатель("СуммаУпрКонечныйОстаток",             "Конечный ост (упр)",      Ложь, "ЧЦ=15; ЧДЦ=3", "СуммаУпрРасход", "Сумма (упр)");
	
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницОтчетовНачальныйОстаток", "Начальный остаток", Ложь, "ЧЦ=15; ЧДЦ=3", "КоличествоЕдиницОтчетов", "Количество (в ед. отчетов)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницОтчетовПриход",           "Приход",            Ложь, "ЧЦ=15; ЧДЦ=3", "КоличествоЕдиницОтчетов", "Количество (в ед. отчетов)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницОтчетовРасход",           "Расход",            Ложь, "ЧЦ=15; ЧДЦ=3", "КоличествоЕдиницОтчетов", "Количество (в ед. отчетов)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницОтчетовКонечныйОстаток",  "Конечный остаток",  Ложь, "ЧЦ=15; ЧДЦ=3", "КоличествоЕдиницОтчетов", "Количество (в ед. отчетов)");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницОтчетовОборот",           "Оборот",            Ложь, "ЧЦ=15; ЧДЦ=3", "КоличествоЕдиницОтчетов", "Количество (в ед. отчетов)");
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоНачальныйОстаток",, Истина,, "Количество");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоПриход",,           Истина,, "Количество");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоРасход",,           Истина,, "Количество");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКонечныйОстаток",,  Истина,, "Количество");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоОборот",,           Ложь  ,, "Количество");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЗаказПокупателя");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Номенклатура");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("ЗаказПокупателя");
	УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	УниверсальныйОтчет.ДобавитьОтбор("СтатусПартии");
	УниверсальныйОтчет.ДобавитьОтбор("ДоговорКонтрагента");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("БазоваяЕдиницаИзмерения");
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
