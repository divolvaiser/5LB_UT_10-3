//25.01.2017, Юра
//На 90% это код из внешней обработки для УТ10 "Продажи бонусов продавцы (с учетом смен)"
//Изменения по сравнению с оригинальной обработкой:
//Убрал изначально закомментированные строки (чтобы легче читать)
//Изменил запрос, чтобы обращений к Справочник.Бренды4Отчёта вообще не было (изначально соединялось с РегистрСведений.БонусыСроки, но смысла в этом не было)
//Удалил из параметров запроса СменыСУчетомПродаж, так как нигде не используется
//Макет берем из этого отчета
//Жестко устанавливается ПоВсемМагазинам = Ложь; и ТабДок = Новый ТабличныйДокумент;
//В функцию ПроверкаПользователя() добавлены параметры (в оригинале это реквизиты отчета, а теперь ТолькоТекущийПользователь определяется программно
//Функция возвращает табличный документ
Функция ПолучитьТабДок(Data1, Data2, Kontragent, Menager) Экспорт
	//начало 25.01.2017, Юра
	НачалоПериода = Data1;
	КонецПериода = Data2;
	Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(Kontragent,Истина,Справочники.Контрагенты.НайтиПоНаименованию("Магазины",Истина));
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Женя 30.05.2018
	// Так как магазин переведенный на розницу в УТ поступает как Контрагент = "Розничный покупатель", то в таком случае делать
	// проверку: Если контрагент имеет свойство "Контрагент" и оно заполнено, тогда контрагент принимает указанное значение.
	// (( 	
	МагазинДляШтрафовИПремий = Контрагент;   // Вт.наценки и вт.удержания. См.ниже параметр.
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Ссылка КАК Контрагент,
	               |	ЗначенияСвойствОбъектов.Свойство,
	               |	ЗначенияСвойствОбъектов.Значение,
	               |	ЗначенияСвойствОбъектов.Объект
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты,
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство.Наименование = &Свойство
	               |	И Контрагенты.Ссылка = &Контрагент
	               |	И ЗначенияСвойствОбъектов.Объект = &Контрагент"
				   ;
	 		
	Свойство = "Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Свойство", Свойство);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КонтрагентДляЗамены = ВыборкаДетальныеЗаписи.Значение;  
		Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(КонтрагентДляЗамены,Истина,Справочники.Контрагенты.НайтиПоНаименованию("Магазины",Истина)); 
	КонецЦикла;
	// )) 30.05.2018 Женя
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
	ПоВсемМагазинам = Ложь;
	ТекущийПользовательРозницы = Справочники.Пользователи.НайтиПоНаименованию(Menager,Истина,Справочники.Пользователи.НайтиПоНаименованию("Продавцы",Истина));
	//определим ТолькоТекущийПользователь:
	ТолькоТекущийПользователь = Ложь;
	//Запрос = Новый Запрос;
	//Запрос.Текст=" ВЫБРАТЬ ЗначениеНастроек.Значение КАК ЗначениеНастройки
	//	|ИЗ РегистрСведений.НастройкиПользователей КАК ЗначениеНастроек
	//	|ГДЕ ЗначениеНастроек.Пользователь = &Пользователь
	//	|И  ЗначениеНастроек.Настройка = &Настройка";
	//Запрос.УстановитьПараметр("Пользователь", ТекущийПользовательРозницы);
	//Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.НастройкиПользователей.УчетнаяЗаписьМагазина);
	//Рез = Запрос.Выполнить();
	//Выборка = Рез.Выбрать();
	//Если Выборка.Следующий() Тогда
	//	ТолькоТекущийПользователь = Выборка.ЗначениеНастройки;
	//КонецЕсли;
	Если ЗначениеЗаполнено(ТекущийПользовательРозницы) Тогда
		ТолькоТекущийПользователь = Истина;//Продавец, так как нашли в папке "Продавцы" 21.02.2017, Юра
	КонецЕсли;
		
	ТабДок = Новый ТабличныйДокумент;
	//окончание 25.01.2017, Юра
	
	
	Если ЗначениеЗаполнено(Контрагент) И ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		Запрос = Новый Запрос;	
		Запрос.Текст = "ВЫБРАТЬ
// 0 - таблица процента премии		
		               |	ТП.АргументC, ТП.АргументПо, ТП.Значение, ТП.ЗначениеКон
		               |ПОМЕСТИТЬ втПремии
		               |ИЗ
					   |	(ВЫБРАТЬ 0 КАК АргументC, 499999 КАК АргументПо, 4.0 КАК Значение, 4.0 КАК ЗначениеКон
		               |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    500000,	599999, 4.0, 3.9
		               |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    600000,	699999, 3.9, 3.8
	            	   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    700000,	799999, 3.8, 3.7
     	  			   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    800000,	899999, 3.7, 3.6
		   			   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    900000,	999999, 3.6, 3.5
  			  		   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    1000000,	1249999, 3.5, 3.3
  			  		   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    1250000,	1499999, 3.3, 3.0
  			  		   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    1500000,	1749999, 3.0, 2.8
	  		 		   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    1750000,	1999999, 2.8, 2.5
	  		 		   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    2000000,	2249999, 2.5, 2.3
	 		  		   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    2250000,	2499999, 2.3, 2.0
					   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    2500000,	2749999, 2.0, 2.0
					   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    2750000,	2999999, 2.0, 2.0
					   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    3000000,	3499999, 2.0, 2.0
					   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    3500000,	3999999, 2.0, 2.0
					   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    4000000,	99999999, 2.0, 2.0
		               |	) КАК ТП
		               |;		               				   
		               |////////////////////////////////////////////////////////////////////////////////
// 1 - таблица ставок (бонусы)					   
		               |ВЫБРАТЬ
		               |	ТС.АргументC, ТС.АргументПо, ТС.Значение, ТС.ЗначениеКон
		               |ПОМЕСТИТЬ втСтавки
		               |ИЗ
					   |	(ВЫБРАТЬ 0 КАК АргументC, 499999 КАК АргументПо, 800 КАК Значение, 800 КАК ЗначениеКон
		               |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    500000,	599999, 800, 700
		               |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    600000,	699999, 700, 700
	            	   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    700000,	799999, 700, 500
     	  			   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    800000,	3999999, 500, 500
					   |	ОБЪЕДИНИТЬ ВСЕ  ВЫБРАТЬ    4000000,	99999999, 500, 500
		               |) КАК ТС
			           |;    
// 2  - Среднемесячные продажи для определения КАТЕГОРИИ магазина                   					   
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА ТПрошлыеПериоды.ПродажиСредниеМес >= 2000000
		               |			ТОГДА 1
		               |		КОГДА ТПрошлыеПериоды.ПродажиСредниеМес >= 1000000
		               |			ТОГДА 2
		               |		ИНАЧЕ 3
		               |	КОНЕЦ КАК Категория,
		               |	ТПрошлыеПериоды.ПродажиСредниеМес КАК ПродажиСредние
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ПродажиОбороты.Контрагент КАК Магазин,
		               |		ПродажиОбороты.СтоимостьОборот / 3 КАК ПродажиСредниеМес
		               |	ИЗ
		               |		РегистрНакопления.Продажи.Обороты(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоПериода, МЕСЯЦ, -3), МЕСЯЦ), 
					   |				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&КонецПериода, МЕСЯЦ, -1), МЕСЯЦ), , Контрагент = &Контрагент)
					   |		КАК ПродажиОбороты) КАК ТПрошлыеПериоды 					   
		               |;                  	      
		               |////////////////////////////////////////////////////////////////////////////////
// 3 - СМЕНЫ - продажи по дням и продавцам - - основная витруальная таблица для дальнейших манипуляций со сменами
// 3 - СМЕНЫ - продажи по дням и продавцам - - основная витруальная таблица для дальнейших манипуляций со сменами
		               |ВЫБРАТЬ
		               |	Табл.ДатаСмены,
		               |	Табл.Продавец,
		               |    СУММА(Табл.СтоимостьОборот) КАК ПродажиВсего,
		               |	СУММА(Табл.СтоимостьОборот) * (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), КОНЕЦПЕРИОДА(Табл.ДатаСмены, МЕСЯЦ), ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), Табл.ДатаСмены, ДЕНЬ) + 1) КАК ПродажиСреднемесРасчет
		               |ПОМЕСТИТЬ втТекущиеПоДнямИПродавцам
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ПродажиОбороты.ДокументПродажи.Ответственный КАК Продавец,
		               |		НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ) КАК ДатаСмены,
		               |		ПродажиОбороты.СтоимостьОборот КАК СтоимостьОборот
		               |	ИЗ
		               |		РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Авто, Контрагент = &Контрагент) КАК ПродажиОбороты) КАК Табл
		               |ГДЕ					   
					   |	Табл.Продавец В 
					   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ ИсторияРаботы.Продавец КАК Продавец 
					   |	 ИЗ РегистрСведений.ИсторияРаботыПродавцов КАК ИсторияРаботы
					   |		ГДЕ	ИсторияРаботы.Период МЕЖДУ &НачалоПериода И &КонецПериода) 
					   |									   
		               |СГРУППИРОВАТЬ ПО
		               |	Табл.ДатаСмены,
		               |	Табл.Продавец
		               |;						   
// 4 - продажи в текущем месяце					   
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ПродажиОбороты.Контрагент КАК Магазин,
		               |	ПродажиОбороты.СтоимостьОборот КАК СтоимостьОборот
		               |ПОМЕСТИТЬ втТекущиеОбщиеПродажи
		               |ИЗ
		               |	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , Контрагент = &Контрагент) КАК ПродажиОбороты
		               |;		               				   
		               |////////////////////////////////////////////////////////////////////////////////					   
// 5 - Процент от продаж, 6 - Продажи (консолидировано)
          			   |ВЫБРАТЬ
		               |	ТПродажи.ПродажиВсего,
		               | 	ТПродажи.ПродажиВсего * (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ), ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ), ДЕНЬ) + 1) КАК ПродажиВсегоПлан,				
		           		   // 18.08.16 Интерполяция
		               //|	ТПремии.Значение КАК БонусОбщий
					   |	ВЫРАЗИТЬ( ТПремии.Значение + (ТПремии.ЗначениеКон - ТПремии.Значение)* ((ТПродажи.ПродажиВсегоПлан - ТПремии.АргументC) / (ТПремии.АргументПо - ТПремии.АргументC)) КАК ЧИСЛО(6,2)) КАК БонусОбщий		           
		               |ПОМЕСТИТЬ втПремияПродажи
		               |ИЗ
		               |(ВЫБРАТЬ
		               |	СУММА(ТекущиеПоДнямИПродавцам.ПродажиВсего) КАК ПродажиВсего,
		               |	СУММА(ТекущиеПоДнямИПродавцам.ПродажиВсего) * ((РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ), ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ), ДЕНЬ) + 1)) КАК ПродажиВсегоПлан				
		               |
		               |ИЗ 
		               |	втТекущиеПоДнямИПродавцам КАК ТекущиеПоДнямИПродавцам
		               |) КАК ТПродажи
		               |ЛЕВОЕ СОЕДИНЕНИЕ втПремии КАК ТПремии
		               |ПО (ТПремии.АргументC <= ТПродажи.ПродажиВсегоПлан)
		               |И ТПродажи.ПродажиВсегоПлан <= ТПремии.АргументПо
   					   |;	
					   |///////////////////////////////////////////////////////////////////////////////						   
					   |ВЫБРАТЬ
			   		   |	Т.ПродавецНаименование,
					   |	Т.Продавец,
					   |	ПремияПродажи.БонусОбщий КАК БонусОбщий,
					   |	Т.ПродажиВсего КАК ПродажиВсего,
					   |	Т.ПродажиВсего * ПремияПродажи.БонусОбщий / 100 КАК ПремияОбщий					   
			           |ПОМЕСТИТЬ втТекущиеОбщиеПродажиПродавцыПремии
					   |ИЗ  					   
				       |(ВЫБРАТЬ
				       |	ТекущиеПоДнямИПродавцам.Продавец.Наименование КАК ПродавецНаименование,
					   |	ТекущиеПоДнямИПродавцам.Продавец,
					   |	СУММА(ТекущиеПоДнямИПродавцам.ПродажиВсего) КАК ПродажиВсего
					   |ИЗ 
					   |	втТекущиеПоДнямИПродавцам КАК ТекущиеПоДнямИПродавцам					   
					   |СГРУППИРОВАТЬ ПО
					   |	ТекущиеПоДнямИПродавцам.Продавец, 
					   |	ТекущиеПоДнямИПродавцам.Продавец.Наименование
					   |) КАК Т
					   |	ЛЕВОЕ СОЕДИНЕНИЕ втПремияПродажи КАК ПремияПродажи ПО ИСТИНА		   							   
					   //|ИТОГИ 
					   //|	СУММА(ПродажиВсего), МАКСИМУМ(БонусОбщий), СУММА(ПремияОбщий)
					   //|	ПО ОБЩИЕ, Продавец	
					   |;	
					   |///////////////////////////////////////////////////////////////////////////////	
// 7 - Плановые проценты по брендам					   
					   // замечания Артема 08.07.16 16:36! - брать данные только из регистра!!!!					   
					   |ВЫБРАТЬ 
					   |	ВложенныйЗапрос.Папка КАК ПапкаБренд,
					   |	ВложенныйЗапрос.ПроцентПлан КАК ПроцентПлан,
					   |	ВложенныйЗапрос.ПроцентПродавцу КАК ПроцентПродавцу
					   |ПОМЕСТИТЬ втБонусПроцент
					   |ИЗ
					   //25.01.2017, Юра
//					   |	(ВЫБРАТЬ
//					   |		ВЫБОР
//					   |			КОГДА Бренды4Отчёта.Папка.ЭтоГруппа
//				       |				ТОГДА Бренды4Отчёта.Папка
//				   	   |						ИНАЧЕ Бренды4Отчёта.Папка
//				       |					КОНЕЦ КАК Папка,
//				       | 		ЕСТЬNULL(СрокиБонусов.ПроцентПлан, 0) КАК ПроцентПлан,
//				       | 		ЕСТЬNULL(СрокиБонусов.ПроцентПродавцу, 0) КАК ПроцентПродавцу
//					   |	ИЗ
//					   |		РегистрСведений.БонусыСроки.СрезПоследних(&КонецПериода, ) КАК СрокиБонусов
//					   |  		ЛЕВОЕ СОЕДИНЕНИЕ
//					   |		Справочник.Бренды4Отчёта КАК Бренды4Отчёта					 		
//					   |		ПО Бренды4Отчёта.Ссылка = СрокиБонусов.Папка					   	
//		     		   |	ГДЕ
////					   |		НЕ Бренды4Отчёта.ПометкаУдаления
//					   |		НЕ (ЕСТЬNULL(СрокиБонусов.ПроцентПлан, 0) = 0 И ЕСТЬNULL(СрокиБонусов.ПроцентПродавцу, 0) = 0)
//					   |	    И (СрокиБонусов.Период МЕЖДУ &НачалоПериода И &КонецПериода)
//			           |) КАК ВложенныйЗапрос
						//25.01.2017, Юра
					   |	(ВЫБРАТЬ
					   |		СрокиБонусов.Папка.Папка КАК Папка,
				       | 		ЕСТЬNULL(СрокиБонусов.ПроцентПлан, 0) КАК ПроцентПлан,
				       | 		ЕСТЬNULL(СрокиБонусов.ПроцентПродавцу, 0) КАК ПроцентПродавцу
					   |	ИЗ
					   |		РегистрСведений.БонусыСроки.СрезПоследних(&КонецПериода, ) КАК СрокиБонусов
		     		   |	ГДЕ
					   |		НЕ (ЕСТЬNULL(СрокиБонусов.ПроцентПлан, 0) = 0 И ЕСТЬNULL(СрокиБонусов.ПроцентПродавцу, 0) = 0)
					   |	    И (СрокиБонусов.Период МЕЖДУ &НачалоПериода И &КонецПериода)
			           |) КАК ВложенныйЗапрос
		               |;		               				   
		               |////////////////////////////////////////////////////////////////////////////////
// 8 - БРЕНДЫ - основная витруальная таблица для дальнейших манипуляций с брендами						   
		               |ВЫБРАТЬ
		               |	Т.Бренд КАК Бренд,
		               |	Т.Продавец КАК Продавец,
		               |	Т.ПродажиЗаМесяц КАК ПродажиЗаМесяц,
		               |	Т.ОбщиеПродажи КАК ОбщиеПродажи,
		               |	Т.ОбщиеПродажиПланЗаМесяц КАК ОбщиеПродажиПланЗаМесяц,					   
		               |	Т.ПроцентПлан КАК ПроцентПлан,
		               |	Т.ПроцентОтОбщихПродаж КАК ПроцентОтОбщихПродаж,
		               |	Т.ПроцентПродавцу КАК ПроцентПродавцу
		               |ПОМЕСТИТЬ втПродажиПоБрендамПолный
		               |ИЗ
		               |	(ВЫБРАТЬ 
		               |		ТБонусПроцент.ПапкаБренд КАК Бренд,
		               |		ПродажиОбороты.ДокументПродажи.Ответственный КАК Продавец,
			   	   		// !!!! добавлено 04.08.16 - не учитывать возвраты!
 		               |		ПродажиОбороты.Регистратор КАК Регистратор,
		               |		СУММА(ПродажиОбороты.СтоимостьОборот) КАК ПродажиЗаМесяц,
		               |		МАКСИМУМ(ЕстьNULL(ТекущиеОбщиеПродажи.СтоимостьОборот, 0)) КАК ОбщиеПродажи,
		               |		МАКСИМУМ(ЕстьNULL(ТекущиеОбщиеПродажи.СтоимостьОборот, 0)) * (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ), ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ), ДЕНЬ) + 1) КАК ОбщиеПродажиПланЗаМесяц,					   
		               |		МАКСИМУМ(ТБонусПроцент.ПроцентПлан) КАК ПроцентПлан,
		               |		МАКСИМУМ(ТБонусПроцент.ПроцентПродавцу) КАК ПроцентПродавцу,
		               |		ВЫБОР
					    // 21.07.16	
//		               |			КОГДА МАКСИМУМ(ТекущиеОбщиеПродажи.СтоимостьОборот) = 0
	   			       |			КОГДА МАКСИМУМ(ЕстьNULL(ТекущиеОбщиеПродажи.СтоимостьОборот, 0)) = 0
 						// 21.07.16	
		               |				ТОГДА 0
		               |			ИНАЧЕ СУММА(ПродажиОбороты.СтоимостьОборот) / МАКСИМУМ(ТекущиеОбщиеПродажи.СтоимостьОборот) * 100
		               |		КОНЕЦ КАК ПроцентОтОбщихПродаж
		               |	ИЗ
		               |		втБонусПроцент КАК ТБонусПроцент
					   		// !!!! добавлено 04.08.16 - не учитывать возвраты!
//		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, , Контрагент = &Контрагент) КАК ПродажиОбороты
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, АВТО, Контрагент = &Контрагент) КАК ПродажиОбороты
					   |	   		ПО (ВЫБОР
					   |				КОГДА ТБонусПроцент.ПапкаБренд.ЭтоГруппа
					   |					ТОГДА ВЫБОР
					   |							КОГДА ПродажиОбороты.Номенклатура.Родитель = ТБонусПроцент.ПапкаБренд
					   |								ТОГДА ПродажиОбороты.Номенклатура.Родитель = ТБонусПроцент.ПапкаБренд
					   |							ИНАЧЕ ПродажиОбороты.Номенклатура.Родитель.Родитель = ТБонусПроцент.ПапкаБренд
					   |						КОНЕЦ
					   |				ИНАЧЕ ПродажиОбороты.Номенклатура = ТБонусПроцент.ПапкаБренд
					   |			КОНЕЦ)		
					   |			ЛЕВОЕ СОЕДИНЕНИЕ
					   |			втТекущиеОбщиеПродажи КАК ТекущиеОбщиеПродажи
		               |			ПО (ТекущиеОбщиеПродажи.Магазин = ПродажиОбороты.Контрагент)
			     		// !!!! добавлено 04.08.16 - не учитывать возвраты!
					   |	ГДЕ
					   |		ПродажиОбороты.СтоимостьОборот > 0
					   //|		ЕСТЬNULL(ТБонусПроцент.ПроцентПлан, 0) > 0
					   //|		ПродажиОбороты.ДокументПродажи.Ответственный <> NULL
		               |	
		               |	СГРУППИРОВАТЬ ПО
		               |		ТБонусПроцент.ПапкаБренд,
 				       |		ПродажиОбороты.Регистратор,
		               |		ПродажиОбороты.ДокументПродажи.Ответственный) КАК Т
				     // 21.07.16
					   //|ГДЕ
					   //|	ЕстьNULL(Т.Продавец, 0) <> 0
				        // 21.07.16
		               |;					   
		               |////////////////////////////////////////////////////////////////////////////////
// 9					   
		               |ВЫБРАТЬ
		               |	ТПродажиПоБрендам.Бренд КАК Бренд,
		               |	Т.Продавец КАК Продавец,
		               |	ВЫБОР
		               |		КОГДА ТПродажиПоБрендам.Продавец <> Т.Продавец
		               |			ТОГДА 0
		               |		ИНАЧЕ ТПродажиПоБрендам.ПродажиЗаМесяц
		               |	КОНЕЦ КАК ПродажиЗаМесяц,
		               |	ТПродажиПоБрендам.ОбщиеПродажи КАК ОбщиеПродажи,
		               |	ТПродажиПоБрендам.ОбщиеПродажиПланЗаМесяц КАК ОбщиеПродажиПланЗаМесяц,					   
		               |	ТПродажиПоБрендам.ПроцентПлан КАК ПроцентПлан,
		               |	ТПродажиПоБрендам.ПроцентПродавцу КАК ПроцентПродавцу,
		               |	ВЫБОР
		               |		КОГДА ТПродажиПоБрендам.Продавец <> Т.Продавец
		               |			ТОГДА 0
		               |		ИНАЧЕ ТПродажиПоБрендам.ПроцентОтОбщихПродаж
		               |	КОНЕЦ КАК ПроцентОтОбщихПродаж
		               |ПОМЕСТИТЬ втПродажиПоБрендам
		               |ИЗ
		               |	втПродажиПоБрендамПолный КАК ТПродажиПоБрендам
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |			ТБ.Продавец КАК Продавец
		               |		ИЗ
		               |			втПродажиПоБрендамПолный КАК ТБ) КАК Т
		               |		ПО (ИСТИНА)
		               |;		               				   
		               |////////////////////////////////////////////////////////////////////////////////
// 10 - Бренды, сгруппированные по брендам и продавцам					   
		               |ВЫБРАТЬ
		               |	Т.Бренд КАК Бренд,
		               |	Т.Продавец КАК Продавец,
		               |	СУММА(Т.ПродажиЗаМесяц) КАК ПродажиЗаМесяц,
		               |	СУММА(Т.ПродажиЗаМесяц) * (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), КОНЕЦПЕРИОДА(&КонецПериода, МЕСЯЦ), ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), &КонецПериода, ДЕНЬ) + 1) КАК ПродажиСреднемесРасчет,
		               |	МАКСИМУМ(Т.ОбщиеПродажи) КАК ОбщиеПродажи,
		               |	МАКСИМУМ(Т.ОбщиеПродажиПланЗаМесяц) КАК ОбщиеПродажиПланЗаМесяц,					   
		               |	МАКСИМУМ(Т.ПроцентПлан) КАК ПроцентПлан,
		               |	МАКСИМУМ(Т.ПроцентПродавцу) КАК ПроцентПродавцу,
		               |	СУММА(Т.ПроцентОтОбщихПродаж) КАК ПроцентОтОбщихПродаж
		               |ПОМЕСТИТЬ втПродажиПоБрендамСвернуто
		               |ИЗ
		               |	втПродажиПоБрендам КАК Т
					   |	
		               |СГРУППИРОВАТЬ ПО
		               |	Т.Бренд,
		               |	Т.Продавец
		               |;				   
		               |////////////////////////////////////////////////////////////////////////////////					   
// 11 - История работы продавцов					   
					   |ВЫБРАТЬ РАЗЛИЧНЫЕ
					   |	НАЧАЛОПЕРИОДА(ИсторияРаботыПродавцов.Период, ДЕНЬ) КАК ДатаСмены,
					   |	ИсторияРаботыПродавцов.Продавец КАК Продавец
					   |ПОМЕСТИТЬ втИсторияРаботыПродавцов
					   |ИЗ
					   |	РегистрСведений.ИсторияРаботыПродавцов КАК ИсторияРаботыПродавцов
					   |ГДЕ
					   |	ИсторияРаботыПродавцов.Период МЕЖДУ &НачалоПериода И &КонецПериода
					   |	И ИсторияРаботыПродавцов.Продавец В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т)
					   |;						   
					   |////////////////////////////////////////////////////////////////////////////////
// 12 - смены - с продавцами 					   
					   |ВЫБРАТЬ РАЗЛИЧНЫЕ
					   |	ИсторияРаботыПродавцов.ДатаСмены КАК ДатаСмены,
					   |	ИсторияРаботыПродавцов.Продавец КАК Продавец
					   |ПОМЕСТИТЬ втСменыПодробно
					   |ИЗ
					   |	втИсторияРаботыПродавцов КАК ИсторияРаботыПродавцов
					   |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
					   |	втТекущиеПоДнямИПродавцам КАК Т 
					   |	ПО ИсторияРаботыПродавцов.ДатаСмены  = Т.ДатаСмены
					   |	   И ИсторияРаботыПродавцов.Продавец = Т.Продавец
					   |;					   
					   |////////////////////////////////////////////////////////////////////////////////
// 13 - смены - кол-во продавцов					   
					   |ВЫБРАТЬ
					   |	ИсторияРаботыПродавцов.ДатаСмены КАК ДатаСмены,
					   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИсторияРаботыПродавцов.Продавец) КАК КоличествоПродавцов
					   |ПОМЕСТИТЬ втСменыСвернуто
					   |ИЗ
					   |	втИсторияРаботыПродавцов КАК ИсторияРаботыПродавцов
					   |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
					   |	втТекущиеПоДнямИПродавцам КАК Т 
					   |	ПО ИсторияРаботыПродавцов.ДатаСмены  = Т.ДатаСмены
					   |	   И ИсторияРаботыПродавцов.Продавец = Т.Продавец
					   |
					   |СГРУППИРОВАТЬ ПО
					   |	ИсторияРаботыПродавцов.ДатаСмены
					   |;
					   |//////////////////////////////////////////////////////////////////////////////////			   
// 14 - смены			   
					   |ВЫБРАТЬ
					   |РАЗЛИЧНЫЕ
					   |	СменыСвернуто.ДатаСмены КАК ДатаСмены,
					   |	СменыСвернуто.КоличествоПродавцов КАК КоличествоПродавцовВсегоЗаСмену,
					   |	ПродавцыСменВсе.Продавец КАК Продавец,
					   |//	СменыПодробно.Продавец КАК Продавец1
					   |	ВЫБОР
					   |		КОГДА ЕстьNULL(ПродавцыСмен.ПродажиВсего, 0) = 0 ТОГДА ЛОЖЬ
					   |	ИНАЧЕ ИСТИНА
					   |	КОНЕЦ КАК БылиПродажи,
					   |	ВЫБОР
					   |		КОГДА ПродавцыСменВсе.Продавец <> СменыПодробно.Продавец ТОГДА 0
					   |		ИНАЧЕ (1 / СменыСвернуто.КоличествоПродавцов)
					   |	КОНЕЦ КАК БонусКоэффициент,
					   |	ВЫБОР
					   |		КОГДА ПродавцыСменВсе.Продавец <> СменыПодробно.Продавец ТОГДА 0
					   |		ИНАЧЕ
					   // 21.07.16
					   //|			ЕСТЬNULL(ТСтавки.Значение, 0)
					   |	      	ВЫБОР КОГДА &СтавкаКонтрагента > 0
					   |				ТОГДА &СтавкаКонтрагента
					   |				ИНАЧЕ ЕСТЬNULL(ТСтавки.Значение, 0)
					   |			КОНЕЦ	
					   // 21.07.16
					   |	КОНЕЦ КАК БонусОбщий,    					   
			//		   |	//ЕСТЬNULL(ТСтавки.Значение, 0) КАК БонусОбщий,
					   |	ВЫБОР		
					   |		КОГДА ПродавцыСменВсе.Продавец <> СменыПодробно.Продавец ТОГДА 0
////					   |		КОГДА ПродавцыСмен.Продавец <> СменыПодробно.Продавец ТОГДА 0
//				  // 21.07.16
					// |		ИНАЧЕ (1 / СменыСвернуто.КоличествоПродавцов * ЕСТЬNULL(ТСтавки.Значение, 0))
				       |		ИНАЧЕ	
		   			   |           	ВЫБОР КОГДА &СтавкаКонтрагента > 0
					   |				ТОГДА (1 / СменыСвернуто.КоличествоПродавцов * &СтавкаКонтрагента)
					   |				ИНАЧЕ (1 / СменыСвернуто.КоличествоПродавцов * ЕСТЬNULL(ТСтавки.Значение, 0))
					   |			КОНЕЦ					   
					   |	КОНЕЦ КАК ПремияОбщий
//					   |	//1 / Смены.КоличествоПродавцов * ЕСТЬNULL(ТСтавки.Значение, 0) КАК ПремияОбщий
					   |ПОМЕСТИТЬ втСмены
					   |ИЗ
					   |	втСменыСвернуто КАК СменыСвернуто	              
					   |				  
					   |	ПОЛНОЕ  СОЕДИНЕНИЕ 
					   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т) КАК ПродавцыСменВсе ПО (ИСТИНА)
	   				   |	
				   	   |	ЛЕВОЕ СОЕДИНЕНИЕ 
					   |	(ВЫБРАТЬ * ИЗ втСменыПодробно КАК Т) КАК СменыПодробно 
					   |	ПО СменыПодробно.ДатаСмены = СменыСвернуто.ДатаСмены
					   |
					   |	ЛЕВОЕ  СОЕДИНЕНИЕ 
					   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т1.ДатаСмены, Т1.Продавец, Т1.ПродажиВсего  ИЗ втТекущиеПоДнямИПродавцам КАК Т1
					   // ++ добавлен фильтр - только если были продажи
//					   |		ГДЕ Т1.ПродажиВсего > 0     
					   // --
					   |	  ) КАК ПродавцыСмен
					   |	ПО ПродавцыСмен.ДатаСмены = СменыПодробно.ДатаСмены 
					   |	   И ПродавцыСмен.Продавец = СменыПодробно.Продавец
	   				   |
						//И ПродавцыСмен.ДатаСмены = Смены.ДатаСмены		
					   |	ЛЕВОЕ СОЕДИНЕНИЕ 
					   	  // 21.07.16
//					   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ОбщиеПродажиПланЗаМесяц КАК ОбщиеПродажиПланЗаМесяц ИЗ втПродажиПоБрендамСвернуто КАК Т) КАК ТОбщ ПО (ИСТИНА)
		  			   //|(ВЫБРАТЬ МАКСИМУМ(Т.ОбщиеПродажиПланЗаМесяц) КАК ОбщиеПродажиПланЗаМесяц ИЗ втПродажиПоБрендамСвернуто КАК Т) КАК ТОбщ ПО (ИСТИНА)					   
						// 21.07.16
						// 03.08.16
					   |(ВЫБРАТЬ МАКСИМУМ(Т.ПродажиВсегоПлан) КАК ОбщиеПродажиПланЗаМесяц ИЗ втПремияПродажи КАК Т) КАК ТОбщ ПО (ИСТИНА)					   
					   |	
					   |	ЛЕВОЕ СОЕДИНЕНИЕ втСтавки КАК ТСтавки
					   |	ПО (ТСтавки.АргументC <= ТОбщ.ОбщиеПродажиПланЗаМесяц)
					   |	И ТОбщ.ОбщиеПродажиПланЗаМесяц <= ТСтавки.АргументПо	
					   |ГДЕ
					   |	ПродавцыСменВсе.Продавец В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т)					   
					   |;					   
					   |//////////////////////////////////////////////////////////////////////////////////
// 15 					   
     			   	   |ВЫБРАТЬ
					   |    Т.Бренд КАК Бренд,
		               |	Т.Продавец КАК Продавец,					   
		               |	СУММА(Т.ПродажиЗаМесяц) КАК Продажи,
   				       |	МАКСИМУМ(Т.ПродажиВсегоПоПродавцам) КАК ПродажиВсегоПоПродавцам,
					   //|	ПродажиПоПродавцам.ПродажиВсего КАК ПродажиВсегоПоПродавцам,					   
		               |	МАКСИМУМ(Т.ПродажиСреднемесРасчет) КАК ПродажиСреднемесРасчет,
		               |	МАКСИМУМ(Т.ОбщиеПродажи) КАК ОбщиеПродажи,
		               |	МАКСИМУМ(Т.ОбщиеПродажиПланЗаМесяц) КАК ОбщиеПродажиПланЗаМесяц,						   
		               |	МАКСИМУМ(Т.ПроцентПлан) КАК ПроцентПлан,
		               |	СУММА(Т.ПроцентОтОбщихПродаж) КАК ПроцентОтОбщихПродаж,		           				   
		           //  |	ПродажиПоБрендам.ПродажиЗаМесяц * ЕСТЬNULL(ТПремии.Значение, 0) КАК Премия
   		               |	МАКСИМУМ(Т.ПроцентПродавцу) КАК Бонус,
				       |	МАКСИМУМ(Т.БонусОбщий) КАК БонусОбщий,
					   |	СУММА(Т.Премия) КАК Премия,
 					   |	МАКСИМУМ(Т.ПремияОбщий) КАК ПремияОбщий	
					   |ПОМЕСТИТЬ втТБренды					   
					   |ИЗ (ВЫБРАТЬ						   
					   |	ПродажиПоБрендам.Бренд КАК Бренд,
		               |	ПродажиПоБрендам.Продавец КАК Продавец,					   
					   //|	ПродажиПоБрендам.Продавец КАК Продавец,						   
		               |	ПродажиПоБрендам.ПродажиЗаМесяц КАК ПродажиЗаМесяц,
					   |	ПродажиПоПродавцам.ПродажиВсего КАК ПродажиВсегоПоПродавцам,					   
		               |	ПродажиПоБрендам.ПродажиСреднемесРасчет КАК ПродажиСреднемесРасчет,
		               |	ПродажиПоБрендам.ОбщиеПродажи КАК ОбщиеПродажи,
		               |	ПродажиПоБрендам.ОбщиеПродажиПланЗаМесяц КАК ОбщиеПродажиПланЗаМесяц,						   
		               |	ПродажиПоБрендам.ПроцентПлан КАК ПроцентПлан,
		               |	ПродажиПоБрендам.ПроцентОтОбщихПродаж КАК ПроцентОтОбщихПродаж,		           				   
		           //  |	ПродажиПоБрендам.ПродажиЗаМесяц * ЕСТЬNULL(ТПремии.Значение, 0) КАК Премия
   		               |	ПродажиПоБрендам.ПроцентПродавцу КАК ПроцентПродавцу,
  				       |	(ПродажиПоБрендам.ПродажиЗаМесяц * ПродажиПоБрендам.ПроцентПродавцу / 100) КАК Премия,
				       |	ЕСТЬNULL(ТПремии.Значение, 0) КАК БонусОбщий,
					    //  было
						// 21.07.16
					   |	ПродажиПоПродавцам.ПродажиВсего * ЕСТЬNULL(ТПремии.Значение, 0) / 100 КАК ПремияОбщий								
					   //|	ВЫБОР
					   //|		КОГДА ЕстьNULL(ТаблПродажиПоБрендам.ОбщиеПродажи, 0) = 0 ТОГДА 0
					   //|		ИНАЧЕ ПродажиПоПродавцам.ПродажиВсего * ЕСТЬNULL(ТПремии.Значение, 0) / 100
					   //|	КОНЕЦ КАК ПремияОбщий	 					   					   
					   // 21.07.16
	           		   |ИЗ втПродажиПоБрендамСвернуто КАК ПродажиПоБрендам
         			   |					   
         			   |		ЛЕВОЕ СОЕДИНЕНИЕ 
					   |		(ВЫБРАТЬ Т.Продавец, СУММА(Т.ПродажиВсего) КАК ПродажиВсего ИЗ втТекущиеПоДнямИПродавцам КАК Т СГРУППИРОВАТЬ ПО Продавец) КАК ПродажиПоПродавцам
		               |		ПО ПродажиПоПродавцам.Продавец = ПродажиПоБрендам.Продавец
		               |
					   //  было
					   //|		ЛЕВОЕ СОЕДИНЕНИЕ втПремии КАК ТПремии
					   //|		ПО (ТПремии.АргументC <= ПродажиПоБрендам.ОбщиеПродажи)
					   //|			И ПродажиПоБрендам.ОбщиеПродажи <= ТПремии.АргументПо
					   // стало
		               |   		ЛЕВОЕ СОЕДИНЕНИЕ втПремии КАК ТПремии
		               |		ПО (ТПремии.АргументC <= ПродажиПоБрендам.ОбщиеПродажиПланЗаМесяц)
		               |			И ПродажиПоБрендам.ОбщиеПродажиПланЗаМесяц <= ТПремии.АргументПо
					   |ГДЕ
					   |	ПродажиПоБрендам.Продавец В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т)
					   // 21.07.16
					   |	И ПродажиПоБрендам.Продавец <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
					   // 21.07.16
		               |) КАК Т
				       |СГРУППИРОВАТЬ ПО
		               |	Бренд,
		               |	Продавец						   
					   |;   						   
					   |//////////////////////////////////////////////////////////////////////////////////
// 16 - БРЕНДЫ - итоговый					   
					   |ВЫБРАТЬ	
					   |	Табл.Бренд,
					   |	СУММА(Табл.ПроцентОтОбщихПродаж) КАК ПроцентОтОбщихПродаж
					   |ПОМЕСТИТЬ втБрендыРейтинг					   
					   |ИЗ втТБренды КАК Табл
					   //|УПОРЯДОЧИТЬ ПО 
					   //|	Табл.ПроцентОтОбщихПродаж УБЫВ
					   |СГРУППИРОВАТЬ ПО
					   |	Бренд                            
					   |;					   
					   |//////////////////////////////////////////////////////////////////////////////////
// 17 - СМЕНЫ - итоговый					   
				     	 |ВЫБРАТЬ	
				       	 |	Табл.ДатаСмены,
				         |	Табл.Продавец КАК Продавец,	
				         |	МАКСИМУМ(Табл.БонусКоэффициент) КАК БонусКоэффициент,	
				         |	МАКСИМУМ(Табл.БонусОбщий) КАК БонусОбщий,	
				         |	СУММА(Табл.ПремияОбщий) КАК ПремияОбщий
				         |ИЗ 
				         |	(ВЫБРАТЬ РАЗЛИЧНЫЕ * ИЗ втСмены) КАК Табл
					     |СГРУППИРОВАТЬ ПО
					     |	ДатаСмены,
					     |	Продавец
				         |УПОРЯДОЧИТЬ ПО
					     |	ДатаСмены,
				         |	Продавец.Наименование 					   
				         |ИТОГИ
				         |	СУММА(ПремияОбщий),
                         |	СУММА(БонусКоэффициент),
				         |	МАКСИМУМ(БонусОбщий)
				         |ПО
				         |	ОБЩИЕ,    
				         |	ДатаСмены
				         |	Продавец
    				     |;
		               |////////////////////////////////////////////////////////////////////////////////
// 18 - БРЕНДЫ					   
				       |ВЫБРАТЬ
				       |	БрендыРейтинг.Бренд КАК Бренд, 
				       |	ТаблПродажиПоБрендам.Продавец КАК Продавец,					   
				       |	ТаблПродажиПоБрендам.Продажи КАК Продажи,
				       |	ТаблПродажиПоБрендам.ПродажиВсегоПоПродавцам КАК ПродажиВсегоПоПродавцам,
				       |	ТаблПродажиПоБрендам.ПродажиСреднемесРасчет КАК ПродажиСреднемесРасчет,
					   |	ТаблПродажиПоБрендам.ОбщиеПродажи КАК ОбщиеПродажи,
				       |	ТаблПродажиПоБрендам.ОбщиеПродажиПланЗаМесяц КАК ОбщиеПродажиПланЗаМесяц,						   
				       |	ТаблПродажиПоБрендам.ПроцентПлан КАК ПроцентПлан,
				       |	ТаблПродажиПоБрендам.ПроцентОтОбщихПродаж КАК ПроцентОтОбщихПродаж,		           				   
				       |	ТаблПродажиПоБрендам.Бонус КАК Бонус,
					   // 21.07.16					   
				       //|	ТаблПродажиПоБрендам.БонусОбщий КАК БонусОбщий,
					   |	ВЫБОР
					   |		КОГДА ЕстьNULL(ТаблПродажиПоБрендам.ОбщиеПродажи, 0) = 0 ТОГДА 0
					   |		ИНАЧЕ ТаблПродажиПоБрендам.БонусОбщий
					   |	КОНЕЦ КАК БонусОбщий,						 
					   |	ТаблПродажиПоБрендам.Премия КАК Премия,
				       //|	ТаблПродажиПоБрендам.ПремияОбщий КАК ПремияОбщий
					   |	ВЫБОР
					   |		КОГДА ЕстьNULL(ТаблПродажиПоБрендам.ОбщиеПродажи, 0) = 0 ТОГДА 0
					   |		ИНАЧЕ ТаблПродажиПоБрендам.ПремияОбщий
					   |	КОНЕЦ КАК ПремияОбщий						 				
					   // 21.07.16
				       // стало
				       //|	ПродажиПоБрендам.ОбщиеПродажиПланЗаМесяц * ЕСТЬNULL(ТПремии.Значение, 0) / 100 КАК ПремияОбщий
				       |ИЗ
				       |    втБрендыРейтинг КАК БрендыРейтинг
					   |	ЛЕВОЕ СОЕДИНЕНИЕ
				       |	втТБренды КАК ТаблПродажиПоБрендам					   
		       		   |	ПО ТаблПродажиПоБрендам.Бренд = БрендыРейтинг.Бренд
				       |УПОРЯДОЧИТЬ ПО
				       |	БрендыРейтинг.ПроцентОтОбщихПродаж УБЫВ, Продавец.Наименование
				       |ИТОГИ
				       |	СУММА(Продажи),
				       |	МАКСИМУМ(ПродажиВсегоПоПродавцам),					   
				       |	МАКСИМУМ(ОбщиеПродажи),
				       |	МАКСИМУМ(ОбщиеПродажиПланЗаМесяц),						   
				       |	МАКСИМУМ(ПроцентПлан),						   
				       |	МАКСИМУМ(Бонус),
				       |	СУММА(Премия),	
				       |	МАКСИМУМ(БонусОбщий),
				       |	МАКСИМУМ(ПремияОбщий),	           						                							   
				       |	СУММА(ПроцентОтОбщихПродаж)
				       |ПО
				       |	ОБЩИЕ,
				       |	Бренд,
				       |	Продавец 						   
					   |;
		               |////////////////////////////////////////////////////////////////////////////////
// 19 - Итоги фикс.часть					   
				       |ВЫБРАТЬ	
				       |	Табл.Продавец КАК Продавец,	
				       |	СУММА(Табл.БонусКоэффициент) КАК БонусКоэффициент,	
				       |	МАКСИМУМ(Табл.БонусОбщий) КАК БонусОбщий,	
				       |	СУММА(Табл.ПремияОбщий) КАК ПремияОбщий
				       |ИЗ 
				       |	(ВЫБРАТЬ РАЗЛИЧНЫЕ * ИЗ втСмены) КАК Табл
					   |СГРУППИРОВАТЬ ПО
					   |	Продавец
				       |УПОРЯДОЧИТЬ ПО
    			       |	Продавец.Наименование 					   
				       |ИТОГИ
				       |	СУММА(ПремияОбщий),
                       |	СУММА(БонусКоэффициент),
				       |	МАКСИМУМ(БонусОбщий)
				       |ПО
				       |	ОБЩИЕ,    
				       |	Продавец
					   |;
 					   |///////////////////////////////////////////////////////////////////////////////						   
// 20 начисления 
					   |ВЫБРАТЬ
					   |	ТПремииШтрафы.Период,
					   |	ТПремииШтрафы.ПремияШтраф,
					   |	ТПремииШтрафы.Сотрудник,					   
		   			   |	ТПремииШтрафы.Сумма	
					   |ПОМЕСТИТЬ втНачисления					   
					   |ИЗ 
					    // 21.07
					   //|    РегистрСведений.ПремииШтрафыСотрудников.СрезПоследних(&КонецПериода,
					   //|		Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т)
					   //|     )
					   |    РегистрСведений.ПремииШтрафыСотрудников
					    // 21.07
					   |	КАК ТПремииШтрафы       
					   |ГДЕ
					   |	(ТПремииШтрафы.Период МЕЖДУ &НачалоПериода И 
					   //&КонецПериода)		
				       |	&КонецМесяца)
					   |	И ТПремииШтрафы.ПремияШтраф.Родитель =  ЗНАЧЕНИЕ(Справочник.ВидыПремийШтрафов.Начисления)
				   	   // 21.07
					   |	И ТПремииШтрафы.Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т)
					   // 16.08
					   |	И ТПремииШтрафы.Магазин = &МагазинДляШтрафовИПремий
					   // 30.05.2018 Женя, изменила параметр. Был "&Контрагент" на месте актуального "&МагазинДляШтрафовИПремий"
		 			   |;
					   |///////////////////////////////////////////////////////////////////////////////		
// 21					   
					   |ВЫБРАТЬ
					   |	НачисленияПериод.Период,
					   |	НачисленияПремияШтраф.ПремияШтраф,
					   |	ТПродавцы.Продавец,					   
		   			   |	ТПремии.Сумма	
					   |ПОМЕСТИТЬ втНачисленияПолно					   
					   |ИЗ 
					   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец КАК Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т) КАК ТПродавцы
				       |	ЛЕВОЕ СОЕДИНЕНИЕ
				   	   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т2.ПремияШтраф КАК ПремияШтраф ИЗ втНачисления КАК Т2) КАК НачисленияПремияШтраф	
					   |	ПО (ИСТИНА)
					   |	ЛЕВОЕ СОЕДИНЕНИЕ
					   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т3.Период КАК Период ИЗ втНачисления КАК Т3) КАК НачисленияПериод	
					   |	ПО (ИСТИНА)					   					   
					   |	ЛЕВОЕ СОЕДИНЕНИЕ  втНачисления КАК ТПремии 							   
					   |	ПО 
					   |		ТПремии.Сотрудник = ТПродавцы.Продавец
					   |		И ТПремии.ПремияШтраф = НачисленияПремияШтраф.ПремияШтраф
					   |		И ТПремии.Период = НачисленияПериод.Период
		 			   |;	
 					   |///////////////////////////////////////////////////////////////////////////////						   
// 22 удержания (штрафы) 
			 		   |ВЫБРАТЬ
					   |	ТПремииШтрафы.Период,
					   |	ТПремииШтрафы.ПремияШтраф,
					   |	ТПремииШтрафы.Сотрудник,					   
		   			   |	ТПремииШтрафы.Сумма	
					   |ПОМЕСТИТЬ втУдержания	
					   // 21.07
					   //|ИЗ РегистрСведений.ПремииШтрафыСотрудников.СрезПоследних(&КонецПериода,
					   //|		Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т)
					    // 21.07
					   |ИЗ 
					   |	РегистрСведений.ПремииШтрафыСотрудников КАК ТПремииШтрафы       
					   |ГДЕ
					   |	(ТПремииШтрафы.Период МЕЖДУ &НачалоПериода И
					   //&КонецПериода)		
				      |	&КонецМесяца)
					   |	И ТПремииШтрафы.ПремияШтраф.Родитель =  ЗНАЧЕНИЕ(Справочник.ВидыПремийШтрафов.Удержания)
					   // 21.07
					   |	И ТПремииШтрафы.Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т)
					   // 16.08
  					   |	И ТПремииШтрафы.Магазин = &МагазинДляШтрафовИПремий
					   // 30.05.2018 Женя, изменила параметр. Был "&Контрагент" на месте актуального "&МагазинДляШтрафовИПремий"
					   |;
					   |///////////////////////////////////////////////////////////////////////////////		
// 23					   
					   |ВЫБРАТЬ
					   |	УдержанияПериод.Период,
					   |	УдержанияПремияШтраф.ПремияШтраф,
					   |	ТПродавцы.Продавец,					   
		   			   |	ТШтрафы.Сумма	
					   |ПОМЕСТИТЬ втУдержанияПолно					   
					   |ИЗ 
					   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец КАК Продавец ИЗ втТекущиеПоДнямИПродавцам КАК Т) КАК ТПродавцы
				       |	ЛЕВОЕ СОЕДИНЕНИЕ
				   	   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т2.ПремияШтраф КАК ПремияШтраф ИЗ втУдержания КАК Т2) КАК УдержанияПремияШтраф	
					   |	ПО (ИСТИНА)
					   |	ЛЕВОЕ СОЕДИНЕНИЕ
					   |	(ВЫБРАТЬ РАЗЛИЧНЫЕ Т3.Период КАК Период ИЗ втУдержания КАК Т3) КАК УдержанияПериод	
					   |	ПО (ИСТИНА)					   					   
					   |	ЛЕВОЕ СОЕДИНЕНИЕ  втУдержания КАК ТШтрафы							   
					   |	ПО 
					   |		ТШтрафы.Сотрудник = ТПродавцы.Продавец
					   |		И ТШтрафы.ПремияШтраф = УдержанияПремияШтраф.ПремияШтраф
					   |		И ТШтрафы.Период = УдержанияПериод.Период
		 			   |;  
 					   |///////////////////////////////////////////////////////////////////////////////	
// 24 - Итоги переменная часть						   
		               |ВЫБРАТЬ         			  
		               |	Табл.Бренд КАК Бренд,
		               |	Табл.Продавец КАК Продавец,					   
		               |	Табл.Продажи КАК Продажи,
   				       |	Табл.ПродажиВсегоПоПродавцам КАК ПродажиВсегоПоПродавцам,
					   //|	ПродажиПоПродавцам.ПродажиВсего КАК ПродажиВсегоПоПродавцам,					   
		               |	Табл.ПродажиСреднемесРасчет КАК ПродажиСреднемесРасчет,
		               |	Табл.ОбщиеПродажи КАК ОбщиеПродажи,
		               |	Табл.ОбщиеПродажиПланЗаМесяц КАК ОбщиеПродажиПланЗаМесяц,						   
		               |	Табл.ПроцентПлан КАК ПроцентПлан,
		               |	Табл.ПроцентОтОбщихПродаж КАК ПроцентОтОбщихПродаж,		           				   
		           //  |	ПродажиПоБрендам.ПродажиЗаМесяц * ЕСТЬNULL(ТПремии.Значение, 0) КАК Премия
   		               |	Табл.Бонус КАК Бонус,
				       |	Табл.БонусОбщий КАК БонусОбщий,
					   |	Табл.Премия КАК Премия,
 					   |	Табл.ПремияОбщий КАК ПремияОбщий 
					   |ИЗ  
					   |	втТБренды КАК Табл
					   
					   
		               |УПОРЯДОЧИТЬ ПО
		               |	Продавец.Наименование 		   
			           |ИТОГИ
		               |	СУММА(Продажи),
		               |	МАКСИМУМ(ПродажиВсегоПоПродавцам),					   
		               |	МАКСИМУМ(ОбщиеПродажи),
		               |	МАКСИМУМ(ОбщиеПродажиПланЗаМесяц),						   
		               |	МАКСИМУМ(ПроцентПлан),						   
		               |	МАКСИМУМ(Бонус),
			   		   |	СУММА(Премия),	
   			   		   |	МАКСИМУМ(БонусОбщий),
 				       |	МАКСИМУМ(ПремияОбщий),	           						                							   
		               |	СУММА(ПроцентОтОбщихПродаж)
					   |ПО
					   |	ОБЩИЕ, Продавец
					   |;	   					  		   						   
   					   |///////////////////////////////////////////////////////////////////////////////						   					   
// 25 - Итоги (подвал)					   
			           |ВЫБРАТЬ         	
					   |	СУММА(ТаблСводно.Премия) КАК Премия,
					   |	МАКСИМУМ(ТаблСводно.ПремияОбщий) КАК ПремияОбщий,	
					   |	СУММА(ТаблСводно.ПремияФикс) КАК ПремияФикс,
			   		   |	СУММА(ТаблСводно.Начисления) КАК Начисления,
			   		   |	СУММА(ТаблСводно.Удержания) КАК Удержания,
		   			   |	ТаблСводно.Продавец КАК Продавец	
				       |ИЗ
	   				   | (
				   	   |ВЫБРАТЬ
					   |	0 КАК ПремияОбщий,
					   |	0 КАК Премия,
					   |	Табл1.ПремияОбщий КАК ПремияФикс,
					   |	0 КАК Начисления,
					   |	0 КАК Удержания,
					   |	Табл1.Продавец КАК Продавец	
					   |ИЗ 
					   |(ВЫБРАТЬ 
					   //РАЗЛИЧНЫЕ     
					   //|	0 КАК ПремияОбщий,
					   //|	0 КАК Премия,
					   //|	Табл1.ПремияОбщий КАК ПремияФикс,
					   //|	0 КАК Начисления,
					   //  |	0 КАК Удержания,
					   //|	Табл1.Продавец КАК Продавец						   
					   //|ИЗ  
					   //|	втСмены
					   |	СУММА(Т.ПремияОбщий) КАК ПремияОбщий,
					   |	Т.Продавец КАК Продавец						   
					   |ИЗ  
					   |	втСмены КАК Т 
					   |СГРУППИРОВАТЬ ПО
					   |	Продавец
		       		   |) КАК Табл1
					   |					   
					   |ОБЪЕДИНИТЬ ВСЕ			   	   
					   //|ВЫБРАТЬ РАЗЛИЧНЫЕ        	
					   //|	Табл2.ПремияОбщий,
					   //|	Табл2.Премия,					   
					   //|	0,
					   //|	0,
					   //|	0,					   
					   //|	Табл2.Продавец 	
					   |ВЫБРАТЬ
					   |	*
					   |ИЗ 
					   |(
					   |ВЫБРАТЬ 			   					   
				   	   |	ВЫБОР
					   |		КОГДА ЕстьNULL(ТаблПродажиВсе.ПремияОбщий, 0) = 0 ТОГДА 0
					   |		ИНАЧЕ ТаблПродажиВсе.ПремияОбщий
					   |	КОНЕЦ КАК ПремияОбщий,
					   //  |	ВЫБОР
					   //|		КОГДА ЕстьNULL(ТаблПродажиВсе.ПремияОбщий, 0) = 0 ТОГДА 0
					   //|		ИНАЧЕ ТаблПродажиВсе.ПремияОбщий
					   //|	КОНЕЦ КАК Премия,				   
				   	   |	0 КАК Премия,
					   |	0 КАК ПремияФикс,
					   |	0 КАК Начисления,
					   |	0 КАК Удержания,					   
					   |	ТаблПродажиВсе.Продавец КАК Продавец	
				       |ИЗ
					   |  	втТекущиеОбщиеПродажиПродавцыПремии КАК ТаблПродажиВсе
		       		   |) КАК Табл2
					   |
					   |ОБЪЕДИНИТЬ ВСЕ	
	       			   |ВЫБРАТЬ 			   					   
					   //  |	ВЫБОР
					   //|		КОГДА ЕстьNULL(ТаблПродажиПоБрендам.ОбщиеПродажи, 0) = 0 ТОГДА 0
					   //|		ИНАЧЕ ТаблПродажиПоБрендам.ПремияОбщий
					   //|	КОНЕЦ КАК ПремияОбщий,
					   |	0,
				       |	ВЫБОР
				       |		КОГДА ЕстьNULL(ТаблПродажиПоБрендам.ОбщиеПродажи, 0) = 0 ТОГДА 0
				       |		ИНАЧЕ ТаблПродажиПоБрендам.Премия
				       |	КОНЕЦ КАК Премия,				   
				       |	0,
				       |	0,
				       |	0,					   
				       |	ТаблПродажиПоБрендам.Продавец 	
				       |ИЗ				
					   |    втБрендыРейтинг КАК БрендыРейтинг
					   |	ЛЕВОЕ СОЕДИНЕНИЕ
					   |	втТБренды КАК ТаблПродажиПоБрендам					   
					   |	ПО ТаблПродажиПоБрендам.Бренд = БрендыРейтинг.Бренд
				   	   |					   					    
					   |ОБЪЕДИНИТЬ ВСЕ					   					   
					   |ВЫБРАТЬ         	
					   |	0,
  				       |	0,					   
					   |	0,						   
					   |	Начисления.Сумма,
	  			   	   |	0,					   
		   			   |	Начисления.Продавец 						   
					   |ИЗ  
					   |	втНачисленияПолно КАК Начисления
					   //|ГДЕ
					   //|	Начисления.ЭтоНачисление
					   |					   
					   |ОБЪЕДИНИТЬ ВСЕ					   				   
					   |ВЫБРАТЬ         	
					   |	0,
  				       |	0,					   
					   |	0,
					   |	0,
					   |	Удержания.Сумма,
		   			   |	Удержания.Продавец 						   
					   |ИЗ  
					   |	втУдержанияПолно КАК Удержания   					   			   					   					   
					   //|ГДЕ
					   //|	НЕ Удержания.ЭтоНачисление					   
					   |) КАК ТаблСводно  
				   	   |
 					   |СГРУППИРОВАТЬ ПО
					   |	Продавец
      				   |УПОРЯДОЧИТЬ ПО
		               |	Продавец.Наименование 					   
					   |ИТОГИ
					   |	СУММА(Премия),
				       |	МАКСИМУМ(ПремияОбщий),	 
			   	       |	СУММА(ПремияФикс),
    				   |	СУММА(Начисления),
					   |	СУММА(Удержания)					   
					   |ПО
					   |	ОБЩИЕ, Продавец
					   |;							   
		 			   |///////////////////////////////////////////////////////////////////////////////				                 
// 26 - Начисления (премии) итог				   
					   |ВЫБРАТЬ
					   |	Начисления.Продавец КАК Продавец,
					   |	Начисления.Сумма КАК СуммаНачисления
					   |ИЗ	
					   |	втНачисленияПолно КАК Начисления
					   //|ГДЕ
					   //|	Начисления.ЭтоНачисление
					   |УПОРЯДОЧИТЬ 
					   |	ПО Продавец.Наименование					   
					   |ИТОГИ 
					   |	СУММА(СуммаНачисления) ПО ОБЩИЕ, Продавец
					   |; 					   
   					   |///////////////////////////////////////////////////////////////////////////////		              
// 27 - Начисления (премии) 					   
					  // |ВЫБРАТЬ
					  // |	ТаблНачисления.Продавец КАК Продавец,					   
					  // |	ТаблНачисления.Начисление КАК Начисление,
					  // |	ТаблНачисления.ДатаНачисления КАК ДатаНачисления,					   
					  // |	ЕстьNULL(ТаблНачисления.СуммаНачисления, 0) КАК СуммаНачисления
					  // |ИЗ
					  // |(ВЫБРАТЬ
					  // |	Начисления.Продавец КАК Продавец,					   
					  // |	Начисления.ПремияШтраф КАК Начисление,
					  // |	МАКСИМУМ(Начисления.Период) КАК ДатаНачисления,					   
					  // |	СУММА(Начисления.Сумма) КАК СуммаНачисления
					  // |ИЗ	
					  // |	втНачисленияПолно КАК Начисления
					  // |СГРУППИРОВАТЬ ПО
					  // |	Продавец, ПремияШтраф
					  // |) КАК ТаблНачисления
					  // //|ГДЕ
					  // //|	Начисления.ЭтоНачисление
					  // |УПОРЯДОЧИТЬ 
					  // |	ПО Начисление, ДатаНачисления, Продавец.Наименование 					   
					  // |ИТОГИ 
					  //// |	СУММА(СуммаНачисления) ПО ОБЩИЕ, Начисление, ДатаНачисления, Продавец	
					  // |	СУММА(СуммаНачисления), МАКСИМУМ(ДатаНачисления) ПО ОБЩИЕ, Начисление, Продавец				   					   
					      |ВЫБРАТЬ
					   //|	ТаблНачисления.Продавец КАК Продавец,					   
					   //|	ТаблНачисления.Начисление КАК Начисление,
					   //|	ТаблНачисления.ДатаНачисления КАК ДатаНачисления,					   
					   //|	ЕстьNULL(ТаблНачисления.СуммаНачисления, 0) КАК СуммаНачисления
					   |   	ПродавцыВсе.Продавец КАК Продавец,
		    		   |	ТаблНачисления.Начисление КАК Начисление,
		    		   |   	ВЫБОР
		    		   |		КОГДА ПродавцыВсе.Продавец <> ТаблНачисления.Продавец
		    		   |			ТОГДА 0
		    		   |		ИНАЧЕ ТаблНачисления.СуммаНачисления
		    		   |	КОНЕЦ КАК СуммаНачисления,
		    		   |	ВЫБОР
		    		   |		КОГДА ПродавцыВсе.Продавец <> ТаблНачисления.Продавец
		    		   |			ТОГДА ДАТАВРЕМЯ(1,1,1)
		    		   |		ИНАЧЕ ТаблНачисления.ДатаНачисления
		    		   |	КОНЕЦ КАК ДатаНачисления
					   |ИЗ
					   |(ВЫБРАТЬ
					   |	Начисления.Продавец КАК Продавец,					   
			   		   |	Начисления.ПремияШтраф КАК Начисление,
					   //|	МАКСИМУМ(Начисления.Период) КАК ДатаНачисления,
					   |	Начисления.Период КАК ДатаНачисления,					   
					   |	СУММА(Начисления.Сумма) КАК СуммаНачисления
					   |ИЗ	
					   |	втНачисленияПолно КАК Начисления
					   |СГРУППИРОВАТЬ ПО
					   |	Продавец, ПремияШтраф, Период
					   |ИМЕЮЩИЕ СУММА(Начисления.Сумма) > 0
					   |) КАК ТаблНачисления
					   |
					   |ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец КАК Продавец
					   |ИЗ втТекущиеПоДнямИПродавцам КАК Т) КАК ПродавцыВсе
					   |ПО (ИСТИНА)
         			   |		
					   |УПОРЯДОЧИТЬ 
					   |	ПО Начисление, ПродавцыВсе.Продавец.Наименование 					   
					   |ИТОГИ 
					  // |	СУММА(СуммаНачисления) ПО ОБЩИЕ, Начисление, ДатаНачисления, Продавец	
					   |	СУММА(СуммаНачисления), МАКСИМУМ(ДатаНачисления) ПО ОБЩИЕ, Начисление, Продавец	
					   |; 					   
   					   |///////////////////////////////////////////////////////////////////////////////		              
// 28 - Удержания (штрафы) итог 					   
					   |ВЫБРАТЬ
					   |	Начисления.Продавец КАК Продавец,
					   |	Начисления.Сумма КАК СуммаУдержания
					   |ИЗ	
					   |	втУдержанияПолно КАК Начисления
					   //|ГДЕ
					   //|	НЕ Начисления.ЭтоНачисление
					   |УПОРЯДОЧИТЬ 
					   |	ПО Продавец.Наименование 					   
					   |ИТОГИ 
					   |	СУММА(СуммаУдержания) ПО ОБЩИЕ, Продавец 					   					   
					   |; 					   
   					   |///////////////////////////////////////////////////////////////////////////////						   
// 29 - Удержания (штрафы)					   
					   |ВЫБРАТЬ
				       |   	ТаблОсн.Продавец КАК Продавец,
		    		   |	ТаблОсн.Удержание КАК Удержание,
		    		   |   	ТаблОсн.СуммаУдержания КАК СуммаУдержания,
		    		   |	ТаблОсн.ДатаУдержания КАК ДатаУдержания
		    		   |ИЗ
					   |(ВЫБРАТЬ
		    		   |   	ПродавцыВсе.Продавец КАК Продавец,
		    		   |	ТаблУдержания.Удержание КАК Удержание,
		    		   |   	ВЫБОР
		    		   |		КОГДА ПродавцыВсе.Продавец <> ТаблУдержания.Продавец
		    		   |			ТОГДА 0
		    		   |		ИНАЧЕ ТаблУдержания.СуммаУдержания
		    		   |	КОНЕЦ КАК СуммаУдержания,
					   |	ТаблУдержания.ДатаУдержания
					   //|	ВЫБОР
					   //|		КОГДА ПродавцыВсе.Продавец <> ТаблУдержания.Продавец
					   //|			ТОГДА ДАТАВРЕМЯ(1,1,1) 
					   //|		ИНАЧЕ ТаблУдержания.ДатаУдержания
					   //|	КОНЕЦ КАК ДатаУдержания
			     	   |ИЗ
					   |(ВЫБРАТЬ
					   |	Удержания.Продавец КАК Продавец,					   
			   		   |	Удержания.ПремияШтраф КАК Удержание,
					   //|	МАКСИМУМ(Удержания.Период) КАК ДатаУдержания,					   
					   |	Удержания.Период КАК ДатаУдержания,	
					   |	СУММА(Удержания.Сумма) КАК СуммаУдержания
					   |ИЗ	
					   |	втУдержанияПолно КАК Удержания
					   |СГРУППИРОВАТЬ ПО
					   |	Продавец, ПремияШтраф, Период
				       |ИМЕЮЩИЕ СУММА(Удержания.Сумма) > 0
					   |) КАК ТаблУдержания				   
					   |
					   | ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Продавец КАК Продавец
					   | 	ИЗ втТекущиеПоДнямИПродавцам КАК Т) КАК ПродавцыВсе
					   | ПО (ИСТИНА) 				
					   //|	НЕ Начисления.ЭтоНачисление
					   //|УПОРЯДОЧИТЬ 
					   //|	ПО ТаблОсн.Удержание, ПродавцыВсе.Продавец.Наименование 					   
				   	   |) КАК ТаблОсн
					   |  
					   |УПОРЯДОЧИТЬ 
					   |	ПО ТаблОсн.Удержание, ТаблОсн.Продавец.Наименование 					   
					   |ИТОГИ 
			//	   |	СУММА(СуммаУдержания) ПО ОБЩИЕ, Удержание, ДатаУдержания, Продавец
				   	   |	СУММА(СуммаУдержания)
					   //, МАКСИМУМ(ДатаУдержания) 
			//	   	   |ПО ОБЩИЕ, Удержание, Продавец
					   |ПО
					   |	ОБЩИЕ, Удержание, ДатаУдержания, Продавец
				   	   |;
					   |///////////////////////////////////////////////////////////////////////////////				   
// 30 - продажи (все) ИТОГ
              	   	   |ВЫБРАТЬ
					   |	Т.Продавец КАК Продавец,					   
			   		   |	Т.ПродажиВсего КАК ПродажиВсего,
					   |	Т.БонусОбщий КАК БонусОбщий,
  					   |	Т.ПремияОбщий КАК ПремияОбщий
					   |ИЗ
					   |(ВЫБРАТЬ
				   	   |	Продажи.ПродавецНаименование КАК ПродавецНаименование,	
					   |	Продажи.Продавец КАК Продавец,					   
			   		   |	Продажи.ПродажиВсего КАК ПродажиВсего,
					   |	Продажи.БонусОбщий КАК БонусОбщий,	
				       |	Продажи.ПремияОбщий КАК ПремияОбщий
					   |ИЗ
					   |	втТекущиеОбщиеПродажиПродавцыПремии КАК Продажи
					   |) КАК Т
	   				   |УПОРЯДОЧИТЬ 
					   |	ПО Т.ПродавецНаименование 					   
				  	   |ИТОГИ 
  					   |	СУММА(ПродажиВсего), МАКСИМУМ(БонусОбщий), СУММА(ПремияОбщий)
					   |	ПО ОБЩИЕ, Продавец
					   |";								  															  	         					   					   											  															  
										  
///////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Женя 30.05.2018
		// Так как премии и штрафы назначаются на магазин с одноименным складом, а в связи с тем, что розничный магазин имеет другого контрагента,
		// соответственно и контрагента нужно заменять на правильный, для отображения премий и штрафов в отчете.
		// (( 
		Запрос.УстановитьПараметр("МагазинДляШтрафовИПремий", МагазинДляШтрафовИПремий);
		// )) 30.05.2018 Женя
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(КонецПериода));
		
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		СтавкаКонтрагента = ПолучитьСтавкуКонтрагента(Контрагент);
		Запрос.УстановитьПараметр("СтавкаКонтрагента", СтавкаКонтрагента);

		массивЗапросов = Запрос.ВыполнитьПакет();      		
		//Для Каждого ТекПарам Из Запрос.Параметры Цикл Сообщить(Строка(ТекПарам.Ключ) + "=" + Строка(ТекПарам.Значение)) КонецЦикла;
		ВыборкаПрошлый = массивЗапросов[2].Выбрать();		// 2  - Категория магазина
		
		ВыборкаСмены0 = массивЗапросов[17].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);              // 17 - СМЕНЫ
		ВыборкаВыручка0 = массивЗапросов[18].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);            // 18 - БРЕНДЫ
		ВыборкаИтогФикс = массивЗапросов[19].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);            // 19 - Итоги фикс.часть
		
		ВыборкаИтогПерем = массивЗапросов[24].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);  			// 24 - Итоги переменная часть (БРЕНДЫ)	
		ВыборкаИтог = массивЗапросов[25].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);                // 24 - Итоги (подвал)		
		ВыборкаНачисленияИтог = массивЗапросов[26].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);      // 26 - Начисления (премии) итог
		ВыборкаНачисления = массивЗапросов[27].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);          // 27 - Начисления (премии)	
		ВыборкаУдержанияИтог = массивЗапросов[28].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);       // 28 - Удержания (штрафы) итог
		ВыборкаУдержания = массивЗапросов[29].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);           // 29 - Удержания (штрафы)			
		
		ВыборкаПродажи = массивЗапросов[30].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 	
		
		//Сообщить(ТекущийПользовательМагазин);		
		Макет = Отчеты._5LB_ЗарплатаПродавцовДляРозницы.ПолучитьМакет("ОсновнойМакет"); //25.01.2017, Юра
		
		ОбластьПусто 						= Макет.ПолучитьОбласть("Пусто");
		ОбластьПустоСРазделителем			= Макет.ПолучитьОбласть("ПустоСРазделителем|ОбщаяЧасть");
		ОбластьПустоСРазделителемПродавец	= Макет.ПолучитьОбласть("ПустоСРазделителем|Продавец");	
		ОбластьПодвалКонец			 	   = Макет.ПолучитьОбласть("ПодвалКонец|ОбщаяЧасть");
		ОбластьПодвалКонецПродавец     		 = Макет.ПолучитьОбласть("ПодвалКонец|Продавец");	
		
		Если ПоВсемМагазинам Тогда
			ОбластьШапка 					= Макет.ПолучитьОбласть("ШапкаОбщий|ОбщаяЧасть");				 
			ОбластьШапкаПродавец 			= Макет.ПолучитьОбласть("ШапкаОбщий|Продавец");
		Иначе
			ОбластьШапка 					= Макет.ПолучитьОбласть("Шапка|ОбщаяЧасть");				 
			ОбластьШапкаПродавец 			= Макет.ПолучитьОбласть("Шапка|Продавец");
		КонецЕсли;
		
		ОбластьСменаИтог 				= Макет.ПолучитьОбласть("СменаИтог|ОбщаяЧасть");			
		ОбластьСменаИтогПродавец 		= Макет.ПолучитьОбласть("СменаИтог|Продавец");	
		ОбластьСменаПодвал				= Макет.ПолучитьОбласть("СменаПодвал|ОбщаяЧасть");			
		ОбластьСменаПодвалПродавец 		= Макет.ПолучитьОбласть("СменаПодвал|Продавец");		
		ОбластьВыручка 					= Макет.ПолучитьОбласть("Выручка|ОбщаяЧасть");			
		ОбластьВыручкаПродавец 			= Макет.ПолучитьОбласть("Выручка|Продавец");	
		ОбластьБренд 					= Макет.ПолучитьОбласть("Бренд|ОбщаяЧасть");			
		ОбластьБрендПродавец 			= Макет.ПолучитьОбласть("Бренд|Продавец");	
		ОбластьБрендИтого 				= Макет.ПолучитьОбласть("БрендИтого|ОбщаяЧасть");			
		ОбластьБрендИтогоПродавец 	    = Макет.ПолучитьОбласть("БрендИтого|Продавец");	
		ОбластьНачисленияИтог 			= Макет.ПолучитьОбласть("НачисленияИтог|ОбщаяЧасть");
		ОбластьНачисленияИтогПродавец	= Макет.ПолучитьОбласть("НачисленияИтог|Продавец");
		ОбластьНачисления	 			= Макет.ПолучитьОбласть("Начисления|ОбщаяЧасть");
		ОбластьНачисленияПродавец 		= Макет.ПолучитьОбласть("Начисления|Продавец");
		ОбластьУдержания	 			= Макет.ПолучитьОбласть("Удержания|ОбщаяЧасть");
		ОбластьУдержанияПродавец		= Макет.ПолучитьОбласть("Удержания|Продавец");
		ОбластьУдержанияИтог 			= Макет.ПолучитьОбласть("УдержанияИтог|ОбщаяЧасть");
		ОбластьУдержанияИтогПродавец 	= Макет.ПолучитьОбласть("УдержанияИтог|Продавец");		
		
		Если ПоВсемМагазинам Тогда
			ОбластьПодвалИтого 			    = Макет.ПолучитьОбласть("ПодвалИтогоОбщий|ОбщаяЧасть");			
			ОбластьПодвалИтогоПродавец 		= Макет.ПолучитьОбласть("ПодвалИтогоОбщий|Продавец");	
		Иначе
			ОбластьПодвалИтого 			    = Макет.ПолучитьОбласть("ПодвалИтого|ОбщаяЧасть");			
			ОбластьПодвалИтогоПродавец 		= Макет.ПолучитьОбласть("ПодвалИтого|Продавец");	
		КонецЕсли;

		ОбластьПодвалФикс               = Макет.ПолучитьОбласть("ПодвалФикс|ОбщаяЧасть");	
		ОбластьПодвалФиксПродавец       = Макет.ПолучитьОбласть("ПодвалФикс|Продавец");		
		ОбластьПодвалПремия100          = Макет.ПолучитьОбласть("ПодвалПремия|ОбщаяЧасть");	
		ОбластьПодвалПремия100Продавец  = Макет.ПолучитьОбласть("ПодвалПремия|Продавец");
		ОбластьПодвалПрогноз            = Макет.ПолучитьОбласть("ПодвалПрогноз|ОбщаяЧасть");	
		ОбластьПодвалПрогнозПродавец    = Макет.ПолучитьОбласть("ПодвалПрогноз|Продавец");    			
		ОбластьПодвалПеремФакт          = Макет.ПолучитьОбласть("ПодвалПеремФакт|ОбщаяЧасть");	
		ОбластьПодвалПеремФактПродавец  = Макет.ПолучитьОбласть("ПодвалПеремФакт|Продавец");	
		
		//25.01.2017, Юра
		//ТабДокТекущий = Новый ТабличныйДокумент;	  
		//ТабДок = ЭлементыФормы.Результат;
		//Если НЕ ПоВсемМагазинам Тогда
		//	ТабДок.Очистить();
		//КонецЕсли; 
		
		бЕстьДанные = Ложь;
		
		тзСмены = Новый ТаблицаЗначений;
		тзСмены.Колонки.Очистить();
		тзСмены.Колонки.Добавить("Продавец", 	Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
		тзСмены.Колонки.Добавить("КоличествоСмен", 	Новый ОписаниеТипов("Число"));

		
		
		Если ПоВсемМагазинам Тогда
			ВыборкаПрошлый.Сбросить();				   
			ВыборкаПрошлый.Следующий();
			
			ВыборкаИтог.Сбросить();
			ВыборкаИтогФикс.Сбросить();
		Иначе
	
		
		//********************************
		// Шапка отчета
	    //********************************
		
		  	Пока ВыборкаПрошлый.Следующий() Цикл   		
		    	ОбластьШапка.Параметры.Заполнить(ВыборкаПрошлый);
		    	ОбластьШапка.Параметры.Магазин = Контрагент;
		    	Прервать;
		    КонецЦикла;

			Пока ВыборкаИтог.Следующий() Цикл        	// Общий итог
				бЕстьДанные = Истина;
				ТабДок.Вывести(ОбластьШапка);			
				ВыборкаВыручка1 = ВыборкаИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец");   	// по продавцам
				Пока ВыборкаВыручка1.Следующий() Цикл 	
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаВыручка1.Продавец) Тогда	       	// проверка - можно ли показывать?
						ОбластьШапкаПродавец.Параметры.Заполнить(ВыборкаВыручка1);
						ТабДок.Присоединить(ОбластьШапкаПродавец);			
					КонецЕсли;		
				КонецЦикла;		
			КонецЦикла;
			ВыборкаИтог.Сбросить();
	
		
	    //********************************
		// Смены (1)	
	    //********************************		
		
		
			ТабДок.Вывести(ОбластьПусто);	
		
				// Итог по сменам
			ВыборкаИтогФикс.Сбросить();
			Пока ВыборкаИтогФикс.Следующий() Цикл        // общий итог			
				
				ОбластьСменаИтог.Параметры.Заполнить(ВыборкаИтогФикс);							
				ТабДок.Вывести(ОбластьСменаИтог);		
				
				ВыборкаСмены2 = ВыборкаИтогФикс.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец");   	// по продавцам
				Пока ВыборкаСмены2.Следующий() Цикл //	
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаСмены2.Продавец) Тогда		
						
						Если ПоВсемМагазинам Тогда
						Иначе
							ОбластьСменаИтогПродавец.Параметры.Заполнить(ВыборкаСмены2);
							
							СтруктураРасшифровкиСмены = Новый Структура;
							СтруктураРасшифровкиСмены.Вставить("ВидРасшифровки",	"Выручка");		       				
		       				СтруктураРасшифровкиСмены.Вставить("ДатаСмены",			Дата(1,1,1));
		        			СтруктураРасшифровкиСмены.Вставить("Продавец",			ВыборкаСмены2.Продавец);														
							ОбластьСменаИтогПродавец.Параметры.РасшифровкаСуммаПоСменам = СтруктураРасшифровкиСмены;

							ТабДок.Присоединить(ОбластьСменаИтогПродавец);			
							
						КонецЕсли;
						
					КонецЕсли;	
				КонецЦикла;	 
			КонецЦикла;

			// Детально по сменам
			ВыборкаСмены0.Сбросить();				
			Пока ВыборкаСмены0.Следующий() Цикл       
					
				ВыборкаСмены1 = ВыборкаСмены0.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   	// по дням
				
				Если ВыборкаСмены1.Количество() >= 1 Тогда					// если есть что показывать	
					
					Если НЕ ПоВсемМагазинам Тогда     		// +
						ТабДок.НачатьГруппуСтрок();	 
					КонецЕсли;	
						
					Пока ВыборкаСмены1.Следующий() Цикл 
						
						Если НЕ ПоВсемМагазинам Тогда						
							ОбластьСменаПодвал.Параметры.Заполнить(ВыборкаСмены1);											
							ТабДок.Вывести(ОбластьСменаПодвал);			                                						
						КонецЕсли;	
						
						//ТабДок.Присоединить(ОбластьВыручкаПродавец);				
						ВыборкаСмены2 = ВыборкаСмены1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   	// по продавцам
						Пока ВыборкаСмены2.Следующий() Цикл //				
							Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаСмены2.Продавец) Тогда
								Если НЕ ПоВсемМагазинам Тогда
									
									ОбластьСменаПодвалПродавец.Параметры.Заполнить(ВыборкаСмены2);
									СтруктураРасшифровкиСмены = Новый Структура;
									СтруктураРасшифровкиСмены.Вставить("ВидРасшифровки",	"Выручка");	       						
	       							СтруктураРасшифровкиСмены.Вставить("ДатаСмены",	ВыборкаСмены2.ДатаСмены);
	        						СтруктураРасшифровкиСмены.Вставить("Продавец",	ВыборкаСмены2.Продавец);														
									ОбластьСменаПодвалПродавец.Параметры.РасшифровкаСуммаПоСменам = СтруктураРасшифровкиСмены;

									ТабДок.Присоединить(ОбластьСменаПодвалПродавец);
									
								КонецЕсли;		
							КонецЕсли;		
						КонецЦикла;	
						
					КонецЦикла;	    
					
					Если НЕ ПоВсемМагазинам Тогда           // -
						ТабДок.ЗакончитьГруппуСтрок();
					КонецЕсли;
					
				КонецЕсли;				// если есть что показывать		
				
			КонецЦикла;
			ВыборкаСмены0.Сбросить(); 					
		

	
	
		    //********************************
			// Начисления (2)
		    //********************************
			
			// разделитель
			ТабДок.Вывести(ОбластьПустоСРазделителем);	
			Пока ВыборкаПродажи.Следующий() Цикл        
				ВыборкаПродажи1 = ВыборкаПродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец"); 		
				Пока ВыборкаПродажи1.Следующий() Цикл  
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаПродажи1.Продавец) Тогда	
						ТабДок.Присоединить(ОбластьПустоСРазделителемПродавец);	
					КонецЕсли;	
				КонецЦикла;			
			КонецЦикла;		  

			// заголовок раздела выводится в любом случае
			ВыборкаНачисленияИтог.Сбросить();
			Пока ВыборкаНачисленияИтог.Следующий() Цикл  
				Если НЕ ПоВсемМагазинам Тогда
					//ОбластьНачисленияИтог.Параметры.РасшифровкаНачисления = Справочники.ВидыПремийШтрафов.Начисления;
					СтруктураРасшифровкиПремииШтрафы = Новый Структура;
					СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
					СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  
					СтруктураРасшифровкиПремииШтрафы.Вставить("Продавец",			Справочники.Пользователи.ПустаяСсылка()); 
					СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	Справочники.ВидыПремийШтрафов.Начисления);				
					ОбластьНачисленияИтог.Параметры.РасшифровкаНачисления  = СтруктураРасшифровкиПремииШтрафы;
					ТабДок.Вывести(ОбластьНачисленияИтог);					
				КонецЕсли;	
				ВыборкаНачисления1 = ВыборкаНачисленияИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец");   	// по продавцам
				Пока ВыборкаНачисления1.Следующий() Цикл //						
					Если (ВыборкаНачисления1.Продавец <> NULL) Тогда
						Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаНачисления1.Продавец) Тогда			
							Если НЕ ПоВсемМагазинам Тогда																						
								ОбластьНачисленияИтогПродавец.Параметры.Заполнить(ВыборкаНачисления1);	
								
								СтруктураРасшифровкиПремииШтрафы = Новый Структура;
								СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
								СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  
								СтруктураРасшифровкиПремииШтрафы.Вставить("Продавец",			ВыборкаНачисления1.Продавец); 
								СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	Справочники.ВидыПремийШтрафов.Начисления);																	
								
								ОбластьНачисленияИтогПродавец.Параметры.РасшифровкаНачисления = СтруктураРасшифровкиПремииШтрафы;							
								ТабДок.Присоединить(ОбластьНачисленияИтогПродавец);		
							КонецЕсли;	
						КонецЕсли;	
					КонецЕсли;												
				КонецЦикла;	
			КонецЦикла;		
			
			// если есть начисления
			Если ВыборкаНачисления.Количество() > 0 Тогда  
				
				Пока ВыборкаНачисления.Следующий() Цикл       		
					ВыборкаНачисления1 = ВыборкаНачисления.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Начисление");   	// Начисления
					Пока ВыборкаНачисления1.Следующий() Цикл 
						Если (ВыборкаНачисления1.Начисление <> NULL) Тогда   // если не NULL	
							Если НЕ ПоВсемМагазинам Тогда
								ОбластьНачисления.Параметры.Заполнить(ВыборкаНачисления1);
								
									СтруктураРасшифровкиПремииШтрафы = Новый Структура;
									СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
									СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  									
									СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	Справочники.ВидыПремийШтрафов.Начисления);
						         	ОбластьНачисления.Параметры.РасшифровкаНачисления = СтруктураРасшифровкиПремииШтрафы;					
								
								ТабДок.Вывести(ОбластьНачисления);	
							КонецЕсли;	
							ВыборкаНачисления3 = ВыборкаНачисления1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец"); 
							Пока ВыборкаНачисления3.Следующий() Цикл 					
								Если (ВыборкаНачисления3.Продавец <> NULL) Тогда
										Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаНачисления3.Продавец) Тогда			
											Если НЕ ПоВсемМагазинам Тогда
												ОбластьНачисленияПродавец.Параметры.Заполнить(ВыборкаНачисления3);																	
												Если ВыборкаНачисления3.СуммаНачисления = 0 Тогда
													ОбластьНачисленияПродавец.Параметры.ДатаНачисления = "";
												КонецЕсли;	
												
												
												Если ВыборкаНачисления1.Начисление = Справочники.ВидыПремийШтрафов.БонусЗапродажуПросрочки23мес Тогда
													СтруктураРасшифровкиПремииШтрафы = Новый Структура;
													СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
													СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  
													СтруктураРасшифровкиПремииШтрафы.Вставить("Продавец",			ВыборкаНачисления3.Продавец);
													СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	Справочники.ВидыПремийШтрафов.БонусЗапродажуПросрочки23мес);																				
												ИначеЕсли ВыборкаНачисления1.Начисление = Справочники.ВидыПремийШтрафов.НайтиПоНаименованию("Продажи продуктов HОТ SALE", Истина) Тогда  													
													СтруктураРасшифровкиПремииШтрафы = Новый Структура;
													СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
													СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  
													СтруктураРасшифровкиПремииШтрафы.Вставить("Продавец",			ВыборкаНачисления3.Продавец);
													СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	ВыборкаНачисления1.Начисление);
												КонецЕсли;
												
												ОбластьНачисленияПродавец.Параметры.РасшифровкаНачисления = СтруктураРасшифровкиПремииШтрафы;													
												ТабДок.Присоединить(ОбластьНачисленияПродавец);			
											КонецЕсли;	
										КонецЕсли;												
								КонецЕсли;			
							КонецЦикла;							
						КонецЕсли;	// если не NULL	
					КонецЦикла;		
				КонецЦикла;				
			КонецЕсли;	


		
		
			//********************************
			// Вычеты (3)
			//********************************	
		
			// разделитель
			ТабДок.Вывести(ОбластьПустоСРазделителем);	
			Пока ВыборкаПродажи.Следующий() Цикл        
				ВыборкаПродажи1 = ВыборкаПродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец"); 		
				Пока ВыборкаПродажи1.Следующий() Цикл  
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаПродажи1.Продавец) Тогда	
						ТабДок.Присоединить(ОбластьПустоСРазделителемПродавец);	
					КонецЕсли;	
				КонецЦикла;			
			КонецЦикла;		
	
			// заголовок раздела выводится в любом случае	
			ВыборкаУдержанияИтог.Сбросить();
			Пока ВыборкаУдержанияИтог.Следующий() Цикл  
				Если НЕ ПоВсемМагазинам Тогда
					СтруктураРасшифровкиПремииШтрафы = Новый Структура;
					СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
					СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  
					СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	Справочники.ВидыПремийШтрафов.Удержания);
					ТабДок.Вывести(ОбластьУдержанияИтог);					
				КонецЕсли;	
				ВыборкаУдержания1 = ВыборкаУдержанияИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец");   	// по продавцам
				Пока ВыборкаУдержания1.Следующий() Цикл //	
					Если (ВыборкаУдержания1.Продавец <> NULL) Тогда 
						Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаУдержания1.Продавец) Тогда			
							Если НЕ ПоВсемМагазинам Тогда															
								ОбластьУдержанияИтогПродавец.Параметры.Заполнить(ВыборкаУдержания1);
								СтруктураРасшифровкиПремииШтрафы = Новый Структура;
								СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
								СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  
								СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	Справочники.ВидыПремийШтрафов.Удержания);
								ОбластьУдержанияИтогПродавец.Параметры.РасшифровкаУдержания = СтруктураРасшифровкиПремииШтрафы;							
								ТабДок.Присоединить(ОбластьУдержанияИтогПродавец);		
							КонецЕсли;	
						КонецЕсли;	
					КонецЕсли;												
				КонецЦикла;	
			КонецЦикла;		
			
			// если есть начисления
			Если ВыборкаУдержания.Количество() > 0 Тогда  
				
				Пока ВыборкаУдержания.Следующий() Цикл       		
					ВыборкаУдержания1 = ВыборкаУдержания.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Удержание");   	// Удержания
					Пока ВыборкаУдержания1.Следующий() Цикл 	// Удержание
						ВыборкаУдержанияДата = ВыборкаУдержания1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаУдержания");   	// Удержания
						Пока ВыборкаУдержанияДата.Следующий() Цикл   // ДатаУдержания
							
							Если (ВыборкаУдержанияДата.Удержание <> NULL) Тогда   // если не NULL
								Если НЕ ПоВсемМагазинам Тогда
									ОбластьУдержания.Параметры.Заполнить(ВыборкаУдержанияДата);	
									СтруктураРасшифровкиПремииШтрафы = Новый Структура;
									СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
									СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  
									СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	ВыборкаУдержанияДата.Удержание);
									ОбластьУдержания.Параметры.РасшифровкаУдержания = СтруктураРасшифровкиПремииШтрафы;																	
									ТабДок.Вывести(ОбластьУдержания);	
								КонецЕсли;	
								ВыборкаУдержания3 = ВыборкаУдержанияДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец");  
								Пока ВыборкаУдержания3.Следующий() Цикл 																	
									Если (ВыборкаУдержания3.Продавец <> NULL) Тогда 
										Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаУдержания3.Продавец) Тогда			
											Если НЕ ПоВсемМагазинам Тогда
												ОбластьУдержанияПродавец.Параметры.Заполнить(ВыборкаУдержания3);																	
												Если ВыборкаУдержания3.СуммаУдержания = 0 Тогда
													ОбластьУдержанияПродавец.Параметры.ДатаУдержания = "";
												КонецЕсли;	
												СтруктураРасшифровкиПремииШтрафы = Новый Структура;
												СтруктураРасшифровкиПремииШтрафы.Вставить("ВидРасшифровки",		"ПремииШтрафы");
												СтруктураРасшифровкиПремииШтрафы.Вставить("ПериодДатаКонец",	КонецДня(КонецПериода));  
												СтруктураРасшифровкиПремииШтрафы.Вставить("ПремияШтрафСсылка",	ВыборкаУдержанияДата.Удержание);
												ОбластьУдержанияПродавец.Параметры.РасшифровкаУдержания = СтруктураРасшифровкиПремииШтрафы;											
												ТабДок.Присоединить(ОбластьУдержанияПродавец);			
											КонецЕсли;	
										КонецЕсли;												
									КонецЕсли;		
								КонецЦикла;	
							КонецЕсли;	  // если не NULL	        
						КонецЦикла;		 // ДатаУдержания  	
					КонецЦикла;		// Удержание
				КонецЦикла;						
			КонецЕсли;			// если есть начисления


				
			//********************************
			// Выручка (4)
			//********************************
			
			// разделитель
			ВыборкаПродажи.Сбросить();
			ТабДок.Вывести(ОбластьПустоСРазделителем);	
			Пока ВыборкаПродажи.Следующий() Цикл        
				ВыборкаПродажи1 = ВыборкаПродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец"); 		
				Пока ВыборкаПродажи1.Следующий() Цикл  
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаПродажи1.Продавец) Тогда	
						ТабДок.Присоединить(ОбластьПустоСРазделителемПродавец);	
					КонецЕсли;	
				КонецЦикла;			
			КонецЦикла;		
			
			// выручка общая  
			ВыборкаПродажи.Сбросить();
			Пока ВыборкаПродажи.Следующий() Цикл        // общий итог			
				ОбластьВыручка.Параметры.Заполнить(ВыборкаПродажи);				
				ТабДок.Вывести(ОбластьВыручка);			
				//Сообщить("ОБЩИЙ " + Строка(ВыборкаПродажи.ПродажиВсего));
				//Сообщить(Строка(Выборка1.Коэффициент) + " " + Строка(Выборка1.ДневнаяСтавка));//			
				ВыборкаВыручка1 = ВыборкаПродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец");   	// Продавец
				Пока ВыборкаВыручка1.Следующий() Цикл //				
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаВыручка1.Продавец) Тогда
						
						ОбластьВыручкаПродавец.Параметры.Заполнить(ВыборкаВыручка1);
						//Сообщить(Строка(ВыборкаВыручка1.Продавец) + " = " + Строка(ВыборкаВыручка1.БонусОбщий));						
						СтруктураРасшифровкиСмены = Новый Структура;
						СтруктураРасшифровкиСмены.Вставить("ВидРасшифровки",	"Выручка");
	       				СтруктураРасшифровкиСмены.Вставить("ДатаСмены",	Дата(1,1,1));
	        			СтруктураРасшифровкиСмены.Вставить("Продавец",	ВыборкаВыручка1.Продавец);														
						ОбластьВыручкаПродавец.Параметры.РасшифровкаСуммаПоСменам = СтруктураРасшифровкиСмены;
						
						ТабДок.Присоединить(ОбластьВыручкаПродавец);				
						
					КонецЕсли;		
				КонецЦикла;		
			КонецЦикла;
			ВыборкаПродажи.Сбросить(); 	
	


		
			//********************************
			// БРЕНДЫ (5)
			//********************************		
			
		// разделитель
			ВыборкаПродажи.Сбросить();
			ТабДок.Вывести(ОбластьПустоСРазделителем);	
			Пока ВыборкаПродажи.Следующий() Цикл        
				ВыборкаПродажи1 = ВыборкаПродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец"); 		
				Пока ВыборкаПродажи1.Следующий() Цикл  
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаПродажи1.Продавец) Тогда	
						ТабДок.Присоединить(ОбластьПустоСРазделителемПродавец);	
					КонецЕсли;	
				КонецЦикла;			
			КонецЦикла;		
	
			ВыборкаПродажи.Сбросить();
		
		КонецЕсли;     // не выводить если по отдельному магазину
	
			
		ПроцентВыполненияПлана = 0;
		ПроцентВыполненияПланаСумма = 0;
		ПроцентВыполненияПланаКол = 0;
				
		Пока ВыборкаВыручка0.Следующий() Цикл        // общий 				
			ВыборкаВыручка1 = ВыборкаВыручка0.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   	// бренды		
			Пока ВыборкаВыручка1.Следующий() Цикл        // общий итог													

				Попытка
					Процент_План = Число(ВыборкаВыручка1.ПроцентПлан);
				Исключение
					Процент_План = 0;
				КонецПопытки;
				
				Если Процент_План = 0 Тогда
					ПроцентВыполненияПлана = 0;
					КолУчитывать = 0;
				Иначе
					Если ВыборкаВыручка1.ПроцентОтОбщихПродаж > Процент_План Тогда
						ПроцентВыполненияПлана = 100;
					Иначе	
						ПроцентВыполненияПлана = (ВыборкаВыручка1.ПроцентОтОбщихПродаж / Процент_План) * 100;
					КонецЕсли;
					КолУчитывать = 1;
				КонецЕсли;						
				
				ПроцентВыполненияПланаСумма = ПроцентВыполненияПланаСумма + ПроцентВыполненияПлана;
				ПроцентВыполненияПланаКол = ПроцентВыполненияПланаКол + КолУчитывать;

				Если НЕ ПоВсемМагазинам Тогда
					ОбластьБренд.Параметры.Заполнить(ВыборкаВыручка1);
					ОбластьБренд.Параметры.ПроцентВыполненияПлана = Формат(ПроцентВыполненияПлана, "ЧЦ=5; ЧДЦ=2; ЧГ=0");				 
					ТабДок.Вывести(ОбластьБренд);
				КонецЕсли;	
		
				ВыборкаВыручка2 = ВыборкаВыручка1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   	// по продавцам
				Пока ВыборкаВыручка2.Следующий() Цикл				
							Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаВыручка2.Продавец) Тогда
								Если НЕ ПоВсемМагазинам Тогда
									
									ОбластьБрендПродавец.Параметры.Заполнить(ВыборкаВыручка2);
									
									СтруктураРасшифровкиБренды = Новый Структура;
									СтруктураРасшифровкиБренды.Вставить("ВидРасшифровки",	"Бренд");
	       							СтруктураРасшифровкиБренды.Вставить("Бренд",		ВыборкаВыручка2.Бренд);
	        						СтруктураРасшифровкиБренды.Вставить("Продавец",		ВыборкаВыручка2.Продавец);	
									ОбластьБрендПродавец.Параметры.РасшифровкаСуммаПоБрендам = СтруктураРасшифровкиБренды;

									ТабДок.Присоединить(ОбластьБрендПродавец);	
									
								КонецЕсли;
							КонецЕсли;	
				КонецЦикла;								
			КонецЦикла;			
		КонецЦикла;	
				
		ВыборкаВыручка0.Сбросить();
			
		//********************************
		// БРЕНДЫ - итог - Бонусы (5)
		//********************************			
		
		Если НЕ ПоВсемМагазинам Тогда
			ВыборкаИтогПерем.Сбросить();
			
			Если ВыборкаИтогПерем.Количество() = 0 Тогда
				ТабДок.Вывести(ОбластьБрендИтого);
				ВыборкаПродажи.Сбросить();
				Пока ВыборкаПродажи.Следующий() Цикл        
					ВыборкаПродажи1 = ВыборкаПродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец"); 		
					Пока ВыборкаПродажи1.Следующий() Цикл  
						Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаПродажи1.Продавец) Тогда	
							ТабДок.Присоединить(ОбластьБрендИтогоПродавец);
						КонецЕсли;	
					КонецЦикла;			
				КонецЦикла;	
				ВыборкаПродажи.Сбросить();
			КонецЕсли;
			
			Пока ВыборкаИтогПерем.Следующий() Цикл                      // общий  
				ОбластьБрендИтого.Параметры.Заполнить(ВыборкаИтогПерем);
				ТабДок.Вывести(ОбластьБрендИтого);
				Выборка2 = ВыборкаИтогПерем.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   	// продавец
				Пока Выборка2.Следующий() Цикл 	
						Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,Выборка2.Продавец) Тогда								
							
							Если НЕ ПоВсемМагазинам Тогда  
								
								ОбластьБрендИтогоПродавец.Параметры.Заполнить(Выборка2);
			//					ОбластьБрендИтогоПродавец.Параметры.ПремияПерем100 = Выборка2.ПремияОбщий + Выборка2.Премия;	
			
								СтруктураРасшифровкиБренды = Новый Структура;
								СтруктураРасшифровкиБренды.Вставить("ВидРасшифровки",	"Бренд");
		       					СтруктураРасшифровкиБренды.Вставить("Бренд",		Справочники.Номенклатура.ПустаяСсылка());
		        				СтруктураРасшифровкиБренды.Вставить("Продавец",		Выборка2.Продавец);	
								ОбластьБрендИтогоПродавец.Параметры.РасшифровкаСуммаПоБрендам = СтруктураРасшифровкиБренды;

								ТабДок.Присоединить(ОбластьБрендИтогоПродавец);
								
							КонецЕсли;
							
						КонецЕсли;	
				КонецЦикла;		
			КонецЦикла;		
		КонецЕсли;     // не выводить если по отдельному магазину

	
		//********************************
		// РАСЧЕТ % Выполнения плана и премия за выполенние
		//********************************	
		ПроцентПремияЗаВыполнениеПланаПлан = 0.1;     // 10% от бонусов - за выполнение плана 100%
		        
		
		
		ПроцентВыполненияПлана = ?(ПроцентВыполненияПланаКол = 0, 0, Окр(ПроцентВыполненияПланаСумма / ПроцентВыполненияПланаКол, 2));	
		ПроцентВыполненияПланаФакт = ПроцентВыполненияПлана;
		//// 26/07/16 15:2x  разговор с Лосевым и Артемом (Устно) - вернуть все в зад - для 3-й категории - всегда 100%!
		// < 01/08/16 Вялов - Мегаплан (Артем) №  -  для всех (1-я и 2-я категория) 100%!	
		Если НачалоМесяца(НачалоПериода) < Дата(2016, 8, 1) Тогда
		// 01/08/16 Вялов - Мегаплан (Артем) №  -  для всех (1-я и 2-я категория) 100%! >
			Если ВыборкаПрошлый.Категория = 3 Тогда		// только для маг. 3-й категории		
				ПроцентВыполненияПлана = 100;
			КонецЕсли;
		// < 01/08/16 Вялов - Мегаплан (Артем) №  -  для всех (1-я и 2-я категория) 100%!	
		Иначе
			ПроцентВыполненияПлана = 100;
		КонецЕсли;
		// 01/08/16 Вялов - Мегаплан (Артем) №  -  для всех (1-я и 2-я категория) 100%! >
	
			
		ПроцентПремияЗаВыполнениеПлана = 0;		
		Если ПроцентВыполненияПланаФакт >= 100 Тогда
		//	Если ВыборкаПрошлый.Категория < 3 Тогда		// только для маг. 1 и 2-й категории
				ПроцентПремияЗаВыполнениеПлана = ПроцентПремияЗаВыполнениеПланаПлан; 	// становится явью только при выполнении!	
		//		НачисленияСодержание = "За выполнение плана (1 и 2 кат.) 10%";
		//	КонецЕсли;
		КонецЕсли;	

	
		
		//********************************
		// ПОДВАЛ
		//********************************	
		
		
		// Итого факт 
		Если НЕ ПоВсемМагазинам Тогда  
			ТабДок.Вывести(ОбластьПусто);		
		КонецЕсли;
			
		ВыборкаИтог.Сбросить();
		Пока ВыборкаИтог.Следующий() Цикл        // общий  
				
			//ОбластьПодвалИтого.Параметры.Заполнить(ВыборкаИтогПерем);				
			стрПроцентВыполненияПлана = Формат(ПроцентВыполненияПлана, "ЧЦ=12; ЧДЦ=2; ЧГ=0");
			Если ПроцентВыполненияПланаФакт <> ПроцентВыполненияПлана Тогда
				стрПроцентВыполненияПлана = стрПроцентВыполненияПлана +
					" (" + Формат(ПроцентВыполненияПланаФакт, "ЧЦ=12; ЧДЦ=2; ЧН=0,00; ЧГ=0") + ")";
			КонецЕсли;
			стрПроцентВыполненияПлана = стрПроцентВыполненияПлана; // + " %";
			ОбластьПодвалИтого.Параметры.ПроцентВыполненияПлана = стрПроцентВыполненияПлана;			
			
		 	Если ПоВсемМагазинам Тогда  
				ОбластьПодвалИтого.Параметры.Магазин =  Контрагент;
				ОбластьПодвалИтого.Параметры.Категория = ВыборкаПрошлый.Категория;
				//ОбластьПодвалИтого.Параметры.ПроцентВыполненияПлана = ПроцентВыполненияПлана;						
			Иначе
				//ОбластьПодвалИтого.Параметры.ПроцентВыполненияПлана = ПроцентВыполненияПлана;
				ТабДок.Вывести(ОбластьПодвалИтого);
			КонецЕсли;                              			
					
			Выборка2 = ВыборкаИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   	// по продавцам
			Пока Выборка2.Следующий() Цикл 	
				Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,Выборка2.Продавец) Тогда
					
					//Если ПоВсемМагазинам Тогда  
					//	ОбластьПодвалИтогоПродавец.Параметры.Продавец = Выборка2.Продавец;	
					//КонецЕсли; 
					ОбластьПодвалИтогоПродавец.Параметры.СуммаФакт =
						Выборка2.ПремияОбщий 
						+ Выборка2.Премия * (ПроцентВыполненияПлана / 100 + ПроцентПремияЗаВыполнениеПлана)
						+ Выборка2.ПремияФикс
						+ Выборка2.Начисления - Выборка2.Удержания;									
					
						
					ОбластьПодвалИтогоПродавец.Параметры.РасшифровкаСуммаФакт = "Итого факт = (1)+(2)+(4)+(5)+(6)-(3) =
						|  (1) Бонусы по сменам (" + СуммаСтрокой(Выборка2.ПремияФикс) + ")
						|+ (2) Начисления (" + СуммаСтрокой(Выборка2.Начисления) + ")
	               		|+ (4) Премия за выручку (" + СуммаСтрокой(Выборка2.ПремияОбщий) + ")
						|+ (5) Премия за выручку по бонусам (" + СуммаСтрокой(Выборка2.Премия) + " x " 
						+ СуммаСтрокой(ПроцентВыполненияПлана) +"% = "
						+ СуммаСтрокой(Выборка2.Премия * ПроцентВыполненияПлана/100) + ")
						|+ (6) Премия за выручку по бонусам за выполнение плана (" + СуммаСтрокой(Выборка2.Премия) + " x " 
					    + СуммаСтрокой(ПроцентПремияЗаВыполнениеПлана*100) +"% = " 
						+ СуммаСтрокой(Выборка2.Премия * ПроцентПремияЗаВыполнениеПлана) + ")
						|- (3) Удержания (" + СуммаСтрокой(-Выборка2.Удержания) + ")
						| = " + СуммаСтрокой(ОбластьПодвалИтогоПродавец.Параметры.СуммаФакт);
					
					Если ПоВсемМагазинам Тогда 
							
						ТабДок.Вывести(ОбластьПодвалИтого);
						
						ПарамОтбора = Новый Структура("Продавец");
						ПарамОтбора.Продавец = Выборка2.Продавец;
//						ПарамОтбора.КоличествоСмен = Продавец;	  						
						НайденыСтроки = тзСмены.НайтиСтроки(ПарамОтбора);
						КолСменПродавца = 0;
						Если НайденыСтроки.Количество() > 0 Тогда								
							КолСменПродавца = НайденыСтроки[0].КоличествоСмен;
						КонецЕсли;	
						
						ОбластьПодвалИтогоПродавец.Параметры.Продавец = Выборка2.Продавец;
						ОбластьПодвалИтогоПродавец.Параметры.КолСменПродавца = КолСменПродавца;
						ТабДок.Присоединить(ОбластьПодвалИтогоПродавец);
						
					Иначе			
						ТабДок.Присоединить(ОбластьПодвалИтогоПродавец);
					КонецЕсли;
					
					
				КонецЕсли;		
			КонецЦикла;		
					
		КонецЦикла;

		
		Если НЕ ПоВсемМагазинам Тогда   // не выводить если по отдельному магазину

				
			// разделитель
			ВыборкаПродажи.Сбросить();
			ТабДок.Вывести(ОбластьПустоСРазделителем);	
			Пока ВыборкаПродажи.Следующий() Цикл        
				ВыборкаПродажи1 = ВыборкаПродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец"); 		
				Пока ВыборкаПродажи1.Следующий() Цикл  
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаПродажи1.Продавец) Тогда	
						ТабДок.Присоединить(ОбластьПустоСРазделителемПродавец);	
					КонецЕсли;	
				КонецЦикла;			
			КонецЦикла;	
			ВыборкаПродажи.Сбросить();
			
			
			// Премия за план при 100% выполнении 	
			ВыборкаИтогПерем.Сбросить();
			Пока ВыборкаИтогПерем.Следующий() Цикл       			
				ТабДок.Вывести(ОбластьПодвалПремия100);                 			
				Выборка2 = ВыборкаИтогПерем.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   	// по продавцам
				Пока Выборка2.Следующий() Цикл 	
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,Выборка2.Продавец) Тогда
						ОбластьПодвалПремия100Продавец.Параметры.ПремияЗаВыполнениеПлана = Выборка2.Премия * ПроцентПремияЗаВыполнениеПлана;
						ТабДок.Присоединить(ОбластьПодвалПремия100Продавец);
					КонецЕсли;		
				КонецЦикла;						
			КонецЦикла;
			ВыборкаИтог.Сбросить();	
			Пока ВыборкаИтог.Следующий() Цикл       			
				
				ТабДок.Вывести(ОбластьПодвалПрогноз);                 			
				
				Выборка2 = ВыборкаИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);   	// по продавцам
				ПремияПерем = 0;
				Пока Выборка2.Следующий() Цикл 	
					//ПремияПерем = Выборка2.ПремияОбщий;
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,Выборка2.Продавец) Тогда
						ОбластьПодвалПрогнозПродавец.Параметры.ПремияПрогноз = 
							Выборка2.ПремияОбщий + Выборка2.Премия * (1 + ПроцентПремияЗаВыполнениеПланаПлан) + Выборка2.ПремияФикс
							+ Выборка2.Начисления - Выборка2.Удержания;
						ТабДок.Присоединить(ОбластьПодвалПрогнозПродавец);
					//Прервать;
					КонецЕсли;		
				КонецЦикла;			
			КонецЦикла;
			
		КонецЕсли;           // не выводить если по отдельному магазину

		
			
		//********************************
		// КОНЕЦ
		//********************************		
		Если НЕ ПоВсемМагазинам Тогда  	
			ТабДок.Вывести(ОбластьПодвалКонец);	
			Пока ВыборкаПродажи.Следующий() Цикл      				
				ВыборкаПродажи1 = ВыборкаПродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Продавец"); 		
				Пока ВыборкаПродажи1.Следующий() Цикл      
					Если ПроверкаПользователя(ТекущийПользовательРозницы,ТолькоТекущийПользователь,ВыборкаПродажи1.Продавец) Тогда	
						ТабДок.Присоединить(ОбластьПодвалКонецПродавец);	
					КонецЕсли;
				КонецЦикла;			
			КонецЦикла;			
		КонецЕсли;

		Если ПоВсемМагазинам Тогда
			ТабДок.ФиксацияСверху = 1;
		Иначе
			ТабДок.ФиксацияСверху = 4;
		КонецЕсли;
		//ТабДок.ТолькоПросмотр = Истина; //25.01.2017, Юра
	   	//ТабДок.Показать("Ведомость по бонусам");//25.01.2017, Юра
	Иначе
		//21.02.2017, Юра
		Что = "Отчет не сформирован, так как не определен магазин или период. Контрагент (в 1С:Розница это Магазин): "+Kontragent+", период: "+НачалоПериода+" - "+КонецПериода;
		ЗаписьЖурналаРегистрации("Формирование отчета _5LB_ЗарплатаПродавцовДляРозницы",УровеньЖурналаРегистрации.Ошибка,,,Что,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
	КонецЕсли;
	
	Возврат ТабДок;

КонецФункции

Функция ПолучитьСтавкуКонтрагента(Контрагент)
	
	Рез = 0;	

	СвойствоНаименование = "БонусыСтавкаМагазина";	
	НайденоСвойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию(СвойствоНаименование);			 
	Если НЕ НайденоСвойство.Пустая() Тогда	
	
		Запрос = Новый Запрос;	 	   	   
		Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Свойство,
	               |	ЗначенияСвойствОбъектов.Значение КАК ЗначениеСвойства
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |//	НЕ ЗначенияСвойствОбъектов.Свойство.ПометкаУдаления 
				   |	ЗначенияСвойствОбъектов.Объект = &Владелец
			   	   |	И ЗначенияСвойствОбъектов.Свойство = &Свойство
				   |";	
				   
   		Запрос.УстановитьПараметр("Владелец", Контрагент);	
		Запрос.УстановитьПараметр("Свойство", НайденоСвойство);	
			
		РезультатЗапроса = Запрос.Выполнить();                                    		
		ВыборкаЗначенияСвойств = РезультатЗапроса.Выбрать();  
		Пока ВыборкаЗначенияСвойств.Следующий() Цикл
			Рез = ВыборкаЗначенияСвойств.ЗначениеСвойства;
			Прервать;
		КонецЦикла;
		
	КонецЕсли;

	Возврат Рез;			
				
КонецФункции				

Функция СуммаСтрокой(ЗнСумммы)
	
	Возврат Формат(ЗнСумммы, "ЧЦ=14; ЧДЦ=2; ЧН=0,00; ЧГ=3,0");
	
КонецФункции

Функция ПроверкаПользователя(ТекущийПользовательПродавец,ТолькоТекущийПользователь,Продавец)
		
	РезПроверки = Ложь;	
	
	Если ТолькоТекущийПользователь Тогда
		Если ТекущийПользовательПродавец = Продавец Тогда
			РезПроверки = Истина;
		Иначе
		КонецЕсли;
	Иначе
		РезПроверки = Истина;
	КонецЕсли;	
	
	//Сообщить(Строка(Продавец) + " " + Строка(ПараметрыСеанса.ТекущийПользователь) + " " + Строка(РезПроверки));
	Возврат РезПроверки;
	
КонецФункции



