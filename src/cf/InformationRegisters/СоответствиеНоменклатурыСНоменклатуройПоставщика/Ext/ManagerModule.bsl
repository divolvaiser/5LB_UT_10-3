
// Функция получения номенклатуры по наименованию номенклатуры поставщика
//
// Параметры:
//           - "Контрагент" - Ссылка на контрагента (Поставщик) (Обязательный) 
//           - "НаименованиеНоменклатурыПоставщика" (Обязательный) - Наименование номенклатуры поставщика
//
// Возвращаемое значение:
//           - СсылкаНаНоменклатуру
//
Функция ПолучитьНоменклатуруПоДаннымНоменклатурыПоставщика(Контрагент, НаименованиеНоменклатурыПоставщика) Экспорт
	
	запросНоменклатуры = Новый Запрос("ВЫБРАТЬ
	                                  |	СоответствиеНоменклатурыСНоменклатуройПоставщика.Номенклатура
	                                  |ИЗ
	                                  |	РегистрСведений.СоответствиеНоменклатурыСНоменклатуройПоставщика КАК СоответствиеНоменклатурыСНоменклатуройПоставщика
	                                  |ГДЕ
	                                  |	СоответствиеНоменклатурыСНоменклатуройПоставщика.Контрагент = &Контрагент
	                                  |	И СоответствиеНоменклатурыСНоменклатуройПоставщика.НаименованиеНоменклатурыПоставщика = &НаименованиеНоменклатурыПоставщика");
	запросНоменклатуры.УстановитьПараметр("Контрагент", Контрагент);	
	запросНоменклатуры.УстановитьПараметр("НаименованиеНоменклатурыПоставщика", НаименованиеНоменклатурыПоставщика);
	данныеРС = запросНоменклатуры.Выполнить().Выгрузить();
	Если данныеРС.Количество() > 0 Тогда
		ссылкаНаНоменклатуру = данныеРС[0].Номенклатура;
	Иначе
		ссылкаНаНоменклатуру = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	КонецЕсли;
	
	Возврат ссылкаНаНоменклатуру;
	
КонецФункции	


// Процедура обновления данных о номенкалатуре поставщика 
//
// Параметры:
//           - "СсылкаНаДокумент" - Ссылка на документ (Обязательный)
//
Процедура ОбновлениеДанныхОНоменклатуреПоставщика(СсылкаНаДокумент) Экспорт
	
	Для Каждого стрДокумента Из СсылкаНаДокумент.Товары Цикл
		Если ЗначениеЗаполнено(стрДокумента.Номенклатура) И ЗначениеЗаполнено(стрДокумента.НаименованиеНоменклатурыПоставщика) Тогда
			менеджерЗаписиРС = РегистрыСведений.СоответствиеНоменклатурыСНоменклатуройПоставщика.СоздатьМенеджерЗаписи();
			менеджерЗаписиРС.Номенклатура = стрДокумента.Номенклатура;
			менеджерЗаписиРС.Контрагент = СсылкаНаДокумент.Контрагент;
			менеджерЗаписиРС.Прочитать();
			
			Если менеджерЗаписиРС.Выбран() Тогда
				
				// в условиях участвует более 1 раза
				пустоеНовоеНаименованиеНоменклатурыПоставщика = СокрЛП(стрДокумента.НаименованиеНоменклатурыПоставщика) = "";
				
				// Найдена запись
				Если стрДокумента.КодНоменклатурыПоставщика <> менеджерЗаписиРС.КодНоменклатурыПоставщика 
					ИЛИ (стрДокумента.НаименованиеНоменклатурыПоставщика <> менеджерЗаписиРС.НаименованиеНоменклатурыПоставщика И НЕ пустоеНовоеНаименованиеНоменклатурыПоставщика)  Тогда
					
					Если НЕ пустоеНовоеНаименованиеНоменклатурыПоставщика Тогда
						менеджерЗаписиРС.НаименованиеНоменклатурыПоставщика = СокрЛП(стрДокумента.НаименованиеНоменклатурыПоставщика);
					КонецЕСли;	
					
					менеджерЗаписиРС.КодНоменклатурыПоставщика = стрДокумента.КодНоменклатурыПоставщика;
					менеджерЗаписиРС.Записать();
				КонецЕсли;	
			Иначе	
				// Создаем запись в регистре
				менеджерЗаписиРС.Номенклатура = стрДокумента.Номенклатура;
				менеджерЗаписиРС.Контрагент = СсылкаНаДокумент.Контрагент;
				менеджерЗаписиРС.КодНоменклатурыПоставщика = стрДокумента.КодНоменклатурыПоставщика;
				менеджерЗаписиРС.НаименованиеНоменклатурыПоставщика = стрДокумента.НаименованиеНоменклатурыПоставщика;
				менеджерЗаписиРС.Записать();
			КонецЕсли;	
			
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры