
Перем мНеРазрешитьНеуникальныеШтрихкоды;

// Обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ТекущаяЗапись Из ЭтотОбъект Цикл
		Если ТипЗнч(ТекущаяЗапись.Владелец) = Тип("СправочникСсылка.Номенклатура") И Не ЗначениеЗаполнено(ТекущаяЗапись.Качество) Тогда
			Сообщить("Для товара """ + СокрЛП(ТекущаяЗапись.Владелец) + """ со штрихкодом: " + ТекущаяЗапись.ШтрихКод + " не заполнено качество.");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;

	Если мНеРазрешитьНеуникальныеШтрихкоды Тогда
		Для Каждого ТекущаяЗапись Из ЭтотОбъект Цикл
			//НМА 210717 Штрихкод >>
			ТекущаяЗапись.ШтрихКод = СокрЛП(ТекущаяЗапись.ШтрихКод);
			//НМА 210717 Штрихкод <<
			Если ЗначениеЗаполнено(ТекущаяЗапись.ШтрихКод) Тогда
				Запрос = Новый Запрос("
				|ВЫБРАТЬ ПЕРВЫЕ 1
				|	РегШтрихкоды.Владелец КАК Владелец,
				|	РегШтрихкоды.ШтрихКод КАК Штрихкод
				|ИЗ
				|	РегистрСведений.Штрихкоды КАК РегШтрихкоды
				|ГДЕ
				|	РегШтрихкоды.ШтрихКод = &ШтрихКод
				|");

				Запрос.УстановитьПараметр("ШтрихКод", ТекущаяЗапись.ШтрихКод);

				РезультатЗапроса = Запрос.Выполнить();
				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Выборка.Следующий();

					Сообщить("Штрихкод: " + Выборка.ШтрихКод + " уже имеет владельца """ + СокрЛП(Выборка.Владелец) + """.");
					Отказ = Истина;
				КонецЕсли;
			//НМА 190717 Проверка штрихкода >>
				Если ТипЗнч(ТекущаяЗапись.Владелец)=Тип("СправочникСсылка.Номенклатура") Тогда  
					Попытка
						ш=Число(ТекущаяЗапись.ШтрихКод);
					Исключение
						Сообщить("!У товара |"+ТекущаяЗапись.Владелец+"|. Штрихкод |"+ТекущаяЗапись.ШтрихКод+"| содержит не числовые символы!");
						Отказ = Истина;
					КонецПопытки;
				КонецЕсли;
			Иначе
				Сообщить("!Укажите штрихкод у товара |"+ТекущаяЗапись.Владелец+"|. Нельзя записать пустой Штрихкод!");
				Отказ = Истина;
			//НМА 190717 Проверка штрихкода <<
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(ЭтотОбъект.Отбор.Объект) Тогда
	//	НоменклатураСссылка = ЭтотОбъект.Отбор.Объект.Значение; 	
	//	ОбщегоНазначения5LB.ЗаписатьИзменениеРегистраСведенийСОбъектом(НоменклатураСссылка,
	//		"Штрихкоды", "");
	//	КонецЕсли;
		
	Если ЭтотОбъект.Отбор.Количество() > 0 Тогда
		НоменклатураСссылка = ЭтотОбъект.Отбор.Владелец.Значение; 	
		Если ТипЗнч(НоменклатураСссылка) = Тип("СправочникСсылка.Номенклатура") Тогда
			Для Каждого ТекСвойство Из ЭтотОбъект Цикл
				ОбщегоНазначения5LB.ЗаписатьИзменениеРегистраСведенийСОбъектом(НоменклатураСссылка,
					"Штрихкод", ТекСвойство.Штрихкод);
				Прервать;	// толкьо одно значение!
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;



КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ, Замещение)

	// если обмен данными - не продолжать
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// иначе - проверить изменения
	НоменклатураСссылка = ЭтотОбъект.Отбор.Владелец.Значение;
	бПродолжить = Ложь;
	Если ЗначениеЗаполнено(НоменклатураСссылка) Тогда	
		Если ТипЗнч(НоменклатураСссылка) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если НЕ НоменклатураСссылка.ЭтоГруппа Тогда												
				
				бТолькоИзменениеРеквизитов = Ложь;
				стрИзменение = ОбщегоНазначения5LB.ПолучитьИзмененияОбъектаСтрокой(НоменклатураСссылка, 
					бТолькоИзменениеРеквизитов, "*Штрихкод");				
					
				Если стрИзменение <> "" Тогда
					бПродолжить = Истина;
				КонецЕсли;	
			
			КонецЕсли;				
		КонецЕсли;
	КонецЕсли;   	

	
	Если бПродолжить Тогда
	// если были изменения - синхронизировать штрих-код УТ-11
	
		ОбрСоотв = Обработки._5LB_СоответствиеНоменклатуры_УТ11;     								
		бЕстьОбмен = ОбрСоотв.НоменклатураДоступнаДляОбмена(НоменклатураСссылка);	
		Если бЕстьОбмен Тогда
			 	НоменклатураХарактеристика = ОбрСоотв.НайтиСоответствиеНоменклатуры(НоменклатураСссылка); 
				НоменклатураУТ11 = НоменклатураХарактеристика.Номенклатура;
				ХарактеристикаУТ11 = НоменклатураХарактеристика.Характеристика;	
				Если ЗначениеЗаполнено(НоменклатураУТ11) Тогда	
					
					//стрИзменение = "";
					//РезОбновления = ОбрСоотв.ОбновитьНоменклатуруСРеквизитами(
					//		НоменклатураСссылка, НоменклатураУТ11, ХарактеристикаУТ11, Истина,
					//		стрИзменение);
					//		//			
							//Если Источник.Метаданные().Имя = "ШтрихКод" Тогда  	// для штрих-кода отдельно
					ОбрСоотв.СинхронизироватьШтрихКод(НоменклатураСссылка, НоменклатураУТ11, ХарактеристикаУТ11);	
							//				////		бУспешно = НЕ ОбрСоотв.ОбновитьЗаписьСоответствий(Ссылка, НоваяНоменклатура, НоваяХарактеристика);  
							//				////	Если бУспешно Тогда
							//				////		стрСообщ = "Не удалось создать запись связи номенклатуры УТ-10 и новой номенклатуры УТ-11!";
							//				////		статусСообщ = СтатусСообщения.Важное;
							//				////		//Сообщить(стрСообщ, статусСообщ);												
				КонецЕсли;
						
		КонецЕсли;	
		//КонецЕсли;	
		
	КонецЕсли;

	
КонецПроцедуры




мНеРазрешитьНеуникальныеШтрихкоды = Не Константы.РазрешитьНеуникальныеШтрихкоды.Получить();
