
Функция КонтрольНаименования(СтрВх)
	
	// без пробелов
	СтрИсх = СокрЛП(СтрВх);
	
	
	// убрать "плохие" символы с начала и в конце
	МассивУбрать = Новый Массив();
	МассивУбрать.Очистить();
	МассивУбрать.Добавить("""");
	МассивУбрать.Добавить("'");
	МассивУбрать.Добавить("_");
	
	Для Каждого ТекСимв Из МассивУбрать Цикл		
		СтрНачало = Лев(СтрИсх, 1);
		Если (СтрНачало = ТекСимв) Тогда
			СтрИсх = Сред(СтрИсх, 2);
		КонецЕсли;		
		СтрКонец = Прав(СтрИсх, 1);
		Если (СтрКонец = ТекСимв) Тогда
			СтрИсх = Сред(СтрИсх, 1, СтрДлина(СтрИсх) - 1);
		КонецЕсли;		
	КонецЦикла;
	
	
	// если заканчивается на "гр" - заменить на "г"
	ПозРаз = СтрДлина(СтрИсх) - 2;
	СтрКонец = ВРег(Прав(СтрИсх, 2));
	Если (СтрКонец = "ГР" ИЛИ СтрКонец = "ГP") Тогда 	  //  Р - лат.!
		Если Сред(СтрИсх, ПозРаз, 1) = " " Тогда
			СтрИсх = Лев(СтрИсх, ПозРаз - 1); 
		Иначе
			СтрИсх = СтрИсх;
		КонецЕсли;		
		СтрИсх = СтрИсх + " г";  		
	КонецЕсли;
	
	
	Возврат СтрИсх;
	
КонецФункции
	
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//
	//G = 1;

	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;

	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		ШаблонРабочегоНаименования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "ШаблонРабочегоНаименованияНоменклатуры");
		Если ЗначениеЗаполнено(ШаблонРабочегоНаименования) Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Наименование");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЕдиницаИзмерения");
	КонецЕсли;
	
	Если Не ИспользоватьИндивидуальныйШаблонЦенника Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ШаблонЦенника");
	КонецЕсли;
	
	Если Не ИспользоватьИндивидуальныйШаблонЭтикетки Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ШаблонЭтикетки");
	КонецЕсли;
	
	Если Не ИспользоватьУпаковки Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаборУпаковок");
	КонецЕсли;
	
	Если Не Справочники.ГруппыДоступаНоменклатуры.ИспользуютсяГруппыДоступа() Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ГруппаДоступа");
	КонецЕсли;
	
	Если Не ПоставляетсяВМногооборотнойТаре Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НоменклатураМногооборотнаяТара");
		МассивНепроверяемыхРеквизитов.Добавить("ХарактеристикаМногооборотнаяТара");
	ИначеЕсли Не Справочники.Номенклатура.ХарактеристикиИспользуются(НоменклатураМногооборотнаяТара) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ХарактеристикаМногооборотнаяТара");
	КонецЕсли;
	
	Если ВидНоменклатуры.ВариантОказанияУслуг = Перечисления.ВариантыОказанияУслуг.ОрганизациейПродавцом
		ИЛИ ВидНоменклатуры.ВариантОказанияУслуг = Перечисления.ВариантыОказанияУслуг.ПустаяСсылка()
		Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Принципал");
		МассивНепроверяемыхРеквизитов.Добавить("Номенклатура");
	КонецЕсли;
	
	ДобавитьВНепроверяемыеРеквизитыМеры(МассивНепроверяемыхРеквизитов, "Вес");
	ДобавитьВНепроверяемыеРеквизитыМеры(МассивНепроверяемыхРеквизитов, "Объем");
	ДобавитьВНепроверяемыеРеквизитыМеры(МассивНепроверяемыхРеквизитов, "Площадь");
	ДобавитьВНепроверяемыеРеквизитыМеры(МассивНепроверяемыхРеквизитов, "Длина");
	
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	ЭтотОбъект.Наименование = КонтрольНаименования(ЭтотОбъект.Наименование);
	
	стрНаименование = ЭтотОбъект.Наименование;
	
	
	НайденЭлемент = Справочники._Номенклатура_УТ11.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура_УТ11.Ссылка
		|ИЗ
		|	Справочник._Номенклатура_УТ11 КАК Номенклатура_УТ11
		|ГДЕ
		|	Номенклатура_УТ11.Наименование = &Наименование
		|	И Номенклатура_УТ11.Ссылка <> &ОбъектСсылка";
	
	Запрос.УстановитьПараметр("Наименование", стрНаименование);
	Запрос.УстановитьПараметр("ОбъектСсылка", ЭтотОбъект.Ссылка);	
	РезультатЗапроса = Запрос.Выполнить();                 	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();   	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НайденЭлемент = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;

	// если с таким н
	Если НайденЭлемент <> Справочники._Номенклатура_УТ11.ПустаяСсылка() Тогда
		
		ЕстьЭлементСНазванием = Ложь;	
		Если НЕ ЭтотОбъект.ЭтоГруппа Тогда
			ЕстьЭлементСНазванием = Истина;
		Иначе
			// не допускаются совпадения в одном каталоге
			Если НайденЭлемент.Родитель = ЭтотОбъект.Родитель Тогда
				ЕстьЭлементСНазванием = Истина;				
			КонецЕсли; 	
		КонецЕсли;
		
		Если ЕстьЭлементСНазванием Тогда
			Сообщить("В базе уже есть номенклатура с наименованием """ + стрНаименование + """!");
			Отказ = Истина;
		КонецЕсли;
		
	//// создать новую номенклатуру
	//Иначе
	КонецЕсли;   	
	
	
	Если НЕ ЭтотОбъект.ЭтоГруппа Тогда		
		
		ЭтотОбъект.ИспользоватьУпаковки = Истина;	
		ЭтотОбъект.Качество = Перечисления._ГрадацииКачества_УТ11.Новый;		
		
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ВариантОформленияПродажи) Тогда
			ЭтотОбъект.ВариантОформленияПродажи = Перечисления._ВариантыОформленияПродажи_УТ11.РеализацияТоваровУслуг;			
		КонецЕсли;                                                   				
		
	Иначе   		

		
	КонецЕсли;

	
	Если ЭтотОбъект.ПометкаУдаления Тогда
		Если НЕ РольДоступна("НСИ_УТ11_УдалениеНоменклатуры") Тогда
			Сообщить("У Вас недостаточно прав на установку пометки удаления номенклатуры!");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	G = 1; 

	//Если Не Отказ
	//	И ДополнительныеСвойства.Свойство("ЕстьПроблемаСоСменойВидаНоменклатуры") Тогда
	//	ТекстСообщения = НСтр("ru = 'Запись элемента выполнена, но есть проблемы, связанные с изменением вида номенклатуры.'");
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	//КонецЕсли;
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	П = 1;
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	//|ИЗ
	//|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	//|ГДЕ
	//|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура";
	//Запрос.УстановитьПараметр("Номенклатура", Ссылка);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	
	//	НаборЗаписей = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.Штрихкод.Значение = Выборка.Штрихкод;
	//	НаборЗаписей.Отбор.Штрихкод.Использование = Истина;
	//	НаборЗаписей.Записать();
	//	
	//КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовНоменклатуры") Тогда
		Справочники.ВидыНоменклатуры.ПолучитьПредустановленныеВидыНоменклатуры();
	КонецЕсли;
	
	Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(ЭтотОбъект);
	
КонецПроцедуры

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьВНепроверяемыеРеквизитыМеры(МассивНепроверяемыхРеквизитов, Мера)
	
	Если Не ЭтотОбъект[Мера + "Использовать"] Тогда
		МассивНепроверяемыхРеквизитов.Добавить(Мера + "Числитель");	
		МассивНепроверяемыхРеквизитов.Добавить(Мера + "Знаменатель");	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	//G = 1;
КонецПроцедуры

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	//G = 1;

КонецПроцедуры



//#КонецОбласти

//#КонецЕсли
