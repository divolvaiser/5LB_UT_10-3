


Функция ПолучитьДанныеЗапросаТекущейИБ(ТекстЗапроса, ТаблПараметров=Неопределено, чПолучитьПервые=0, КодОбрСтроки="") Экспорт
	
	Перем ПодключениеКВИБ;
	
	//Запрос.Текст = ТекстЗапроса;		
	Если чПолучитьПервые > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ" , "ВЫБРАТЬ ПЕРВЫЕ " + Формат(чПолучитьПервые, "ЧЦ=12; ЧДЦ=; ЧГ=0"));
	КонецЕсли;
	
	бЕстьКодОбработкиСтроки = НЕ (СокрЛП(КодОбрСтроки) = "");

	М = Новый Массив;
	М.Добавить(Тип("Строка"));
	КС = Новый КвалификаторыСтроки(100);		// макс.длина наименования номенклатуры		
	ОписаниеТиповС100 = Новый ОписаниеТипов(М, КС);
	
	ТекущаяТаблица = Новый ТаблицаЗначений;
	СтруктураМаксЗнач = Новый Структура;
	
	
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;		
		Если ТаблПараметров <> Неопределено  Тогда
			Для Каждого ТекПарам Из ТаблПараметров Цикл
				Запрос.Параметры.Вставить(ТекПарам.ИмяПараметра, ТекПарам.ЗначениеПараметра);
			КонецЦикла;
		КонецЕсли;
		
		РезультатЗапроса = Запрос.Выполнить();  
		РезультатДанныеТекИБ = РезультатЗапроса.Выгрузить();	
		ТекущаяТаблица.Колонки.Очистить();
		//СтруктураМаксЗнач.Очистить();
		Для НомерСтолбца = 0 По РезультатДанныеТекИБ.Колонки.Количество() - 1 Цикл   //Создание и добавление колонок во временную таблицу
			ТекСтолбецТекИБ = РезультатДанныеТекИБ.Колонки.Получить(НомерСтолбца);			
			ИмяСтолбца = ТекСтолбецТекИБ.Имя;			
		 	ТекущаяТаблица.Колонки.Добавить(ИмяСтолбца, ОписаниеТиповС100);
			СтруктураМаксЗнач.Вставить(ИмяСтолбца, 0);
		 //Сообщить(ИмяСтолбца);            // Тестовая строка
	 	КонецЦикла;
		
		//Для Каждого ТекущаяСтрока Из РезультатДанныеТекИБ Цикл
		//	НоваяСтрока =  ТекущаяТаблица.Добавить();
		//	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		//	Если бЕстьКодОбработкиСтроки Тогда
		//		Попытка
		//			Выполнить(КодОбрСтроки);
		//		Исключение
		//		КонецПопытки;
		//	КонецЕсли;
		//КонецЦикла;
		
		ТекущийНомерСтроки = 0;
		Для Каждого ТекущаяСтрока Из РезультатДанныеТекИБ Цикл
			
			Отказ = Ложь;
			Если бЕстьКодОбработкиСтроки Тогда
				Попытка
					Выполнить(КодОбрСтроки);
				Исключение
					// если при возникновении исключения - стоит флаг "удалить текущую строку"
					Отказ = Истина;
				КонецПопытки;
			КонецЕсли;

			Если НЕ Отказ Тогда
				НоваяСтрока =  ТекущаяТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);			
			КонецЕсли;
			
			ТекущийНомерСтроки = ТекущийНомерСтроки + 1; 			
			
		КонецЦикла;

	 ПодключениеКВИБ = Неопределено;

	 Возврат  ТекущаяТаблица;
	
 КонецФункции
 

Функция ПолучитьДанныеЗапросаВнешнейИБ(СтруктураВнешнейИБ, ТекстЗапроса, ТаблПараметров=Неопределено, чПолучитьПервые=0, КодОбрСтроки="") Экспорт
	
	Перем ПодключениеКВИБ;
	
	
	//Запрос.Текст = ТекстЗапроса;		
	Если чПолучитьПервые > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ" , "ВЫБРАТЬ ПЕРВЫЕ " + Формат(чПолучитьПервые, "ЧЦ=12; ЧДЦ=; ЧГ=0"));
	КонецЕсли;
	
	бЕстьКодОбработкиСтроки = НЕ (СокрЛП(КодОбрСтроки) = "");

	М = Новый Массив;
	М.Добавить(Тип("Строка"));
	КС = Новый КвалификаторыСтроки(100);		// макс.длина наименования номенклатуры		
	ОписаниеТиповС100 = Новый ОписаниеТипов(М, КС);
	
	ТекущаяТаблица = Новый ТаблицаЗначений;
	СтруктураМаксЗнач = Новый Структура;
	
	Если СтруктураВнешнейИБ = Неопределено Тогда 
	    Возврат ТекущаяТаблица;
	Иначе 
		
		стрОписаниеОшибки = ""; 		
		ПодключениеКВИБ = _5LB_Интеграция.СоздатьCOMСоединение(СтруктураВнешнейИБ.Путь,
		 	СтруктураВнешнейИБ.База, СтруктураВнешнейИБ.Пользователь, СтруктураВнешнейИБ.Пароль,
			стрОписаниеОшибки);			
		Если ПодключениеКВИБ = Неопределено Тогда
			стрИнф = "Неудачная попытка подключения." +  Символы.ПС + стрОписаниеОшибки;
			Сообщить(стрИнф);
			Возврат ТекущаяТаблица;
		Иначе
			//стрИнф = "Подключение к " + ?(ЭтотОбъект.СтрПодключенеКИБ_База = "", ЭтотОбъект.СтрПодключенеКИБ_Путь, ЭтотОбъект.СтрПодключенеКИБ_База)
			//	+ Символы.ПС + " -  успешно выполнено!";
			//ПодключениеКВИБ = Неопределено;
		КонецЕсли;

		Запрос = ПодключениеКВИБ.NewObject("Запрос");
		Запрос.Текст = ТекстЗапроса;		
		Если ТаблПараметров <> Неопределено  Тогда
			Для Каждого ТекПарам Из ТаблПараметров Цикл
				
				ТЗн = ТипЗнч(ТекПарам.ЗначениеПараметра);
				ЗнПарам = Неопределено;
				
				Если ((ТЗн = Тип("Число"))
					ИЛИ (ТЗн = Тип("Булево"))
					ИЛИ (ТЗн = Тип("Дата"))
					) Тогда
	                  ЗнПарам = ТекПарам.ЗначениеПараметра;
				ИначеЕсли  ТЗн = Тип("Строка") Тогда
					// если есть условия (код поиска объектов)	 
					стрКод = СокрЛП(ТекПарам.СтрКодПоискаОбъекта);
					Если стрКод <> "" Тогда
						
						стрВидМД = "";			// "Справочники", "Документы"
						стрИмяОбъект = "";		// "Номенклатура", "Контрагенты", "ПеремещениеТоваров"
						стрМетод = "";			// "Найти"
						МенеджерВИБ = Неопределено;
						
						Поз1 = Найти(стрКод, ".");
						Поз2 = Поз1 + Найти(Сред(стрКод, Поз1 + 1), ".");						
						// парсинг кода - если в коде есть две точки
						Если (Поз1 > 0 И Поз2 > Поз1) Тогда   // только при наличии двух точек-разд.!							
							стрВидМД = Врег(Лев(стрКод, Поз1 - 1));
							//Если стрВидМД = "СПРАВОЧНИКИ" Тогда
							//	стрИмяОбъект = Врег(Сред(стрКод, Поз1+1, Поз2-1));	
							//ИначеЕсли стрВидМД = "ДОКУМЕНТЫ" Тогда
							//КонецЕсли;	
							стрИмяОбъект = Врег(Сред(стрКод, Поз1+1, Поз2-Поз1-1));
							стрМетод = Врег(СокрЛП(Сред(стрКод, Поз2 + 1)));
							
							Попытка
								Если (стрВидМД<>"" И стрИмяОбъект<>"" И стрМетод<>"") Тогда
									Если стрВидМД = "СПРАВОЧНИКИ" Тогда
										//Соединение.Справочники.Организации.НайтиПоНаименованию(стрОрганизацияНаименование, Истина);
										МенеджерВИБ = ПодключениеКВИБ.Справочники[стрИмяОбъект];
									ИначеЕсли стрВидМД = "ДОКУМЕНТЫ" Тогда
										МенеджерВИБ = ПодключениеКВИБ.Документы[стрИмяОбъект];
									КонецЕсли;
									Если стрМетод = "НАЙТИПОКОДУ" Тогда
										ЗнПарам = МенеджерВИБ.НайтиПоКоду(ТекПарам.ЗначениеПараметра);
									ИначеЕсли стрМетод = "НАЙТИПОНАИМЕНОВАНИЮ" Тогда
										ЗнПарам = МенеджерВИБ.НайтиПоНаименованию(ТекПарам.ЗначениеПараметра, Истина);
									ИначеЕсли стрМетод = "НАЙТИПОНОМЕРУ" Тогда
		                                ЗнПарам = МенеджерВИБ.НайтиПоНомеру(ТекПарам.ЗначениеПараметра, НачалоГода(ТекущаяДата()));
									КонецЕсли;
								КонецЕсли;
							Исключение
								Сообщить("При доключении к ВИБ - не удалось создать параметр """ +
									ТекПарам.ИмяПараметра + """ со значением """ + 
									ТекПарам.ЗначениеПараметра + """!", СтатусСообщения.Важное);
								ЗнПарам = Неопределено;
							КонецПопытки;
						КонецЕсли;
						// парсинг кода - если в коде есть две точки
					Иначе
					  ЗнПарам = стрКод;	// иначе - просто строка
					КонецЕсли;
				КонецЕсли;
				Если ЗнПарам <> Неопределено Тогда
					Запрос.Параметры.Вставить(ТекПарам.ИмяПараметра, ЗнПарам);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		РезультатЗапроса = Запрос.Выполнить();                          
		РезультатДанныеВИБ = РезультатЗапроса.Выгрузить();			
		ТекущаяТаблица.Колонки.Очистить();
		
		Для НомерСтолбца = 0 По РезультатДанныеВИБ.Columns.Count()-1 Цикл   //Создание и добавление колонок во временную таблицу
			ТекСтолбецВИБ = РезультатДанныеВИБ.Columns.Get(НомерСтолбца);			
			ИмяСтолбца = ТекСтолбецВИБ.Name;
		 	ТекущаяТаблица.Колонки.Добавить(ИмяСтолбца, ОписаниеТиповС100);
		 //Сообщить(ИмяСтолбца);            // Тестовая строка
		КонецЦикла;
		
		ТекущийНомерСтроки = 0;
		Для Каждого ТекущаяСтрока Из РезультатДанныеВИБ Цикл
			
			Отказ = Ложь;
			Если бЕстьКодОбработкиСтроки Тогда
				Попытка
					Выполнить(КодОбрСтроки);
				Исключение
					// если при возникновении исключения - стоит флаг "удалить текущую строку"
					Отказ = Истина;
				КонецПопытки;
			КонецЕсли;

			Если НЕ Отказ Тогда
				НоваяСтрока =  ТекущаяТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);			
			КонецЕсли;
			
			ТекущийНомерСтроки = ТекущийНомерСтроки + 1; 		
			
		КонецЦикла;

	КонецЕсли;

	 Возврат  ТекущаяТаблица;
	
 КонецФункции
 
 
 
 
 
 
Процедура СравнитьТаблицы(Табл1, Табл2, Табл1Рез, Табл2Рез) Экспорт
	
	Перем МенеждерВТ;
	
	Если Табл1.Колонки.Количество() <> Табл2.Колонки.Количество() тогда
		Сообщить("Разное количество колонок в сравниваемых таблицах!");
		Возврат;
	КонецЕсли;
	
	Табл1Рез.Колонки.Очистить();
	Табл1Рез = Табл1.Скопировать();
	Табл1Рез.Очистить();
	Табл2Рез.Колонки.Очистить();
	Табл2Рез = Табл2.Скопировать();
	Табл2Рез.Очистить();
	
	стрПоля1 = "";
	стрПоля2 = "";	
	стрУсловия = "";
	Для ПозКол = 0 По Табл1.Колонки.Количество() - 1 Цикл
		КолИмя = Табл1.Колонки[ПозКол].Имя;
		стрПоля1 = стрПоля1 + "Т1." + КолИмя + ", ";
		стрПоля2 = стрПоля2 + "Т2." +КолИмя + ", ";		 
		стрУсловия = стрУсловия + "Т1." + КолИмя + " = Т2." + КолИмя + " И ";
	КонецЦикла;
	стрПоля1 = Лев(стрПоля1, СтрДлина(стрПоля1) - 2);
	стрПоля2= Лев(стрПоля2, СтрДлина(стрПоля2) - 2);	
	стрУсловия = Лев(стрУсловия, СтрДлина(стрУсловия) - 3);
	стрПослПоле = Табл1.Колонки[ПозКол-1].Имя;
	
	МенеждерВТ = Новый МенеджерВременныхТаблиц;
	
  	Запрос1 = Новый Запрос("ВЫБРАТЬ * ПОМЕСТИТЬ втТ1 ИЗ &Таб1 КАК Т1 ИНДЕКСИРОВАТЬ ПО " + стрПоля1);
	Запрос1.МенеджерВременныхТаблиц = МенеждерВТ;
	Запрос1.УстановитьПараметр("Таб1", Табл1);	
	Запрос1.Выполнить();
	
	Запрос2 = Новый Запрос("ВЫБРАТЬ * ПОМЕСТИТЬ втТ2 Из &Таб2 КАК Т2 ИНДЕКСИРОВАТЬ ПО " + стрПоля2);
	Запрос2.МенеджерВременныхТаблиц = МенеждерВТ;
	Запрос2.УстановитьПараметр("Таб2", Табл2);
	Запрос2.Выполнить();  


	Запрос = Новый Запрос; 
	Запрос.МенеджерВременныхТаблиц = МенеждерВТ;
	Запрос.Текст= "
		 |ВЫБРАТЬ " + стрПоля1 + "            
		 |ИЗ	              
		 |	втТ1 КАК Т1
		 |ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ * ИЗ втТ2) КАК Т2
	 	 |ПО " + стрУсловия + "	
		 |ГДЕ
		 |		Т2." + стрПослПоле + " Есть NULL 	
		 |";
	//Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Т1", "Т1");	 
	//Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Т2", "Т2");		
	Табл1Рез = Запрос.Выполнить().Выгрузить();		
	
	Запрос = Новый Запрос; 
	Запрос.МенеджерВременныхТаблиц = МенеждерВТ;
	Запрос.Текст= "
		 |ВЫБРАТЬ " + стрПоля1 + "            
		 |ИЗ	              
		 |	втТ2 КАК Т1
		 |ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ * ИЗ втТ1) КАК Т2
	 	 |ПО " + стрУсловия + "	
		 |ГДЕ
		 |		Т2." + стрПослПоле + " Есть NULL 	
		 |";
	//Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Т1", "Т1");	 
	//Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Т2", "Т2");		
	Табл2Рез = Запрос.Выполнить().Выгрузить();	

	ЗапросУДАЛЕНИЕ = Новый Запрос;
	ЗапросУДАЛЕНИЕ.МенеджерВременныхТаблиц = МенеждерВТ;
	ЗапросУДАЛЕНИЕ.Текст = "УНИЧТОЖИТЬ втТ1";
	ЗапросУДАЛЕНИЕ.Выполнить();
		
	ЗапросУДАЛЕНИЕ.МенеджерВременныхТаблиц = МенеждерВТ;
	ЗапросУДАЛЕНИЕ.Текст = "УНИЧТОЖИТЬ втТ2";
	ЗапросУДАЛЕНИЕ.Выполнить();	
	
КонецПроцедуры
