Перем мСписокВозможныхРеквизитов Экспорт;
Перем мРеквизитыКонтрольУникальности Экспорт;

Перем мЭтоНеНовый;

// Катков А. 14.10.2016 >>
Перем мОтправитьВ_WMS;
// Катков А. 14.10.2016 <<   

// Обработчик события элемента ПриКопировании.
//
Процедура ПриКопировании(ОбъектКопирования)

	Если Не ЭтоГруппа Тогда
		ЕдиницаХраненияОстатков = Неопределено;
		ЕдиницаДляОтчетов       = Неопределено;
		ЕдиницаИзмеренияМест    = Неопределено;
		ОсновноеИзображение     = Неопределено;
		НазначениеИспользования = Неопределено;
		//НМА 20.07.17
		емеIDиСрокГодностиДопНоменклатуры = "";
		//НМА 20.07.17
	КонецЕсли;
	
	//++ Кузнецов С.А. - Не очищаем номенклатурную группу при копировании - 26.05.2016
	Если НЕ УправлениеПользователями.ПолучитьЗначениеПраваДляТекущегоПользователя(ПланыВидовХарактеристик.ПраваПользователей.НеОчищатьНоменклатурнуюГруппуПриКопировании, Ложь)[0].Значение Тогда
		НоменклатурнаяГруппа = Неопределено;
	КонецЕсли;	
	//-- Кузнецов С.А. - 26.05.2016

КонецПроцедуры // ПриКопировании()

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)

	//++ Кузнецов С.А. - Задача в МегаПлане "3213" (Фиксируем дату создания номенклатуры) - 26.04.2016
	Если ЭтоНовый() Тогда
		ДатаСозданияНоменклатуры = ТекущаяДата();
		
		// Катков А. 14.10.2016 >>
		// отправляем "новую" номенклатуру в WMS
		Если НЕ ЭтоГруппа И НЕ емеЭтоДополнительнаяНоменклатура Тогда
			мОтправитьВ_WMS = ИСТИНА;	
		КонецЕсли; 
		// Катков А. 14.10.2016 <<  

	КонецЕсли;	
	//-- Кузнецов С.А. - 26.04.2016
		
	Если мЭтоНеНовый = Неопределено Тогда
		мЭтоНеНовый = Не ЭтоНовый();
	КонецЕсли;

	Если Не ОбменДанными.Загрузка И Не ЭтоГруппа Тогда
		Если Не Услуга И НЕ ЗначениеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
			#Если Клиент Тогда
			РаботаСДиалогами.СообщитьПользователюНезаполненРеквизит(Ссылка, "базовая единица");
			#КонецЕсли
			Отказ = Истина;
		Иначе
			// Надо проверить владельца единицы хранения остатков.
			Если ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
			   И ЕдиницаХраненияОстатков.Владелец <> Ссылка Тогда
				ТекстСообщения = "У единицы хранения остатков номенклатуры """ + СокрЛП(Ссылка) + """ неверно указан владелец!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ЕдиницаДляОтчетов) Тогда
			ЕдиницаДляОтчетов = ЕдиницаХраненияОстатков;
		КонецЕсли;

		// Надо проверить владельца единицы для отчетов.
		Если ЗначениеЗаполнено(ЕдиницаДляОтчетов)
		   И ЕдиницаДляОтчетов.Владелец <> Ссылка Тогда
			ТекстСообщения = "У единицы для отчетов номенклатуры """ + СокрЛП(Ссылка) + """ неверно указан владелец!";
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;

		Если мЭтоНеНовый Тогда
						
			СуществуютСсылки = Неопределено;

			Если Не Услуга И Ссылка.ЕдиницаХраненияОстатков <> ЕдиницаХраненияОстатков И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
				ТекстСообщения = "Единица """ + СокрЛП(Ссылка.ЕдиницаХраненияОстатков) + """ является единицей хранения остатков для """ + Наименование + """
				|и уже участвует в товародвижении. 
				|Изменить эту единицу уже нельзя!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;

			Если (Услуга <> Ссылка.Услуга Или Комплект <> Ссылка.Комплект Или Набор <> Ссылка.Набор)
			   И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
				ТекстСообщения = "Номенклатура """ + СокрЛП(Ссылка) + """ участвует в товародвижении.
				|Нельзя изменить тип номенклатуры (Услуга, товар, набор-комплект), если позиция номенклатуры участвует в товародвижении!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;

			Если Не ВестиУчетПоСериям И Ссылка.ВестиУчетПоСериям И ПолныеПрава.Номенклатура_СуществуютСсылкиНаСерииВРегистрахНакопления(Ссылка) Тогда
				ТекстСообщения = "Номенклатура """ + СокрЛП(Ссылка) + """ участвует в товародвижении.
				|признак учета по сериям не может быть изменен!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			#Если Клиент Тогда
			РаботаСДиалогами.СообщитьПользователюНезаполненРеквизит(Ссылка, "вид номенклатуры");
			#КонецЕсли
			Отказ = Истина;
		КонецЕсли;
		Если НЕ Отказ Тогда
			Если Не ВестиУчетПоСериям Тогда
				Если ЗначениеЗаполнено(НомерГТД) Тогда
					НомерГТД = Справочники.НомераГТД.ПустаяСсылка();
				КонецЕсли;

				//Если ЗначениеЗаполнено(СтранаПроисхождения) Тогда
				//	СтранаПроисхождения = Справочники.КлассификаторСтранМира.ПустаяСсылка();
				//КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Катков А. 05.09.2016 >>
	Если НЕ Отказ И НЕ ЭтоГруппа Тогда
		
		Если емеЭтоДополнительнаяНоменклатура И НЕ ЗначениеЗаполнено(емеСсылкаНаОсновнуюНоменклатуру) Тогда
			Сообщить("Установлен признак для Номенклатуры - ""Дополнительная"", но не заполнена ссылка на ""Основную"". Запись невозможна!");
			Отказ = ИСТИНА;
		КонецЕсли; 
		
	КонецЕсли; 
	// Катков А. 05.09.2016 <<
	
	//// < 20.12.16 Вялов - ИНТЕГРАЦИЯ - обязательная проверка и создание Н+Х УТ-11
	//Если РольДоступна("НСИ_УТ11_ПолныеПрава") Тогда
	//	Если НЕ РегистрыСведений._СоответствияНоменклатуры.ЕстьСоответствиеНоменклатуры(Ссылка) Тогда
	//		Если НЕ РегистрыСведений._СоответствияНоменклатуры.ЗадатьОбновитьСоответствиеНоменклатуры(Ссылка) Тогда
	//			Отказ = Истина;
	//		КонецЕсли;
	//	Иначе
	//		НоменклатураХарактеристика = РегистрыСведений._СоответствияНоменклатуры.НайтиСоответствиеНоменклатуры(Ссылка);
	//		НоменклатураУТ11 = НоменклатураХарактеристика.Номенклатура;
	//		Если Не ЗначениеЗаполнено(НоменклатураУТ11) Тогда
	//			Отказ = Истина;
	//		Иначе
	//			ОбрСоотв = Обработки._СоответствиеНоменклатуры_УТ11;
	//			Отказ = НЕ ОбрСоотв.ОбновитьНоменклатуруСРеквизитами(Ссылка, НоменклатураУТ11, НоменклатураХарактеристика.Характеристика); 							
	//		КонецЕсли;
	//	КонецЕсли;    		
	//КонецЕсли;
	
	
	//// < 20.12.16 Вялов - ИНТЕГРАЦИЯ - обязательная проверка и создание Н+Х УТ-11]
	Если НЕ ЭтотОбъект.ЭтоГруппа Тогда
		Если (ЭтотОбъект.ЭтоНовый() ИЛИ ЭтотОбъект._5LB_ДатаСоздания = Дата(1,1,1)) Тогда
			ЭтотОбъект._5LB_ДатаСоздания = ТекущаяДата();
		Иначе
			ОбщегоНазначения5LB.ЗаписатьИзменениеОбъекта(ЭтотОбъект);
		КонецЕсли;		
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

// Катков А. 14.10.2016 >>
Процедура ПриЗаписи(Отказ)

	//ЗаписьЖурналаРегистрации("Интеграция", УровеньЖурналаРегистрации.Информация,,, "Шаг 1");


	Если НЕ Отказ И мОтправитьВ_WMS Тогда
		Если Не EmeWmsЭкспортНоменклатуры.ПомеченКЭкспорту(Ссылка) Тогда
			EmeWmsЭкспортНоменклатуры.ПометитьКЭкспорту(ЭтотОбъект);
		КонецЕсли
	КонецЕсли;
	
	// < 18.02.17 Вялов - ИНТЕГРАЦИЯ
	Если НЕ ЭтотОбъект.ЭтоГруппа Тогда
		стрУИД = Строка(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
		Если СокрЛП(ЭтотОбъект._5LB_Идентификатор) <> стрУИД Тогда
			ЭтотОбъект._5LB_Идентификатор = стрУИД;
		КонецЕсли;
	КонецЕсли;
	// 18.02.17 Вялов - ИНТЕГРАЦИЯ >

	//Интеграция_с_УТ11 = Ложь; //НМА 15.09.17 отключил, распоряжение Ивана Иванова 
	Интеграция_с_УТ11 = Истина; //07.11.2017, Тасмаджиев
	Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка.емеСрокГодностиДляДополнительных) И ЭтотОбъект.Ссылка.ДатаСозданияНоменклатуры>'20170716' Тогда //НМА 17.07.17
		Интеграция_с_УТ11 = Ложь;     //НМА 11.07.17
	КонецЕсли;
	Если Интеграция_с_УТ11 Тогда //НМА 11.07.17
	
	// < 16.01.17 Вялов - ИНТЕГРАЦИЯ - обязательная проверка и создание Н+Х УТ-11
	Если НЕ Отказ Тогда	//  не отказ  	
	Если НЕ ЭтотОбъект.ОбменДанными.Загрузка Тогда	// в режиме обмене - нет		
			
		ОбрСоотв = Обработки._5LB_СоответствиеНоменклатуры_УТ11;  
			
		//Если (РольДоступна("НСИ_УТ11") ИЛИ РольДоступна("НСИ_УТ11_ПолныеПрава")) Тогда	// только для доступных ролей
		Если ЭтотОбъект.ЭтоГруппа Тогда
			
			// 14.02.17 Вялов - добавлена синхронизация групп
			бГруппуСинхронизировать = Истина;
			Если Ссылка.Родитель <> Справочники.Номенклатура.ПустаяСсылка() Тогда
				бГруппуСинхронизировать	= НЕ Ссылка.Родитель._5LB_НеУчаствуетВСинхронизации; 
				ГруппаССылка = Ссылка.Родитель;
			Иначе
				ГруппаССылка = Ссылка;
			КонецЕсли;
			Если бГруппуСинхронизировать Тогда
				ОбрСоотв.НайтиСинхронизироватьГруппу(ГруппаССылка);
			КонецЕсли;
	
		// элемент

		Иначе     			
			
			стрЗаголовок = "ИНТЕГРАЦИЯ";

			// если создано не более 1 мин назад - то новый
			Если НачалоМинуты(ЭтотОбъект._5LB_ДатаСоздания) >= НачалоМинуты(ТекущаяДата() - 60) Тогда
				ОбщегоНазначения5LB.ЗаписатьИзменениеОбъекта(ЭтотОбъект);
				стрИзменение = Формат(ЭтотОбъект._5LB_ДатаСоздания, "ДФ='dd.MM.yy HH:mm'") +
					" Создана новая номенклатура";
			Иначе
				//ОбрСоотв.ПолучитьСтрСоответствиеНоменклатуры(ЭтотОбъект.Ссылка)					
				бТолькоИзменениеРеквизитов = Истина;				
				стрИзменение = ОбщегоНазначения5LB.ПолучитьИзмененияОбъектаСтрокой(Ссылка, бТолькоИзменениеРеквизитов);
			КонецЕсли;
			
				
			
			//ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Информация,,, 
			//	"");
			бЕстьСоотвНоменклатуры = ОбрСоотв.ЕстьСоответствиеНоменклатуры(Ссылка);

			//	12.07.17 Вялов - отклчюено по согласованию с рук. Ивановым И.	
			//		// < 20.05.17 Вялов
			//		// добавление (согласовано с Ивановым И.) - ограничение изменения наименования у номеклатуры
			//		// которая имеет соответствие и характеристики
			//		Если Найти(стрИзменение, "НаименованиеПолное:") > 0 Тогда 	// если меняется наименование полное
			//			Если бЕстьСоотвНоменклатуры Тогда
			//				стрСоотв = ОбрСоотв.НайтиСоответствиеНоменклатуры(Ссылка); 
			//				Если ЗначениеЗаполнено(стрСоотв.Характеристика) Тогда					
			//					
			//					стрСообщ = "Запрещено менять наименование номенклатуры УТ-10, у которой есть соответствие с номенклатурой и характеристикой УТ-11!"
			//						+ Символы.ПС + "Для изменения наименования данной номенклатуры - создайте задачу для IT-отдела";
			//					Сообщить(стрСообщ, СтатусСообщения.Важное);
			//					Отказ = Истина;
			//					ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Ошибка,,,  стрСообщ)
			//
			//				КонецЕсли;
			//			КонецЕсли;
			//		КонецЕсли;
			
			Если НЕ Отказ Тогда   // Отказ = Ложь
			// 20.05.17 Вялов >

			
				// только если есть изменение хотя бы одном реквизите
				Если (
					стрИзменение <> "" 
					// 19.02.17 Вялов - либо нет соответствия
					ИЛИ НЕ бЕстьСоотвНоменклатуры
					)
					Тогда
						
					    				
						
						бЕстьОбмен = ОбрСоотв.НоменклатураДоступнаДляОбмена(Ссылка);				
						НоменклатураУТ11 = ОбрСоотв.ПолучитьНоменклатуру(Ссылка);
						
						// если НЕ синхронизировать (исключение)
						Статус = 0;		// -1-исключить, 0-нет и создать, 1-есть обновить, 2-есть и удалить (пометить)				
						Если ЗначениеЗаполнено(НоменклатураУТ11) Тогда 	
							Статус = ?(бЕстьОбмен, 1, 2);
						Иначе
							Статус = ?(бЕстьОбмен, 0, -1);
						КонецЕсли;
						Если Статус = 1 Тогда
							Если Ссылка.ПометкаУдаления Тогда	// пометка удаления	
								Статус = 2;
							Иначе
								//Если НоменклатураУТ11.ПометкаУдаления Тогда
								//ОбъектНоменклатураУТ11 = НоменклатураУТ11.ПолучитьОбъект();
								//ОбъектНоменклатураУТ11.Ус
							КонецЕсли;
						КонецЕсли;	
						Если Статус = 0 Тогда
							стрСтатус = "создать новый";
						ИначеЕсли Статус = 1 Тогда
							стрСтатус = "есть объект - необходимо обновить";
						ИначеЕсли Статус = -1 Тогда
							стрСтатус = "исключить (в обмене не учавствует)";
						Иначе
							стрСтатус = "пометить на удаление (в обмене не учавствует)";
						КонецЕсли;
						ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Информация,,, 
							Строка(Ссылка) + " - синхронизируется номенклатура УТ-10 и УТ-11 : " +  стрСтатус);
								
						// ****	  				
						Если Статус = 2 Тогда	// пометка удаления	 (т.е. элемент есть и его нужно пометить на удаление)
									
							// удалить соответсвие в р.с. (если есть)
							Если 
								//ОбрСоотв.ЕстьСоответствиеНоменклатуры(Ссылка) 
								бЕстьСоотвНоменклатуры
								Тогда
								ОбрСоотв.УдалитьЗаписьСоответствий(Ссылка);	
							КонецЕсли;
							// если есть штрих-код
							ОбрСоотв.УдалитьЗаписьШтрихКод(НоменклатураУТ11);

							// ед.измерения
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	Упаковки.Ссылка
								|ИЗ
								|	Справочник._УпаковкиЕдиницыИзмерения_УТ11 КАК Упаковки
								|ГДЕ
								|	Упаковки.Владелец = &Владелец
								|	И НЕ Упаковки.ПометкаУдаления";			
							Запрос.УстановитьПараметр("Владелец", НоменклатураУТ11);
							РезультатЗапроса = Запрос.Выполнить();			
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								Попытка
									ЕдИзмОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
									ЕдИзмОбъект.УстановитьПометкуУдаления(Истина);
									ЕдИзмОбъект.Записать();
									//бПродолжить
								Исключение
								КонецПопытки;  
							КонецЦикла;

							// если есть х-ка			
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ХарактеристикиН.Ссылка
								|ИЗ
								|	Справочник._ХарактеристикиНоменклатуры_УТ11 КАК ХарактеристикиН
								|ГДЕ
								|	ХарактеристикиН.Владелец = &Владелец
								|	И НЕ ХарактеристикиН.ПометкаУдаления";			
							Запрос.УстановитьПараметр("Владелец", НоменклатураУТ11);
							РезультатЗапроса = Запрос.Выполнить();			
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								Попытка
									ХарактеристикаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
									ХарактеристикаОбъект.УстановитьПометкуУдаления(Истина);
									ХарактеристикаОбъект.Записать();
									//бПродолжить
								Исключение
								КонецПопытки;  
							КонецЦикла;

							// если есть номенклатура			
							Если ЗначениеЗаполнено(НоменклатураУТ11) Тогда
								Попытка
									НоменклатураУТ11Объект = НоменклатураУТ11.ПолучитьОбъект();
									НоменклатураУТ11Объект.УстановитьПометкуУдаления(Истина);
									НоменклатураУТ11Объект.Записать();
									//бПродолжить
								Исключение
								КонецПопытки;
							КонецЕсли;
									
						ИначеЕсли Статус = 1 Тогда		// если не пометка удаления - есть и обновить!
									
							// там же - без обн. ШК и соответствий - т.к. они синхронизируются в других объектах
							НоменклатураХарактеристика = ОбрСоотв.НайтиСоответствиеНоменклатуры(Ссылка); 
							СтруктураНоменклатураУТ11 = НоменклатураХарактеристика.Номенклатура;
							СтруктураХарактеристикаУТ11 = НоменклатураХарактеристика.Характеристика;	
							Если НЕ ЗначениеЗаполнено(СтруктураНоменклатураУТ11) Тогда					
								РезОбновления = ОбрСоотв.ОбновитьЗаписьСоответствий(Ссылка, НоменклатураУТ11, СтруктураХарактеристикаУТ11);  
								Если НЕ РезОбновления Тогда
								статусСообщ = СтатусСообщения.Важное;
									стрСообщ = "Не удалось создать запись связи номенклатуры УТ-10 и новой номенклатуры УТ-11!";
									Сообщить(стрСообщ, статусСообщ);
									Отказ = Истина;
									ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Ошибка,,,  стрСообщ)
								КонецЕсли;  
							КонецЕсли;
				
							РезОбновления = ОбрСоотв.ОбновитьНоменклатуруСРеквизитами(
									Ссылка, НоменклатураУТ11, СтруктураХарактеристикаУТ11, Истина,
									стрИзменение);										
							Если РезОбновления Тогда	
								
								ОбрСоотв.СинхронизироватьШтрихКод(Ссылка, НоменклатураУТ11, СтруктураХарактеристикаУТ11);	
								ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Информация,,, "Номенклатура УТ-11 успешно обновлена");
								
							Иначе
								статусСообщ = СтатусСообщения.Важное;
								стрСообщ = "Не удалось обновить номенклатуру (и характеристику) для обмена с УТ-11!";
								Сообщить(стрСообщ, статусСообщ);
								Отказ = Истина;
								ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Ошибка,,,  стрСообщ);
							КонецЕсли;
						//Статус = 0									
						//КонецЕсли;
							
						// нет н-ры УТ-11 - создать  "Статус = 0"
						ИначеЕсли Статус = 0 Тогда					
						//Если Статус = 0 Тогда
						
							стрСообщНеУдалось = "Не удалось обновить номенклатуру (и характеристику) для обмена с УТ-11!";

						    // ***********************
							// фоновое задание
							Если (Строка(ПараметрыСеанса.ТекущийПользователь) = "Не авторизован" И РольДоступна("ПолныеПрава")) Тогда
								//ЭтоФоновоеЗадание = Истина;									
									
								стрИДРаздел = стрЗаголовок;	
		
								стрСообщ = Формат(ТекущаяДата(), "ДФ='dd.MM.yyyy HH:mm:ss'") + " Фоновое задание " + Символы.ПС
											+ стрСообщНеУдалось + Символы.ПС
											+ Строка(Ссылка) + " ( " + Строка(Ссылка.Код) + ")" + Символы.ПС
											+ " изменились реквизиты """ + стрИзменение + """" + Символы.ПС 																			
											+ "В режиме фоновых заданий - интерактивные действия не доступны!";
											
											//ЗаписьЖурналаРегистрации(стрТема, УровеньЖурналаРегистрации.Ошибка ,,, стрСообщ);
								ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Ошибка,,,  стрСообщ);

								//КаталогФайловНаДиске = КаталогВременныхФайлов();  	
								//ИмяЛогФайла = КаталогФайловНаДиске + "\" + ИмяФайлаПротокола;   
								массивАдреса = ОбщегоНазначения5LB.ПолучитьПсевдонимыПоМаске("Почта", стрИДРаздел);
								Если массивАдреса.Количество() > 0 Тогда															
											
										массивПисем = Новый Массив;
										массивПисем.Очистить();
											
										письмо = Новый ИнтернетПочтовоеСообщение;
										письмо.Тема = стрЗаголовок; 
										письмо.Тексты.Добавить(стрСообщ);
										письмо.Отправитель = "retail.shop@5lb.ru";
										письмо.ИмяОтправителя = "1С-интеграция";									
										//письмо.Вложения.Добавить(ИмяЛогФайла);									
										Если массивАдреса.Количество() > 0 Тогда
											Для Каждого ТекАдрес Из массивАдреса Цикл
												письмо.Получатели.Добавить(ТекАдрес);
											КонецЦикла;
										КонецЕсли;										
										массивПисем.Добавить(письмо);				
									
										Если массивПисем.Количество() > 0 Тогда
											РаботаСРегламентныеЗаданиями.ОтправитьЭлектронныеПисьма(массивПисем);
										КонецЕсли;			
										
								КонецЕсли;
									
							// ***********************			
							// пользователь - интерактивно
							Иначе

								// интерактивный диалог - для ввода н-ры + х-ки
					            РезСоотв = ОбрСоотв.ПолучитьСтрСоответствиеНоменклатуры(Ссылка);				
								стрСообщ = "";
								бСоздать = Истина;				
								Если НЕ ЗначениеЗаполнено(РезСоотв) Тогда
									//стрСообщ = "Не задано наименование (и характеристика) новой номенклатуры в УТ-11!";
									бСоздать = Ложь;
								Иначе
									Попытка	
										Если СокрЛП(РезСоотв.Номенклатура_УТ11) = "" Тогда										
											бСоздать = Ложь;
										КонецЕсли;						
									Исключение
										бСоздать = Ложь;
									КонецПопытки;
								КонецЕсли;
								
								// если нет наименования - ошибка!
								Если НЕ бСоздать Тогда					
						//			статусСообщ = СтатусСообщения.Важное;
						//			стрСообщ = "Не задано наименование (и характеристика) новой номенклатуры для обмена с УТ-11!";
						//			Сообщить(стрСообщ, статусСообщ);
						//			Отказ = Истина;
						////			НоваяНоменклатура = ТекСтр.Номенклатура_УТ11;
						
									стрСообщ = "Не задано наименование (и характеристика) новой номенклатуры для обмена с УТ-11!";
									статусСообщ = СтатусСообщения.Важное;
									Сообщить(стрСообщ, статусСообщ);
									ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Ошибка,,,  стрСообщ);

									Отказ = Истина;
						//			НоваяНоменклатура = ТекСтр.Номенклатура_УТ11;
		  								
						
								Иначе 				
										
								    статусСообщ = СтатусСообщения.Обычное;	
									стрСообщ = "Создана новая номенклатура (и характеристика) для обмена с УТ-11!";
									
									стрХарактеристика = СокрЛП(РезСоотв.Характеристика_УТ11);							
									НоваяНоменклатура = ОбрСоотв.СоздатьНоменклатуруСРеквизитамиПоУмолчанию(
										Ссылка, РезСоотв.Номенклатура_УТ11, стрХарактеристика);
										
									// если новая н-ра создана					
									Если ЗначениеЗаполнено(НоваяНоменклатура) Тогда	
										
										стрСообщ = "Создана новая номенклатура (и характеристика) для обмена с УТ-11!";
										
										НоваяХарактеристика = Справочники._ХарактеристикиНоменклатуры_УТ11.ПустаяСсылка();
										//{+НАЧАЛО+Редактирования} Автор: Тасмаджиев 02/03/2018//=============================================================================================
										//Если ЗначениеЗаполнено(стрХарактеристика) Тогда	
											//{-КОНЕЦ-Редактирования} Автор: Тасмаджиев 02/03/2018//==============================================================================================
											
											НоваяХарактеристика = ОбрСоотв.НайтиСоздатьХарактеристику(НоваяНоменклатура, 					
												стрХарактеристика, Ложь,ЭтотОбъект);			
											Если ЗначениеЗаполнено(НоваяХарактеристика) Тогда
						//			//		//	ТекСтр.ХарактеристикиНоменклатуры_УТ11 = НоваяХарактеристика;
						//			//		//	ТекстСообщения = ТекстСообщения + " + NEW """ + Строка(НоваяХарактеристика) + """";
											КонецЕсли;
						//			//		//бУспешно = НЕ ОбрСоотв.ОбновитьЗаписьСоответствий(ТекСтр.Номенклатура,
						//			//		//НоваяНоменклатура, НоваяХарактеристика);                         
						                //{+НАЧАЛО+Редактирования} Автор: Тасмаджиев 02/03/2018//=============================================================================================	
										//КонецЕсли;		
										//{-КОНЕЦ-Редактирования} Автор: Тасмаджиев 02/03/2018//==============================================================================================
										
										//Сообщить(стрСообщ, статусСообщ);

										бНЕУспешно = НЕ ОбрСоотв.ОбновитьЗаписьСоответствий(Ссылка, НоваяНоменклатура, НоваяХарактеристика);  
										Если бНЕУспешно Тогда
											стрСообщ = "Не удалось создать запись связи номенклатуры УТ-10 и новой номенклатуры УТ-11!";
											статусСообщ = СтатусСообщения.Важное;
											//Сообщить(стрСообщ, статусСообщ);
										Иначе
											стрСообщ = "Создана запись связи номенклатуры УТ-10 и новой номенклатуры для обмена с УТ-11!";
											статусСообщ = СтатусСообщения.Обычное;
										КонецЕсли;
										
										Сообщить(стрСообщ, статусСообщ);
									 	ЗаписьЖурналаРегистрации(стрЗаголовок, 
											?(бНЕУспешно,  УровеньЖурналаРегистрации.Ошибка, УровеньЖурналаРегистрации.Информация)
											,,,  стрСообщ);

									// если новая н-ра НЕ создана	
									Иначе
						            	статусСообщ = СтатусСообщения.Важное;
										стрСообщ = "Не удалось создать новую номенклатуру (и характеристику) для обмена с УТ-11!";
										Сообщить(стрСообщ, статусСообщ);
										Отказ = Истина;
									 	ЗаписьЖурналаРегистрации(стрЗаголовок, УровеньЖурналаРегистрации.Ошибка	,,,  стрСообщ);

									КонецЕсли;
									
								КонецЕсли;  // проверка - введено ли наименование?
								
							// ***********************
							// фоновое задание или интерактивные действия пользователя
							КонецЕсли;
						// ****		
						КонецЕсли;// есть или нет н-ра УТ-11  "Статус = -1,0,1,2"					
					
					
						//Если Отказ Тогда
						//	ТекстСообщения = Строка(Ссылка) + " - не удалось синхронизировать текущую номенклатуру и номенклатуру УТ-11!";
						//	ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);		
						//КонецЕсли;																											
							
						
				КонецЕсли;		// только если есть изменение хотя бы одном реквизите
			
			// < 20.05.17 Вялов 
			//Иначе	// Отказ
			//	ТекстСообщения = Строка(Ссылка) + " - не удалось синхронизировать текущую номенклатуру и номенклатуру УТ-11!";
			//	ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);																															
			КонецЕсли;	
			// 20.05.17 Вялов >
			
			Если Отказ Тогда
				ТекстСообщения = Строка(Ссылка) + " - не удалось синхронизировать текущую номенклатуру и номенклатуру УТ-11!";
				ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);		
			КонецЕсли;	
						
				
		КонецЕсли;	// только для элементов
		
	КонецЕсли;	// в режиме обмене - нет			
	КонецЕсли;		// не отказ			
	// 16.01.17 Вялов - ИНТЕГРАЦИЯ - обязательная проверка и создание Н+Х УТ-11 >

	КонецЕсли;  //НМА 11.07.17
	



	
КонецПроцедуры

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	Префикс = "111111";
КонецПроцедуры

мОтправитьВ_WMS = ЛОЖЬ;
// Катков А. 14.10.2016 << 
