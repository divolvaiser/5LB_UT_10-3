Перем ТекущийРежим;


Процедура ЗаполнитьПоПериоду(Дата1,Дата2) Экспорт
	
	СписАк = Новый СписокЗначений;
	СписАк.Добавить(Перечисления.СтатусыСборкиЗаказа.УКурьера);
	СписАк.Добавить(Перечисления.СтатусыСборкиЗаказа.Собран);
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	Зак.Ссылка КАК Документ
	              |ИЗ
	              |	Документ.ЗаказПокупателя КАК Зак
	              |ГДЕ
	              |	Зак.Проведен
	              |	И Зак.ДатаОтгрузки  = &Дат2
	              |	И Зак.СтатусыСборкиЗаказа В(&Статусы)";
	              //|
				  //|ОБЪЕДИНИТЬ
				  //|
				  //|ВЫБРАТЬ
				  //|	Пере.Ссылка
				  //|ИЗ
				  //|	Документ.ПеремещениеТоваров КАК Пере
				  //|ГДЕ
				  //|	Пере.Проведен
				  //|	И Пере.Дата МЕЖДУ &Дат1 И &Дат2
				  //|	И Пере.СтатусСборки = ЗНАЧЕНИЕ(Перечисление.СтатусыСборкиЗаказа.Собран)";
	
	//Запрос.УстановитьПараметр("Дат1",НачалоДня(Дата1));
	Запрос.УстановитьПараметр("Дат2",НачалоДня(Дата2));
	Запрос.УстановитьПараметр("Статусы",СписАк.ВыгрузитьЗначения());
	
	ТабДокументы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
		
	Штрих = ИщемШтрихПакета();
	Если Штрих = Неопределено Тогда
		Штрих = СоздаёмШтрихПакета();
	ИначеЕсли Штрих = "Косяк" Тогда
		#Если Клиент Тогда
			Предупреждение ("Нарушение штрих-кодирования! Обратитесь к руководству!");
		#КонецЕсли
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Если (ТекущийРежим = РежимЗаписиДокумента.Запись) Тогда
		УстановитьОтветственного(Отказ);
	КонецЕсли;
	
	
	
КонецПроцедуры

Функция ИщемШтрихПакета()  Экспорт
	Штрих = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Р.Штрихкод
	             |ИЗ
	             |	РегистрСведений.ШтрихкодыПакетыСклДоков КАК Р
	             |ГДЕ
	             |	Р.Владелец = &Док";
	Запрос.УстановитьПараметр("Док",ЭтотОбъект.Ссылка);
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Штрих;
	КонецЕсли;
	
	Выб = Рез.Выбрать();
	Если Выб.Количество()>1 Тогда
		Штрих = "Косяк";
		Возврат Штрих;
	КонецЕсли;
	
	Выб.Следующий();
	Штрих = Выб.Штрихкод;
	Возврат Штрих;
КонецФункции

Функция СоздаёмШтрихПакета() 
	Штрих = Неопределено;
	ТекЗапись = РегистрыСведений.ШтрихкодыПакетыСклДоков.СоздатьМенеджерЗаписи();
	
	ТекЗапись.Владелец         = Ссылка;
	ТекЗапись.ТипШтрихкода     = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
	ТекЗапись.Штрихкод         = СформироватьШтрихКодЗаказа();
	
	Попытка
		Штрих = ТекЗапись.Штрихкод;
		ТекЗапись.Записать();
		Исключение
	КонецПопытки;

	Возврат Штрих
   
КонецФункции

Функция СформироватьШтрихКодЗаказа(Знач ПрефиксШтучногоТовара = Неопределено, Знач ПрефиксВнутреннегоШтрихкода = Неопределено)
	
	Если ПрефиксШтучногоТовара = Неопределено Тогда
		ПрефиксШтучногоТовара = СокрЛП(Константы.ПрефиксШтучногоТовара.Получить());
	КонецЕсли;

	Если ПрефиксВнутреннегоШтрихкода = Неопределено Тогда
		ПрефиксВнутреннегоШтрихкода = Константы.ПрефиксВнутреннегоШтрихкода.Получить();
	КонецЕсли;

	
	ПрефиксШтучногоТовара = ?(ПустаяСтрока(ПрефиксШтучногоТовара), "0", ПрефиксШтучногоТовара);
	ПрефиксВнутреннегоШтрихкода = Формат(ПрефиксВнутреннегоШтрихкода, "ЧЦ=2; ЧН=; ЧВН=");


	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПОДСТРОКА(РегШтрихКоды.Штрихкод, 5, 8)) КАК Код
	|ИЗ
	|	РегистрСведений.ШтрихкодыПакетыСклДоков КАК РегШтрихКоды
	|ГДЕ
	|	РегШтрихКоды.ТипШтрихкода = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыШтрихкодов.EAN13)
	|	И РегШтрихКоды.Штрихкод ПОДОБНО ""2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + "_________""
	|");

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ТекКод = ?(Выборка.Код = NULL, 1, Мин(ОбщегоНазначения.ПривестиСтрокуКЧислу(Выборка.Код) + 1, 99999999));

	Штрихкод = "2" + ПрефиксШтучногоТовара + ПрефиксВнутреннегоШтрихкода + Формат(ТекКод, "ЧЦ=8; ЧВН=; ЧГ=");
	Штрихкод = Штрихкод + КонтрольныйСимволEAN(ШтрихКод, 13);

	Возврат Штрихкод;

КонецФункции 

Функция КонтрольныйСимволEAN(ШтрихКод, Тип) Экспорт

	Четн   = 0;
	Нечетн = 0;

	КоличествоИтераций = ?(Тип = 13, 6, 4);

	Для Индекс = 1 По КоличествоИтераций Цикл
		Если (Тип = 8) и (Индекс = КоличествоИтераций) Тогда
		Иначе
			Четн   = Четн   + Сред(ШтрихКод, 2 * Индекс, 1);
		КонецЕсли;
		Нечетн = Нечетн + Сред(ШтрихКод, 2 * Индекс - 1, 1);
	КонецЦикла;

	Если Тип = 13 Тогда
		Четн = Четн * 3;
	Иначе
		Нечетн = Нечетн * 3;
	КонецЕсли;

	КонтЦифра = 10 - (Четн + Нечетн) % 10;

	Возврат ?(КонтЦифра = 10, "0", Строка(КонтЦифра));

КонецФункции 

Процедура УстановитьОтветственного(Отказ)
	
	НачатьТранзакцию();
	Для Каждого ст из ТабДокументы Цикл
		Об = ст.Документ.ПолучитьОбъект();
		Об.Ответственный = ЭтотОбъект.ОтветственныйЗаДокументы;
		Попытка
			Об.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			Отказ=Истина;
			ОтменитьТранзакцию();
			#Если Клиент Тогда
				Сообщить(ОписаниеОшибки());
			#КонецЕсли
			Возврат;
		КонецПопытки;
		ЗафиксируемОтветственного (Об,"Определено");
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	НачатьТранзакцию();
	Для Каждого ст из ТабДокументы Цикл
		Об = ст.Документ.ПолучитьОбъект();
		Об.АдресХранения = Перечисления.АдресХраненияЗаказа.РЦ;
		Об.Ответственный = Неопределено;
		Попытка
			Об.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			Отказ=Истина;
			ОтменитьТранзакцию();
			#Если Клиент Тогда
				Сообщить(ОписаниеОшибки());
			#КонецЕсли
			Возврат;
		КонецПопытки;
		ЗафиксируемОтветственного (Об,Неопределено);
	КонецЦикла;
	ЗафиксироватьТранзакцию();
		
КонецПроцедуры

Процедура ЗафиксируемОтветственного (Зак,Отв)
	
	Набор = РегистрыСведений.ИсторияОтветственногоПоЗаказу.СоздатьНаборЗаписей();
	
	Набор.Отбор.Документ.Установить(Зак.Ссылка);
	Набор.Отбор.Период.Установить(ТекущаяДата());
	
	СтрокаДанных = Набор.Добавить();
	
	СтрокаДанных.Ответственный = ?(Отв=Неопределено,Справочники.Пользователи.ПустаяСсылка(),ЭтотОбъект.ОтветственныйЗаДокументы);
	СтрокаДанных.Документ = Зак.Ссылка;
	СтрокаДанных.Период = ТекущаяДата();
	Набор.Записать();

	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если (НЕ ЗначениеЗаполнено(ЭтотОбъект.СкладОтправитель)) ИЛИ
		(НЕ ЗначениеЗаполнено(ЭтотОбъект.СкладПолучатель)) Тогда
		#Если Клиент Тогда
			Сообщить("Не все поля заполнены! ""Склад отправитель"" или ""Склад получатель""!");
		#КонецЕсли
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	ТекущийРежим = РежимЗаписи;

КонецПроцедуры
