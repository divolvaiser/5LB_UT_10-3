#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
//#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	КурсВзаиморасчетов = 1;
	КратностьВзаиморасчетов = 1;
	
КонецПроцедуры

Процедура  ЗаполнитьСтрокуТЧ(СтрокаТЗ) Экспорт
	
Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Заказ
		|ПОМЕСТИТЬ ВТ_Заказ
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Ссылка = &Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтрихкодыЗаказы.Штрихкод,
		|	ШтрихкодыЗаказы.Владелец
		|ПОМЕСТИТЬ ВТ_Штрихкод
		|ИЗ
		|	РегистрСведений.ШтрихкодыЗаказы КАК ШтрихкодыЗаказы
		|ГДЕ
		|	ШтрихкодыЗаказы.Владелец = &Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Заказы4Logistic.Заказ,
		|	ЕСТЬNULL(Заказы4Logistic.Вес, 0) КАК Вес
		|ПОМЕСТИТЬ ВТ_Вес
		|ИЗ
		|	РегистрСведений.Заказы4Logistic КАК Заказы4Logistic
		|ГДЕ
		|	Заказы4Logistic.Заказ = &Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказ.Заказ,
		|	ВТ_Штрихкод.Штрихкод,
		|	ВТ_Вес.Вес
		|ИЗ
		|	ВТ_Заказ КАК ВТ_Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Штрихкод КАК ВТ_Штрихкод
		|		ПО ВТ_Заказ.Заказ = ВТ_Штрихкод.Владелец
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Вес КАК ВТ_Вес
		|		ПО ВТ_Заказ.Заказ = ВТ_Вес.Заказ";
		
		Запрос.УстановитьПараметр("Заказ",СтрокаТЗ.Заказ.Ссылка);
		
		Рез=Запрос.Выполнить();
		
		Если НЕ Рез.Пустой() Тогда
			
			Выборка = Рез.Выбрать();
		    Выборка.Следующий();
			СтрокаТЗ.СтатусСборки = СтрокаТЗ.Заказ.СтатусыСборкиЗаказа;
			СтрокаТЗ.Сумма  = СтрокаТЗ.Заказ.СуммаДокумента;
			СтрокаТЗ.Штрихкод = Выборка.Штрихкод;
			СтрокаТЗ.ВесЗаказа  = Выборка.Вес;
			
		КонецЕсли;
		
КонецПроцедуры
//#КонецОбласти
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	
КонецПроцедуры

#Область Печать

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("АктПриемаПередачиТМЦ","Акт приема передачи ТМЦ");
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		
	    СообщениеП = Новый СообщениеПользователю;
		СообщениеП.Текст = "Документ можно распечатать только после его проведения";
		СообщениеП.Сообщить();
		
		Возврат;
		
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		
		СообщениеП = Новый СообщениеПользователю;
		СообщениеП.Текст = "Документ можно распечатать только после его проведения";
		СообщениеП.Сообщить();
		
		Возврат;
		
	КонецЕсли;

	//Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
	//	Возврат;
	//КонецЕсли;

	Если ИмяМакета = "АктПриемаПередачиТМЦ" тогда

		ТабДокумент = ПечатьАктПриемаПередачиТМЦ();

		КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект));

КонецПроцедуры

Функция ПечатьАктПриемаПередачиТМЦ()
	
	Макет = ПолучитьМакет("АктПриемаПередачиТМЦ");
	
	   Запрос =  Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	_5LB_ПлановоеПоступлениеЗаказыПокупателей.Заказ
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ._5LB_ПлановоеПоступление.ЗаказыПокупателей КАК _5LB_ПлановоеПоступлениеЗаказыПокупателей
		|ГДЕ
		|	_5LB_ПлановоеПоступлениеЗаказыПокупателей.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказПокупателяТовары.Количество,
		|	ЗаказПокупателяТовары.Ссылка.Номер КАК НомерЗаказа,
		|	ВЫРАЗИТЬ(ЗаказПокупателяТовары.Номенклатура.Наименование КАК СТРОКА(1024)) КАК Номенклатура,
		|	ВЫРАЗИТЬ(ЗаказПокупателяТовары.Ссылка.Комментарий КАК СТРОКА(1024)) КАК Комментарий
		|ПОМЕСТИТЬ ВТ_Подготовлена
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		|		ПО ВТ_Заказы.Заказ = ЗаказПокупателяТовары.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Подготовлена.Номенклатура,
		|	КОЛИЧЕСТВО(ВТ_Подготовлена1.Номенклатура) КАК НомерПозиции,
		|	ВТ_Подготовлена.Количество,
		|	ВТ_Подготовлена.НомерЗаказа,
		|	ВТ_Подготовлена.Комментарий
		|ИЗ
		|	ВТ_Подготовлена КАК ВТ_Подготовлена
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Подготовлена КАК ВТ_Подготовлена1
		|		ПО ВТ_Подготовлена.Номенклатура <= ВТ_Подготовлена1.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Подготовлена.Номенклатура,
		|	ВТ_Подготовлена.Количество,
		|	ВТ_Подготовлена.НомерЗаказа,
		|	ВТ_Подготовлена.Комментарий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПозиции";
		
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
		
		ТЗ =Запрос.Выполнить().Выгрузить();
		

	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктПриемаПередачиТМЦ";
	
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	ОбластьМакетаСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	Для каждого Стр из ТЗ Цикл
		
		ОбластьМакетаСтрокаТаблицы.Параметры.НомерПозиции = Стр.НомерПозиции ;
		ОбластьМакетаСтрокаТаблицы.Параметры.Номенклатура = Стр.Номенклатура ;
		ОбластьМакетаСтрокаТаблицы.Параметры.НомерЗаказа  = Стр.НомерЗаказа ;
		ОбластьМакетаСтрокаТаблицы.Параметры.Количество   = Стр.Количество ;
		ОбластьМакетаСтрокаТаблицы.Параметры.Комментарий  = Стр.Комментарий ;
		ТабДокумент.Вывести(ОбластьМакетаСтрокаТаблицы); 
		
	КонецЦикла;	
	
	ОбластьМакетаОтветственныеЛица = Макет.ПолучитьОбласть("ОтветственныеЛица");
	ОбластьМакетаОтветственныеЛица.Параметры.Дата = Формат(Дата,"ДФ=dd.MM.yyyy");
	ТабДокумент.Вывести(ОбластьМакетаОтветственныеЛица);
	
	
	ОбластьМакетаЛинияОтрыва = Макет.ПолучитьОбласть("ЛинияОтрыва");
	ТабДокумент.Вывести(ОбластьМакетаЛинияОтрыва);
	
	ОбластьМакетаШапкаВодителю = Макет.ПолучитьОбласть("ШапкаВодителю");
	ТабДокумент.Вывести(ОбластьМакетаШапкаВодителю);
	
	ОбластьМакетаЗаголовокТаблицыВодителю = Макет.ПолучитьОбласть("ЗаголовокТаблицыВодителю");
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицыВодителю);
	
	
	ОбластьМакетаСтрокаТаблицыВодителю = Макет.ПолучитьОбласть("СтрокаТаблицыВодителю");
	
	Для каждого Стр из ТЗ Цикл
		
		ОбластьМакетаСтрокаТаблицыВодителю.Параметры.НомерПозиции = Стр.НомерПозиции ;
		ОбластьМакетаСтрокаТаблицыВодителю.Параметры.Номенклатура = Стр.Номенклатура ;
		ОбластьМакетаСтрокаТаблицыВодителю.Параметры.НомерЗаказа  = Стр.НомерЗаказа ;
		ОбластьМакетаСтрокаТаблицыВодителю.Параметры.Количество   = Стр.Количество ;
		ОбластьМакетаСтрокаТаблицыВодителю.Параметры.Комментарий  = Стр.Комментарий ;
		ТабДокумент.Вывести(ОбластьМакетаСтрокаТаблицыВодителю); 
		
	КонецЦикла;	
	
	ОбластьМакетаОтветственныеЛицаВодитель = Макет.ПолучитьОбласть("ОтветственныеЛицаВодитель");
	ОбластьМакетаОтветственныеЛицаВодитель.Параметры.Дата = Формат(Дата,"ДФ=dd.MM.yyyy");
	ТабДокумент.Вывести(ОбластьМакетаОтветственныеЛицаВодитель);
	
	//---------------------------------------------------
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц(); 
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;
	
КонецФункции 

#КонецОбласти

#КонецЕсли

